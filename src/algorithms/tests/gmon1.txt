Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
 97.27     18.13    18.13                             TransitionDistribution<int, int>::GetTransition(int, int, int) const
  0.80     18.28     0.15                             tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect::value_type& tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::operator[]<Transition<int, int> const&, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, (void*)0>(Transition<int, int> const&)
  0.48     18.37     0.09                             std::_Rb_tree_node<int>* std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_copy<std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>(std::_Rb_tree_node<int> const*, std::_Rb_tree_node_base*, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node&)
  0.43     18.45     0.08                             PolicyEvaluation::getValue(int, int) const
  0.27     18.50     0.05                             Vector::operator[](int) const
  0.21     18.54     0.04                             std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
  0.11     18.56     0.02                             std::pair<tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::hopscotch_iterator<false>, bool> tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::insert_impl<std::piecewise_construct_t const&, std::tuple<Transition<int, int> const&>, std::tuple<> >(unsigned long, unsigned long, std::piecewise_construct_t const&, std::tuple<Transition<int, int> const&>&&, std::tuple<>&&)
  0.11     18.58     0.02                             std::vector<tsl::detail_hopscotch_hash::hopscotch_bucket<std::pair<Transition<int, int>, double>, 62u, false>, std::allocator<tsl::detail_hopscotch_hash::hopscotch_bucket<std::pair<Transition<int, int>, double>, 62u, false> > >::_M_default_append(unsigned long)
  0.05     18.59     0.01                             SingularDistribution::setMean(double)
  0.05     18.60     0.01                             tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::hopscotch_hash(tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > > const&)
  0.05     18.61     0.01                             std::pair<tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > > > >::hopscotch_iterator<false>, bool> tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > > > >::insert_impl<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >(unsigned long, unsigned long, std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >&&)
  0.05     18.62     0.01                             Vector::Vector(Vector const&)
  0.05     18.63     0.01                             MDP<int, int>::getNextStates(int, int) const
  0.05     18.64     0.01                             MDP<int, int>::getRewardProbability(int const&, int const&, double) const
  0.00     18.64     0.00     8449     0.00     0.00  Vector::operator()(int)
  0.00     18.64     0.00      151     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::size() const
  0.00     18.64     0.00      140     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::operator[](unsigned long)
  0.00     18.64     0.00      119     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00     18.64     0.00       98     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
  0.00     18.64     0.00       98     0.00     0.00  std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&)
  0.00     18.64     0.00       90     0.00     0.00  TreeBRLPolicy::BeliefState** std::__niter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       75     0.00     0.00  TreeBRLPolicy::BeliefState*&& std::forward<TreeBRLPolicy::BeliefState*>(std::remove_reference<TreeBRLPolicy::BeliefState*>::type&)
  0.00     18.64     0.00       72     0.00     0.00  FixedDiscretePolicy** std::__niter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**)
  0.00     18.64     0.00       66     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator()
  0.00     18.64     0.00       62     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     18.64     0.00       60     0.00     0.00  __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::base() const
  0.00     18.64     0.00       60     0.00     0.00  std::move_iterator<TreeBRLPolicy::BeliefState**>::base() const
  0.00     18.64     0.00       60     0.00     0.00  std::move_iterator<TreeBRLPolicy::BeliefState**>::move_iterator(TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       60     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>)
  0.00     18.64     0.00       60     0.00     0.00  TreeBRLPolicy::BeliefState** std::__miter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       60     0.00     0.00  PolicyIteration** std::__niter_base<PolicyIteration**>(PolicyIteration**)
  0.00     18.64     0.00       60     0.00     0.00  std::move_iterator<TreeBRLPolicy::BeliefState**> std::__make_move_if_noexcept_iterator<TreeBRLPolicy::BeliefState*, std::move_iterator<TreeBRLPolicy::BeliefState**> >(TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       48     0.00     0.00  __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::base() const
  0.00     18.64     0.00       48     0.00     0.00  std::move_iterator<FixedDiscretePolicy**>::base() const
  0.00     18.64     0.00       48     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::size() const
  0.00     18.64     0.00       48     0.00     0.00  std::move_iterator<FixedDiscretePolicy**>::move_iterator(FixedDiscretePolicy**)
  0.00     18.64     0.00       48     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>)
  0.00     18.64     0.00       48     0.00     0.00  FixedDiscretePolicy** std::__miter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**)
  0.00     18.64     0.00       48     0.00     0.00  std::move_iterator<FixedDiscretePolicy**> std::__make_move_if_noexcept_iterator<FixedDiscretePolicy*, std::move_iterator<FixedDiscretePolicy**> >(FixedDiscretePolicy**)
  0.00     18.64     0.00       48     0.00     0.00  FixedDiscretePolicy*&& std::forward<FixedDiscretePolicy*>(std::remove_reference<FixedDiscretePolicy*>::type&)
  0.00     18.64     0.00       45     0.00     0.00  __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::max_size() const
  0.00     18.64     0.00       43     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator()
  0.00     18.64     0.00       40     0.00     0.00  __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::base() const
  0.00     18.64     0.00       40     0.00     0.00  std::move_iterator<PolicyIteration**>::base() const
  0.00     18.64     0.00       40     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::size() const
  0.00     18.64     0.00       40     0.00     0.00  std::move_iterator<PolicyIteration**>::move_iterator(PolicyIteration**)
  0.00     18.64     0.00       40     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<PolicyIteration**>(std::move_iterator<PolicyIteration**>)
  0.00     18.64     0.00       40     0.00     0.00  PolicyIteration** std::__miter_base<PolicyIteration**>(PolicyIteration**)
  0.00     18.64     0.00       40     0.00     0.00  std::move_iterator<PolicyIteration**> std::__make_move_if_noexcept_iterator<PolicyIteration*, std::move_iterator<PolicyIteration**> >(PolicyIteration**)
  0.00     18.64     0.00       40     0.00     0.00  PolicyIteration*&& std::forward<PolicyIteration*>(std::remove_reference<PolicyIteration*>::type&)
  0.00     18.64     0.00       36     0.00     0.00  __gnu_cxx::new_allocator<FixedDiscretePolicy*>::max_size() const
  0.00     18.64     0.00       36     0.00     0.00  void std::_Destroy_aux<true>::__destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       36     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_deallocate(TreeBRLPolicy::BeliefState**, unsigned long)
  0.00     18.64     0.00       36     0.00     0.00  void std::_Destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       36     0.00     0.00  void std::_Destroy<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&)
  0.00     18.64     0.00       35     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator()
  0.00     18.64     0.00       32     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::operator[](unsigned long)
  0.00     18.64     0.00       30     0.00     0.00  __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::__normal_iterator(TreeBRLPolicy::BeliefState** const&)
  0.00     18.64     0.00       30     0.00     0.00  Vector::Size() const
  0.00     18.64     0.00       30     0.00     0.00  __gnu_cxx::new_allocator<PolicyIteration*>::max_size() const
  0.00     18.64     0.00       30     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() const
  0.00     18.64     0.00       30     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::max_size() const
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       30     0.00     0.00  std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::max_size(std::allocator<TreeBRLPolicy::BeliefState*> const&)
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::__copy_move_a<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::__copy_move_a2<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::uninitialized_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::__uninitialized_copy_a<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&)
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::__uninitialized_move_if_noexcept_a<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*> >(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&)
  0.00     18.64     0.00       30     0.00     0.00  TreeBRLPolicy::BeliefState** std::copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**)
  0.00     18.64     0.00       24     0.00     0.00  __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::__normal_iterator(FixedDiscretePolicy** const&)
  0.00     18.64     0.00       24     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() const
  0.00     18.64     0.00       24     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::max_size() const
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<FixedDiscretePolicy*>(FixedDiscretePolicy* const*, FixedDiscretePolicy* const*, FixedDiscretePolicy**)
  0.00     18.64     0.00       24     0.00     0.00  std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::max_size(std::allocator<FixedDiscretePolicy*> const&)
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**)
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::__copy_move_a<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**)
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::__copy_move_a2<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**)
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::uninitialized_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**)
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::__uninitialized_copy_a<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, FixedDiscretePolicy*>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&)
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::__uninitialized_move_if_noexcept_a<FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*> >(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&)
  0.00     18.64     0.00       24     0.00     0.00  FixedDiscretePolicy** std::copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**)
  0.00     18.64     0.00       23     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::operator[](unsigned long)
  0.00     18.64     0.00       22     0.00     0.00  int ArgMax<double>(int, double const*)
  0.00     18.64     0.00       22     0.00     0.00  ArgMax(Vector const&)
  0.00     18.64     0.00       21     0.00     0.00  __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::new_allocator()
  0.00     18.64     0.00       21     0.00     0.00  __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::~new_allocator()
  0.00     18.64     0.00       21     0.00     0.00  std::allocator<TreeBRLPolicy::BeliefState*>::allocator()
  0.00     18.64     0.00       21     0.00     0.00  std::allocator<TreeBRLPolicy::BeliefState*>::~allocator()
  0.00     18.64     0.00       21     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::_Vector_impl()
  0.00     18.64     0.00       21     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::~_Vector_impl()
  0.00     18.64     0.00       21     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_base()
  0.00     18.64     0.00       21     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~_Vector_base()
  0.00     18.64     0.00       21     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::vector()
  0.00     18.64     0.00       21     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~vector()
  0.00     18.64     0.00       20     0.00     0.00  TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel*, int, int, double, double, TreeBRLPolicy::BeliefState*)
  0.00     18.64     0.00       20     0.00     0.00  void __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&)
  0.00     18.64     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00     18.64     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator()
  0.00     18.64     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::__normal_iterator(PolicyIteration** const&)
  0.00     18.64     0.00       20     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() const
  0.00     18.64     0.00       20     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::max_size() const
  0.00     18.64     0.00       20     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::~allocator()
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<PolicyIteration*>(PolicyIteration* const*, PolicyIteration* const*, PolicyIteration**)
  0.00     18.64     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<PolicyIteration*> >::max_size(std::allocator<PolicyIteration*> const&)
  0.00     18.64     0.00       20     0.00     0.00  void std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&)
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**)
  0.00     18.64     0.00       20     0.00     0.00  void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&)
  0.00     18.64     0.00       20     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::push_back(TreeBRLPolicy::BeliefState*&&)
  0.00     18.64     0.00       20     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator()
  0.00     18.64     0.00       20     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>&)
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::__copy_move_a<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**)
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::__copy_move_a2<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**)
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::uninitialized_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**)
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::__uninitialized_copy_a<std::move_iterator<PolicyIteration**>, PolicyIteration**, PolicyIteration*>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**, std::allocator<PolicyIteration*>&)
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::__uninitialized_move_if_noexcept_a<PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*> >(PolicyIteration**, PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&)
  0.00     18.64     0.00       20     0.00     0.00  PolicyIteration** std::copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**)
  0.00     18.64     0.00       20     0.00     0.00  std::remove_reference<TreeBRLPolicy::BeliefState*&>::type&& std::move<TreeBRLPolicy::BeliefState*&>(TreeBRLPolicy::BeliefState*&)
  0.00     18.64     0.00       19     0.00     0.00  void std::_Destroy_aux<true>::__destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**)
  0.00     18.64     0.00       19     0.00     0.00  void std::_Destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**)
  0.00     18.64     0.00       19     0.00     0.00  void std::_Destroy<FixedDiscretePolicy**, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&)
  0.00     18.64     0.00       18     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*)
  0.00     18.64     0.00       18     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const
  0.00     18.64     0.00       18     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00     18.64     0.00       18     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_deallocate(FixedDiscretePolicy**, unsigned long)
  0.00     18.64     0.00       18     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long)
  0.00     18.64     0.00       18     0.00     0.00  std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  0.00     18.64     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::deallocate(TreeBRLPolicy::BeliefState**, unsigned long)
  0.00     18.64     0.00       15     0.00     0.00  __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::allocate(unsigned long, void const*)
  0.00     18.64     0.00       15     0.00     0.00  __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::difference_type __gnu_cxx::operator-<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&, __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&)
  0.00     18.64     0.00       15     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_check_len(unsigned long, char const*) const
  0.00     18.64     0.00       15     0.00     0.00  void std::_Destroy_aux<true>::__destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**)
  0.00     18.64     0.00       15     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_deallocate(PolicyIteration**, unsigned long)
  0.00     18.64     0.00       15     0.00     0.00  std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_allocate(unsigned long)
  0.00     18.64     0.00       15     0.00     0.00  std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::deallocate(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, unsigned long)
  0.00     18.64     0.00       15     0.00     0.00  std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::allocate(std::allocator<TreeBRLPolicy::BeliefState*>&, unsigned long)
  0.00     18.64     0.00       15     0.00     0.00  void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&)
  0.00     18.64     0.00       15     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::end()
  0.00     18.64     0.00       15     0.00     0.00  std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::begin()
  0.00     18.64     0.00       15     0.00     0.00  void std::_Destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**)
  0.00     18.64     0.00       15     0.00     0.00  void std::_Destroy<PolicyIteration**, PolicyIteration*>(PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&)
  0.00     18.64     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<FixedDiscretePolicy*>::deallocate(FixedDiscretePolicy**, unsigned long)
  0.00     18.64     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<FixedDiscretePolicy*>::allocate(unsigned long, void const*)
  0.00     18.64     0.00       12     0.00     0.00  void __gnu_cxx::new_allocator<FixedDiscretePolicy*>::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy*&&)
  0.00     18.64     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::difference_type __gnu_cxx::operator-<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&, __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&)
  0.00     18.64     0.00       12     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_check_len(unsigned long, char const*) const
  0.00     18.64     0.00       12     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_allocate(unsigned long)
  0.00     18.64     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::deallocate(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, unsigned long)
  0.00     18.64     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::allocate(std::allocator<FixedDiscretePolicy*>&, unsigned long)
  0.00     18.64     0.00       12     0.00     0.00  void std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, FixedDiscretePolicy*&&)
  0.00     18.64     0.00       12     0.00     0.00  void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::emplace_back<FixedDiscretePolicy*>(FixedDiscretePolicy*&&)
  0.00     18.64     0.00       12     0.00     0.00  void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&)
  0.00     18.64     0.00       12     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::end()
  0.00     18.64     0.00       12     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::begin()
  0.00     18.64     0.00       12     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::push_back(FixedDiscretePolicy*&&)
  0.00     18.64     0.00       12     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00     18.64     0.00       12     0.00     0.00  std::remove_reference<FixedDiscretePolicy*&>::type&& std::move<FixedDiscretePolicy*&>(FixedDiscretePolicy*&)
  0.00     18.64     0.00       11     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr()
  0.00     18.64     0.00       11     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr()
  0.00     18.64     0.00       11     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr()
  0.00     18.64     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<PolicyIteration*>::deallocate(PolicyIteration**, unsigned long)
  0.00     18.64     0.00       10     0.00     0.00  __gnu_cxx::new_allocator<PolicyIteration*>::allocate(unsigned long, void const*)
  0.00     18.64     0.00       10     0.00     0.00  void __gnu_cxx::new_allocator<PolicyIteration*>::construct<PolicyIteration*, PolicyIteration*>(PolicyIteration**, PolicyIteration*&&)
  0.00     18.64     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::difference_type __gnu_cxx::operator-<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&, __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&)
  0.00     18.64     0.00       10     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_check_len(unsigned long, char const*) const
  0.00     18.64     0.00       10     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_allocate(unsigned long)
  0.00     18.64     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<PolicyIteration*> >::deallocate(std::allocator<PolicyIteration*>&, PolicyIteration**, unsigned long)
  0.00     18.64     0.00       10     0.00     0.00  std::allocator_traits<std::allocator<PolicyIteration*> >::allocate(std::allocator<PolicyIteration*>&, unsigned long)
  0.00     18.64     0.00       10     0.00     0.00  void std::allocator_traits<std::allocator<PolicyIteration*> >::construct<PolicyIteration*, PolicyIteration*>(std::allocator<PolicyIteration*>&, PolicyIteration**, PolicyIteration*&&)
  0.00     18.64     0.00       10     0.00     0.00  void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::emplace_back<PolicyIteration*>(PolicyIteration*&&)
  0.00     18.64     0.00       10     0.00     0.00  void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&)
  0.00     18.64     0.00       10     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::end()
  0.00     18.64     0.00       10     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::begin()
  0.00     18.64     0.00       10     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::push_back(PolicyIteration*&&)
  0.00     18.64     0.00       10     0.00     0.00  std::remove_reference<PolicyIteration*&>::type&& std::move<PolicyIteration*&>(PolicyIteration*&)
  0.00     18.64     0.00       10     0.00     0.00  int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
  0.00     18.64     0.00        9     0.00     0.00  std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::get() const
  0.00     18.64     0.00        9     0.00     0.00  std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.00     18.64     0.00        9     0.00     0.00  std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.00     18.64     0.00        9     0.00     0.00  std::pair<int const, int> const& std::forward<std::pair<int const, int> const&>(std::remove_reference<std::pair<int const, int> const&>::type&)
  0.00     18.64     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00     18.64     0.00        8     0.00     0.00  std::move_iterator<int*>::base() const
  0.00     18.64     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00     18.64     0.00        8     0.00     0.00  std::move_iterator<int*>::move_iterator(int*)
  0.00     18.64     0.00        8     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  0.00     18.64     0.00        8     0.00     0.00  int* std::__miter_base<int*>(int*)
  0.00     18.64     0.00        8     0.00     0.00  std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  0.00     18.64     0.00        8     0.00     0.00  char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]
  0.00     18.64     0.00        7     0.00     0.00  std::__detail::_Hash_node<std::pair<int const, int>, false>::_M_next() const
  0.00     18.64     0.00        7     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00     18.64     0.00        6     0.00     0.00  double Max<double>(int, double const*)
  0.00     18.64     0.00        6     0.00     0.00  Max(Vector const&)
  0.00     18.64     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<FixedDiscretePolicy*>::new_allocator()
  0.00     18.64     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<FixedDiscretePolicy*>::~new_allocator()
  0.00     18.64     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00     18.64     0.00        6     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
  0.00     18.64     0.00        6     0.00     0.00  std::allocator<FixedDiscretePolicy*>::allocator()
  0.00     18.64     0.00        6     0.00     0.00  std::allocator<FixedDiscretePolicy*>::~allocator()
  0.00     18.64     0.00        6     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::_Vector_impl()
  0.00     18.64     0.00        6     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::~_Vector_impl()
  0.00     18.64     0.00        6     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_base()
  0.00     18.64     0.00        6     0.00     0.00  std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~_Vector_base()
  0.00     18.64     0.00        6     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::vector()
  0.00     18.64     0.00        6     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector()
  0.00     18.64     0.00        6     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.00     18.64     0.00        6     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.00     18.64     0.00        6     0.00     0.00  std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&)
  0.00     18.64     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<PolicyIteration*>::new_allocator()
  0.00     18.64     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<PolicyIteration*>::~new_allocator()
  0.00     18.64     0.00        5     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() const
  0.00     18.64     0.00        5     0.00     0.00  __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr() const
  0.00     18.64     0.00        5     0.00     0.00  std::hash<int>::operator()(int) const
  0.00     18.64     0.00        5     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
  0.00     18.64     0.00        5     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() const
  0.00     18.64     0.00        5     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() const
  0.00     18.64     0.00        5     0.00     0.00  std::allocator<PolicyIteration*>::allocator()
  0.00     18.64     0.00        5     0.00     0.00  std::allocator<PolicyIteration*>::~allocator()
  0.00     18.64     0.00        5     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::_Vector_impl()
  0.00     18.64     0.00        5     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::~_Vector_impl()
  0.00     18.64     0.00        5     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_base()
  0.00     18.64     0.00        5     0.00     0.00  std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::~_Vector_base()
  0.00     18.64     0.00        5     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::vector()
  0.00     18.64     0.00        5     0.00     0.00  std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::~vector()
  0.00     18.64     0.00        5     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true> const&)
  0.00     18.64     0.00        4     0.00     0.00  __gthread_active_p()
  0.00     18.64     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Gridworld>::~new_allocator()
  0.00     18.64     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long)
  0.00     18.64     0.00        4     0.00     0.00  void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::destroy<std::pair<int const, int> >(std::pair<int const, int>*)
  0.00     18.64     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocate(unsigned long, void const*)
  0.00     18.64     0.00        4     0.00     0.00  bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00     18.64     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::max_size() const
  0.00     18.64     0.00        4     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00     18.64     0.00        4     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
  0.00     18.64     0.00        4     0.00     0.00  std::vector<int, std::allocator<int> >::max_size() const
  0.00     18.64     0.00        4     0.00     0.00  std::allocator<Gridworld>::~allocator()
  0.00     18.64     0.00        4     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&)
  0.00     18.64     0.00        4     0.00     0.00  std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&)
  0.00     18.64     0.00        4     0.00     0.00  std::_Head_base<0ul, int const&, false>::_Head_base(int const&)
  0.00     18.64     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&)
  0.00     18.64     0.00        4     0.00     0.00  int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00     18.64     0.00        4     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  0.00     18.64     0.00        4     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node<std::pair<int const, int>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<int const, int>, false>&)
  0.00     18.64     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long)
  0.00     18.64     0.00        4     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::destroy<std::pair<int const, int> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*)
  0.00     18.64     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, unsigned long)
  0.00     18.64     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00     18.64     0.00        4     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00     18.64     0.00        4     0.00     0.00  std::__detail::_Hash_node<std::pair<int const, int>, false>::_Hash_node()
  0.00     18.64     0.00        4     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
  0.00     18.64     0.00        4     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_Hash_node_value_base()
  0.00     18.64     0.00        4     0.00     0.00  std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&)
  0.00     18.64     0.00        4     0.00     0.00  std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
  0.00     18.64     0.00        4     0.00     0.00  int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
  0.00     18.64     0.00        4     0.00     0.00  int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  0.00     18.64     0.00        4     0.00     0.00  int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00     18.64     0.00        4     0.00     0.00  int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
  0.00     18.64     0.00        4     0.00     0.00  int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
  0.00     18.64     0.00        4     0.00     0.00  int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  0.00     18.64     0.00        4     0.00     0.00  std::__detail::_Hash_node<std::pair<int const, int>, false>* std::addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&)
  0.00     18.64     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<Gridworld>::new_allocator(__gnu_cxx::new_allocator<Gridworld> const&)
  0.00     18.64     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~new_allocator()
  0.00     18.64     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<Gridworld>::_M_ptr()
  0.00     18.64     0.00        3     0.00     0.00  __gnu_cxx::__aligned_buffer<Gridworld>::_M_addr()
  0.00     18.64     0.00        3     0.00     0.00  __gnu_cxx::__exchange_and_add_single(int*, int)
  0.00     18.64     0.00        3     0.00     0.00  __gnu_cxx::__exchange_and_add_dispatch(int*, int)
  0.00     18.64     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00     18.64     0.00        3     0.00     0.00  Environment<int, int>::getState() const
  0.00     18.64     0.00        3     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false>*) const
  0.00     18.64     0.00        3     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const
  0.00     18.64     0.00        3     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00     18.64     0.00        3     0.00     0.00  _ZNKSt8__detail10_Select1stclIRKSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_
  0.00     18.64     0.00        3     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
  0.00     18.64     0.00        3     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const
  0.00     18.64     0.00        3     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const
  0.00     18.64     0.00        3     0.00     0.00  std::allocator<Gridworld>::allocator(std::allocator<Gridworld> const&)
  0.00     18.64     0.00        3     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~allocator()
  0.00     18.64     0.00        3     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.64     0.00        3     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
  0.00     18.64     0.00        3     0.00     0.00  int const& std::__pair_get<0ul>::__const_get<int const, int>(std::pair<int const, int> const&)
  0.00     18.64     0.00        3     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00     18.64     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00     18.64     0.00        3     0.00     0.00  std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     18.64     0.00        3     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.00     18.64     0.00        3     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00     18.64     0.00        3     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00     18.64     0.00        3     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&)
  0.00     18.64     0.00        3     0.00     0.00  std::tuple_element<0ul, std::pair<int const, int> >::type const& std::get<0ul, int const, int>(std::pair<int const, int> const&)
  0.00     18.64     0.00        3     0.00     0.00  std::remove_reference<Environment<int, int>*&>::type&& std::move<Environment<int, int>*&>(Environment<int, int>*&)
  0.00     18.64     0.00        3     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00     18.64     0.00        3     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00     18.64     0.00        3     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00     18.64     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::pair<int const, int>*, std::pair<int const, int> const&)
  0.00     18.64     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&)
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00     18.64     0.00        2     0.00     0.00  void __gnu_cxx::new_allocator<int>::construct<int, int const&>(int*, int const&)
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00     18.64     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, int const&, unsigned long) const
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const
  0.00     18.64     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::operator->() const
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) const
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00     18.64     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&)
  0.00     18.64     0.00        2     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocator<Gridworld>(std::allocator<Gridworld> const&)
  0.00     18.64     0.00        2     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*)
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00     18.64     0.00        2     0.00     0.00  std::shared_ptr<Environment<int, int> >::~shared_ptr()
  0.00     18.64     0.00        2     0.00     0.00  std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&)
  0.00     18.64     0.00        2     0.00     0.00  std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&)
  0.00     18.64     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::~unordered_map()
  0.00     18.64     0.00        2     0.00     0.00  std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::operator[](int const&)
  0.00     18.64     0.00        2     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>&)
  0.00     18.64     0.00        2     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
  0.00     18.64     0.00        2     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
  0.00     18.64     0.00        2     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00     18.64     0.00        2     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     18.64     0.00        2     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00     18.64     0.00        2     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  0.00     18.64     0.00        2     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::pair<int const, int> const&)
  0.00     18.64     0.00        2     0.00     0.00  void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.00     18.64     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<int, int const&>(std::allocator<int>&, int*, int const&)
  0.00     18.64     0.00        2     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00     18.64     0.00        2     0.00     0.00  std::pair<int const, int>::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>)
  0.00     18.64     0.00        2     0.00     0.00  std::pair<int const, int>::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
  0.00     18.64     0.00        2     0.00     0.00  std::tuple<int const&>::tuple(std::tuple<int const&>&&)
  0.00     18.64     0.00        2     0.00     0.00  std::tuple<int const&>::tuple<void, true>(int const&)
  0.00     18.64     0.00        2     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00     18.64     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::push_back(int const&)
  0.00     18.64     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::~_Hashtable_alloc()
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<int const, int>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::~_Hashtable_ebo_helper()
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00     18.64     0.00        2     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     18.64     0.00        2     0.00     0.00  int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&)
  0.00     18.64     0.00        2     0.00     0.00  std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&)
  0.00     18.64     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&& std::forward<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::remove_reference<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::type&)
  0.00     18.64     0.00        2     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00     18.64     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const
  0.00     18.64     0.00        1     0.00     0.00  RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >)
  0.00     18.64     0.00        1     0.00     0.00  double Min<double>(int, double const*)
  0.00     18.64     0.00        1     0.00     0.00  Min(Vector const&)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel const*, int)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::BeliefState::~BeliefState()
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::Act(double, int)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::Reset(int)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::TreeBRLPolicy(int, int, double, MDPModel*, RandomNumberGenerator*, int, TreeBRLPolicy::LeafNodeValue, TreeBRLPolicy::WhichAlgo, int, int, int)
  0.00     18.64     0.00        1     0.00     0.00  TreeBRLPolicy::~TreeBRLPolicy()
  0.00     18.64     0.00        1     0.00     0.00  OnlineAlgorithm<int, int>::OnlineAlgorithm()
  0.00     18.64     0.00        1     0.00     0.00  OnlineAlgorithm<int, int>::~OnlineAlgorithm()
  0.00     18.64     0.00        1     0.00     0.00  RandomNumberGenerator::RandomNumberGenerator()
  0.00     18.64     0.00        1     0.00     0.00  RandomNumberGenerator::~RandomNumberGenerator()
  0.00     18.64     0.00        1     0.00     0.00  DefaultRandomNumberGenerator::manualSeed(unsigned long)
  0.00     18.64     0.00        1     0.00     0.00  DefaultRandomNumberGenerator::DefaultRandomNumberGenerator()
  0.00     18.64     0.00        1     0.00     0.00  DefaultRandomNumberGenerator::~DefaultRandomNumberGenerator()
  0.00     18.64     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<Gridworld>::destroy<Gridworld>(Gridworld*)
  0.00     18.64     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<Gridworld>::construct<Gridworld, char const (&) [20]>(Gridworld*, char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Gridworld>::new_allocator()
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator()
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, std::__detail::_Hash_node<std::pair<int const, int>, false> >::_S_select_on_copy(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&)
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++()
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::__atomic_add_single(int*, int)
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::__atomic_add_dispatch(int*, int)
  0.00     18.64     0.00        1     0.00     0.00  Environment<int, int>::getNStates() const
  0.00     18.64     0.00        1     0.00     0.00  Environment<int, int>::getNActions() const
  0.00     18.64     0.00        1     0.00     0.00  Environment<int, int>::getReward() const
  0.00     18.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::max_size() const
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const
  0.00     18.64     0.00        1     0.00     0.00  _ZNKSt8__detail10_Select1stclIRSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() const
  0.00     18.64     0.00        1     0.00     0.00  std::type_info::operator==(std::type_info const&) const
  0.00     18.64     0.00        1     0.00     0.00  std::allocator<Gridworld>::allocator()
  0.00     18.64     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator()
  0.00     18.64     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00     18.64     0.00        1     0.00     0.00  std::allocator<int>::~allocator()
  0.00     18.64     0.00        1     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
  0.00     18.64     0.00        1     0.00     0.00  void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&)
  0.00     18.64     0.00        1     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00     18.64     0.00        1     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)
  0.00     18.64     0.00        1     0.00     0.00  std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
  0.00     18.64     0.00        1     0.00     0.00  int const& std::__pair_get<0ul>::__get<int const, int>(std::pair<int const, int>&)
  0.00     18.64     0.00        1     0.00     0.00  std::shared_ptr<Environment<int, int> >::shared_ptr(std::shared_ptr<Environment<int, int> > const&)
  0.00     18.64     0.00        1     0.00     0.00  std::shared_ptr<Environment<int, int> >::shared_ptr()
  0.00     18.64     0.00        1     0.00     0.00  _ZNSt10shared_ptrI11EnvironmentIiiEEaSI9GridworldEENSt9enable_ifIXsr13is_assignableIRSt12__shared_ptrIS1_LN9__gnu_cxx12_Lock_policyE2EES_IT_EEE5valueERS2_E4typeEOSC_
  0.00     18.64     0.00        1     0.00     0.00  std::shared_ptr<Gridworld>::shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  std::shared_ptr<Gridworld>::~shared_ptr()
  0.00     18.64     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00     18.64     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00     18.64     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00     18.64     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>&)
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2> const&)
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr()
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Gridworld, void>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&&)
  0.00     18.64     0.00        1     0.00     0.00  _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE
  0.00     18.64     0.00        1     0.00     0.00  _ZNSt12__shared_ptrI9GridworldLN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS0_S0_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00     18.64     0.00        1     0.00     0.00  std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map(std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > > const&)
  0.00     18.64     0.00        1     0.00     0.00  std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map()
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_Sp_ebo_helper(std::allocator<Gridworld> const&)
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::~_Sp_ebo_helper()
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.00     18.64     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00     18.64     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
  0.00     18.64     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<Gridworld> >::destroy<Gridworld>(std::allocator<Gridworld>&, Gridworld*)
  0.00     18.64     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<Gridworld> >::construct<Gridworld, char const (&) [20]>(std::allocator<Gridworld>&, Gridworld*, char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::select_on_container_copy_construction(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&)
  0.00     18.64     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00     18.64     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<Gridworld>)
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00     18.64     0.00        1     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_erase_at_end(FixedDiscretePolicy**)
  0.00     18.64     0.00        1     0.00     0.00  std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::clear()
  0.00     18.64     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00     18.64     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc()
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&)
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v()
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&)
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true> const&)
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper()
  0.00     18.64     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&)
  0.00     18.64     0.00        1     0.00     0.00  std::shared_ptr<Gridworld> std::make_shared<Gridworld, char const (&) [20]>(char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*)
  0.00     18.64     0.00        1     0.00     0.00  void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00     18.64     0.00        1     0.00     0.00  std::shared_ptr<Gridworld> std::allocate_shared<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::allocator<Gridworld> const&, char const (&) [20])
  0.00     18.64     0.00        1     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00     18.64     0.00        1     0.00     0.00  std::tuple_element<0ul, std::pair<int const, int> >::type& std::get<0ul, int const, int>(std::pair<int const, int>&)
  0.00     18.64     0.00        1     0.00     0.00  std::remove_reference<std::allocator<Gridworld> const&>::type&& std::move<std::allocator<Gridworld> const&>(std::allocator<Gridworld> const&)
  0.00     18.64     0.00        1     0.00     0.00  std::remove_reference<std::shared_ptr<Gridworld>&>::type&& std::move<std::shared_ptr<Gridworld>&>(std::shared_ptr<Gridworld>&)
  0.00     18.64     0.00        1     0.00     0.00  std::remove_reference<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&)
  0.00     18.64     0.00        1     0.00     0.00  _ZSt4swapIP11EnvironmentIiiEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SF_
  0.00     18.64     0.00        1     0.00     0.00  _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_
  0.00     18.64     0.00        1     0.00     0.00  std::pair<int const, int>& std::forward<std::pair<int const, int>&>(std::remove_reference<std::pair<int const, int>&>::type&)
  0.00     18.64     0.00        1     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00     18.64     0.00        1     0.00     0.00  __cxx_global_var_init
  0.00     18.64     0.00        1     0.00     0.00  __cxx_global_var_init

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.05% of 18.64 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     97.3   18.13    0.00                 TransitionDistribution<int, int>::GetTransition(int, int, int) const [1]
-----------------------------------------------
                                                 <spontaneous>
[2]      0.8    0.15    0.00                 tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect::value_type& tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::operator[]<Transition<int, int> const&, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, (void*)0>(Transition<int, int> const&) [2]
-----------------------------------------------
                                                 <spontaneous>
[3]      0.5    0.09    0.00                 std::_Rb_tree_node<int>* std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_copy<std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>(std::_Rb_tree_node<int> const*, std::_Rb_tree_node_base*, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node&) [3]
-----------------------------------------------
                                                 <spontaneous>
[4]      0.4    0.08    0.00                 PolicyEvaluation::getValue(int, int) const [4]
-----------------------------------------------
                                                 <spontaneous>
[5]      0.3    0.05    0.00                 Vector::operator[](int) const [5]
-----------------------------------------------
                                                 <spontaneous>
[6]      0.2    0.04    0.00                 std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [6]
-----------------------------------------------
                                                 <spontaneous>
[7]      0.1    0.02    0.00                 std::pair<tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::hopscotch_iterator<false>, bool> tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::insert_impl<std::piecewise_construct_t const&, std::tuple<Transition<int, int> const&>, std::tuple<> >(unsigned long, unsigned long, std::piecewise_construct_t const&, std::tuple<Transition<int, int> const&>&&, std::tuple<>&&) [7]
-----------------------------------------------
                                                 <spontaneous>
[8]      0.1    0.02    0.00                 std::vector<tsl::detail_hopscotch_hash::hopscotch_bucket<std::pair<Transition<int, int>, double>, 62u, false>, std::allocator<tsl::detail_hopscotch_hash::hopscotch_bucket<std::pair<Transition<int, int>, double>, 62u, false> > >::_M_default_append(unsigned long) [8]
-----------------------------------------------
                                                 <spontaneous>
[9]      0.1    0.01    0.00                 SingularDistribution::setMean(double) [9]
-----------------------------------------------
                                                 <spontaneous>
[10]     0.1    0.01    0.00                 tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::hopscotch_hash(tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > > const&) [10]
-----------------------------------------------
                                                 <spontaneous>
[11]     0.1    0.01    0.00                 std::pair<tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > > > >::hopscotch_iterator<false>, bool> tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > > > >::insert_impl<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >(unsigned long, unsigned long, std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >&&) [11]
-----------------------------------------------
                                                 <spontaneous>
[12]     0.1    0.01    0.00                 Vector::Vector(Vector const&) [12]
-----------------------------------------------
                                                 <spontaneous>
[13]     0.1    0.01    0.00                 MDP<int, int>::getNextStates(int, int) const [13]
-----------------------------------------------
                                                 <spontaneous>
[14]     0.1    0.01    0.00                 MDP<int, int>::getRewardProbability(int const&, int const&, double) const [14]
-----------------------------------------------
                0.00    0.00       1/8449        main [20]
                0.00    0.00      20/8449        TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
                0.00    0.00    4214/8449        DirichletDistribution::DirichletDistribution(int, double) [730]
                0.00    0.00    4214/8449        DirichletDistribution::resize(int, double) [726]
[22]     0.0    0.00    0.00    8449         Vector::operator()(int) [22]
-----------------------------------------------
                0.00    0.00      25/151         TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
                0.00    0.00      25/151         TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
                0.00    0.00      41/151         TreeBRLPolicy::BeliefState::~BeliefState() [377]
                0.00    0.00      60/151         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_check_len(unsigned long, char const*) const [139]
[23]     0.0    0.00    0.00     151         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::size() const [23]
-----------------------------------------------
                0.00    0.00      20/140         TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
                0.00    0.00      20/140         TreeBRLPolicy::BeliefState::~BeliefState() [377]
                0.00    0.00     100/140         TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
[24]     0.0    0.00    0.00     140         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::operator[](unsigned long) [24]
-----------------------------------------------
                0.00    0.00       1/119         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [418]
                0.00    0.00       1/119         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
                0.00    0.00       4/119         std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_Hash_node_value_base() [258]
                0.00    0.00      21/119         std::_Hashtable<StateAction<int, int>, std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, std::allocator<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes> >, std::__detail::_Select1st, std::equal_to<StateAction<int, int> >, std::hash<StateAction<int, int> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Hashtable(std::_Hashtable<StateAction<int, int>, std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, std::allocator<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes> >, std::__detail::_Select1st, std::equal_to<StateAction<int, int> >, std::hash<StateAction<int, int> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&) [1258]
                0.00    0.00      92/119         std::__detail::_Hash_node_value_base<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes> >::_Hash_node_value_base() [1380]
[25]     0.0    0.00    0.00     119         std::__detail::_Hash_node_base::_Hash_node_base() [25]
-----------------------------------------------
                0.00    0.00       3/98          std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
                0.00    0.00       3/98          std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const [282]
                0.00    0.00      92/98          std::__detail::_Hash_code_base<StateAction<int, int>, std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, std::__detail::_Select1st, std::hash<StateAction<int, int> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index(std::__detail::_Hash_node<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, true> const*, unsigned long) const [1233]
[26]     0.0    0.00    0.00      98         std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [26]
-----------------------------------------------
                0.00    0.00       6/98          std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [204]
                0.00    0.00      92/98          std::__detail::_Hash_code_base<StateAction<int, int>, std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, std::__detail::_Select1st, std::hash<StateAction<int, int> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_h2() const [1234]
[27]     0.0    0.00    0.00      98         std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [27]
-----------------------------------------------
                0.00    0.00      90/90          TreeBRLPolicy::BeliefState** std::__copy_move_a2<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [74]
[28]     0.0    0.00    0.00      90         TreeBRLPolicy::BeliefState** std::__niter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**) [28]
-----------------------------------------------
                0.00    0.00      15/75          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
                0.00    0.00      20/75          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&) [116]
                0.00    0.00      20/75          void std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [114]
                0.00    0.00      20/75          void __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [105]
[29]     0.0    0.00    0.00      75         TreeBRLPolicy::BeliefState*&& std::forward<TreeBRLPolicy::BeliefState*>(std::remove_reference<TreeBRLPolicy::BeliefState*>::type&) [29]
-----------------------------------------------
                0.00    0.00      72/72          FixedDiscretePolicy** std::__copy_move_a2<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**) [86]
[30]     0.0    0.00    0.00      72         FixedDiscretePolicy** std::__niter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**) [30]
-----------------------------------------------
                0.00    0.00      21/66          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~vector() [103]
                0.00    0.00      45/66          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
[31]     0.0    0.00    0.00      66         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() [31]
-----------------------------------------------
                0.00    0.00       2/62          std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [313]
                0.00    0.00      10/62          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_check_len(unsigned long, char const*) const [173]
                0.00    0.00      12/62          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_check_len(unsigned long, char const*) const [154]
                0.00    0.00      15/62          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_check_len(unsigned long, char const*) const [139]
                0.00    0.00      23/62          std::vector<ConjugatePrior*, std::allocator<ConjugatePrior*> >::_M_check_len(unsigned long, char const*) const [1221]
[32]     0.0    0.00    0.00      62         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [32]
-----------------------------------------------
                0.00    0.00      30/60          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
                0.00    0.00      30/60          __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::difference_type __gnu_cxx::operator-<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&, __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&) [138]
[33]     0.0    0.00    0.00      60         __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::base() const [33]
-----------------------------------------------
                0.00    0.00      60/60          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>) [36]
[34]     0.0    0.00    0.00      60         std::move_iterator<TreeBRLPolicy::BeliefState**>::base() const [34]
-----------------------------------------------
                0.00    0.00      60/60          std::move_iterator<TreeBRLPolicy::BeliefState**> std::__make_move_if_noexcept_iterator<TreeBRLPolicy::BeliefState*, std::move_iterator<TreeBRLPolicy::BeliefState**> >(TreeBRLPolicy::BeliefState**) [39]
[35]     0.0    0.00    0.00      60         std::move_iterator<TreeBRLPolicy::BeliefState**>::move_iterator(TreeBRLPolicy::BeliefState**) [35]
-----------------------------------------------
                0.00    0.00      60/60          TreeBRLPolicy::BeliefState** std::copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [78]
[36]     0.0    0.00    0.00      60         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>) [36]
                0.00    0.00      60/60          TreeBRLPolicy::BeliefState** std::__miter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**) [37]
                0.00    0.00      60/60          std::move_iterator<TreeBRLPolicy::BeliefState**>::base() const [34]
-----------------------------------------------
                0.00    0.00      60/60          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>) [36]
[37]     0.0    0.00    0.00      60         TreeBRLPolicy::BeliefState** std::__miter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**) [37]
-----------------------------------------------
                0.00    0.00      60/60          PolicyIteration** std::__copy_move_a2<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**) [121]
[38]     0.0    0.00    0.00      60         PolicyIteration** std::__niter_base<PolicyIteration**>(PolicyIteration**) [38]
-----------------------------------------------
                0.00    0.00      60/60          TreeBRLPolicy::BeliefState** std::__uninitialized_move_if_noexcept_a<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*> >(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [77]
[39]     0.0    0.00    0.00      60         std::move_iterator<TreeBRLPolicy::BeliefState**> std::__make_move_if_noexcept_iterator<TreeBRLPolicy::BeliefState*, std::move_iterator<TreeBRLPolicy::BeliefState**> >(TreeBRLPolicy::BeliefState**) [39]
                0.00    0.00      60/60          std::move_iterator<TreeBRLPolicy::BeliefState**>::move_iterator(TreeBRLPolicy::BeliefState**) [35]
-----------------------------------------------
                0.00    0.00      24/48          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
                0.00    0.00      24/48          __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::difference_type __gnu_cxx::operator-<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&, __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&) [153]
[40]     0.0    0.00    0.00      48         __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::base() const [40]
-----------------------------------------------
                0.00    0.00      48/48          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>) [44]
[41]     0.0    0.00    0.00      48         std::move_iterator<FixedDiscretePolicy**>::base() const [41]
-----------------------------------------------
                0.00    0.00      48/48          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_check_len(unsigned long, char const*) const [154]
[42]     0.0    0.00    0.00      48         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::size() const [42]
-----------------------------------------------
                0.00    0.00      48/48          std::move_iterator<FixedDiscretePolicy**> std::__make_move_if_noexcept_iterator<FixedDiscretePolicy*, std::move_iterator<FixedDiscretePolicy**> >(FixedDiscretePolicy**) [46]
[43]     0.0    0.00    0.00      48         std::move_iterator<FixedDiscretePolicy**>::move_iterator(FixedDiscretePolicy**) [43]
-----------------------------------------------
                0.00    0.00      48/48          FixedDiscretePolicy** std::copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [90]
[44]     0.0    0.00    0.00      48         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>) [44]
                0.00    0.00      48/48          FixedDiscretePolicy** std::__miter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**) [45]
                0.00    0.00      48/48          std::move_iterator<FixedDiscretePolicy**>::base() const [41]
-----------------------------------------------
                0.00    0.00      48/48          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>) [44]
[45]     0.0    0.00    0.00      48         FixedDiscretePolicy** std::__miter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**) [45]
-----------------------------------------------
                0.00    0.00      48/48          FixedDiscretePolicy** std::__uninitialized_move_if_noexcept_a<FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*> >(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [89]
[46]     0.0    0.00    0.00      48         std::move_iterator<FixedDiscretePolicy**> std::__make_move_if_noexcept_iterator<FixedDiscretePolicy*, std::move_iterator<FixedDiscretePolicy**> >(FixedDiscretePolicy**) [46]
                0.00    0.00      48/48          std::move_iterator<FixedDiscretePolicy**>::move_iterator(FixedDiscretePolicy**) [43]
-----------------------------------------------
                0.00    0.00      12/48          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::emplace_back<FixedDiscretePolicy*>(FixedDiscretePolicy*&&) [159]
                0.00    0.00      12/48          void std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, FixedDiscretePolicy*&&) [158]
                0.00    0.00      12/48          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
                0.00    0.00      12/48          void __gnu_cxx::new_allocator<FixedDiscretePolicy*>::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy*&&) [152]
[47]     0.0    0.00    0.00      48         FixedDiscretePolicy*&& std::forward<FixedDiscretePolicy*>(std::remove_reference<FixedDiscretePolicy*>::type&) [47]
-----------------------------------------------
                0.00    0.00      15/45          __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::allocate(unsigned long, void const*) [137]
                0.00    0.00      30/45          std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::max_size(std::allocator<TreeBRLPolicy::BeliefState*> const&) [71]
[48]     0.0    0.00    0.00      45         __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::max_size() const [48]
-----------------------------------------------
                0.00    0.00       1/43          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_erase_at_end(FixedDiscretePolicy**) [460]
                0.00    0.00       6/43          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector() [212]
                0.00    0.00      36/43          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[49]     0.0    0.00    0.00      43         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() [49]
-----------------------------------------------
                0.00    0.00      20/40          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::difference_type __gnu_cxx::operator-<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&, __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&) [172]
[50]     0.0    0.00    0.00      40         __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::base() const [50]
-----------------------------------------------
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<PolicyIteration**>(std::move_iterator<PolicyIteration**>) [54]
[51]     0.0    0.00    0.00      40         std::move_iterator<PolicyIteration**>::base() const [51]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_check_len(unsigned long, char const*) const [173]
[52]     0.0    0.00    0.00      40         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::size() const [52]
-----------------------------------------------
                0.00    0.00      40/40          std::move_iterator<PolicyIteration**> std::__make_move_if_noexcept_iterator<PolicyIteration*, std::move_iterator<PolicyIteration**> >(PolicyIteration**) [56]
[53]     0.0    0.00    0.00      40         std::move_iterator<PolicyIteration**>::move_iterator(PolicyIteration**) [53]
-----------------------------------------------
                0.00    0.00      40/40          PolicyIteration** std::copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [125]
[54]     0.0    0.00    0.00      40         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<PolicyIteration**>(std::move_iterator<PolicyIteration**>) [54]
                0.00    0.00      40/40          PolicyIteration** std::__miter_base<PolicyIteration**>(PolicyIteration**) [55]
                0.00    0.00      40/40          std::move_iterator<PolicyIteration**>::base() const [51]
-----------------------------------------------
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<PolicyIteration**>(std::move_iterator<PolicyIteration**>) [54]
[55]     0.0    0.00    0.00      40         PolicyIteration** std::__miter_base<PolicyIteration**>(PolicyIteration**) [55]
-----------------------------------------------
                0.00    0.00      40/40          PolicyIteration** std::__uninitialized_move_if_noexcept_a<PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*> >(PolicyIteration**, PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [124]
[56]     0.0    0.00    0.00      40         std::move_iterator<PolicyIteration**> std::__make_move_if_noexcept_iterator<PolicyIteration*, std::move_iterator<PolicyIteration**> >(PolicyIteration**) [56]
                0.00    0.00      40/40          std::move_iterator<PolicyIteration**>::move_iterator(PolicyIteration**) [53]
-----------------------------------------------
                0.00    0.00      10/40          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::emplace_back<PolicyIteration*>(PolicyIteration*&&) [178]
                0.00    0.00      10/40          void std::allocator_traits<std::allocator<PolicyIteration*> >::construct<PolicyIteration*, PolicyIteration*>(std::allocator<PolicyIteration*>&, PolicyIteration**, PolicyIteration*&&) [177]
                0.00    0.00      10/40          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
                0.00    0.00      10/40          void __gnu_cxx::new_allocator<PolicyIteration*>::construct<PolicyIteration*, PolicyIteration*>(PolicyIteration**, PolicyIteration*&&) [171]
[57]     0.0    0.00    0.00      40         PolicyIteration*&& std::forward<PolicyIteration*>(std::remove_reference<PolicyIteration*>::type&) [57]
-----------------------------------------------
                0.00    0.00      12/36          __gnu_cxx::new_allocator<FixedDiscretePolicy*>::allocate(unsigned long, void const*) [151]
                0.00    0.00      24/36          std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::max_size(std::allocator<FixedDiscretePolicy*> const&) [83]
[58]     0.0    0.00    0.00      36         __gnu_cxx::new_allocator<FixedDiscretePolicy*>::max_size() const [58]
-----------------------------------------------
                0.00    0.00      36/36          void std::_Destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [61]
[59]     0.0    0.00    0.00      36         void std::_Destroy_aux<true>::__destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [59]
-----------------------------------------------
                0.00    0.00      15/36          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
                0.00    0.00      21/36          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~_Vector_base() [101]
[60]     0.0    0.00    0.00      36         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [60]
                0.00    0.00      15/15          std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::deallocate(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, unsigned long) [143]
-----------------------------------------------
                0.00    0.00      36/36          void std::_Destroy<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [62]
[61]     0.0    0.00    0.00      36         void std::_Destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [61]
                0.00    0.00      36/36          void std::_Destroy_aux<true>::__destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [59]
-----------------------------------------------
                0.00    0.00      15/36          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
                0.00    0.00      21/36          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~vector() [103]
[62]     0.0    0.00    0.00      36         void std::_Destroy<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [62]
                0.00    0.00      36/36          void std::_Destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [61]
-----------------------------------------------
                0.00    0.00       5/35          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::~vector() [231]
                0.00    0.00      30/35          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[63]     0.0    0.00    0.00      35         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() [63]
-----------------------------------------------
                0.00    0.00      32/32          TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[64]     0.0    0.00    0.00      32         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::operator[](unsigned long) [64]
-----------------------------------------------
                0.00    0.00      15/30          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::end() [146]
                0.00    0.00      15/30          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::begin() [147]
[65]     0.0    0.00    0.00      30         __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::__normal_iterator(TreeBRLPolicy::BeliefState** const&) [65]
-----------------------------------------------
                0.00    0.00       1/30          main [20]
                0.00    0.00       1/30          Min(Vector const&) [373]
                0.00    0.00       6/30          Max(Vector const&) [200]
                0.00    0.00      22/30          ArgMax(Vector const&) [93]
[66]     0.0    0.00    0.00      30         Vector::Size() const [66]
-----------------------------------------------
                0.00    0.00      10/30          __gnu_cxx::new_allocator<PolicyIteration*>::allocate(unsigned long, void const*) [170]
                0.00    0.00      20/30          std::allocator_traits<std::allocator<PolicyIteration*> >::max_size(std::allocator<PolicyIteration*> const&) [113]
[67]     0.0    0.00    0.00      30         __gnu_cxx::new_allocator<PolicyIteration*>::max_size() const [67]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::max_size() const [69]
[68]     0.0    0.00    0.00      30         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() const [68]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_check_len(unsigned long, char const*) const [139]
[69]     0.0    0.00    0.00      30         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::max_size() const [69]
                0.00    0.00      30/30          std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::max_size(std::allocator<TreeBRLPolicy::BeliefState*> const&) [71]
                0.00    0.00      30/30          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() const [68]
-----------------------------------------------
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__copy_move_a<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [73]
[70]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState**) [70]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::max_size() const [69]
[71]     0.0    0.00    0.00      30         std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::max_size(std::allocator<TreeBRLPolicy::BeliefState*> const&) [71]
                0.00    0.00      30/45          __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::max_size() const [48]
-----------------------------------------------
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::uninitialized_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [75]
[72]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [72]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [78]
-----------------------------------------------
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__copy_move_a2<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [74]
[73]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::__copy_move_a<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [73]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState**) [70]
-----------------------------------------------
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [78]
[74]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::__copy_move_a2<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [74]
                0.00    0.00      90/90          TreeBRLPolicy::BeliefState** std::__niter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**) [28]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__copy_move_a<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [73]
-----------------------------------------------
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__uninitialized_copy_a<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [76]
[75]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::uninitialized_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [75]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [72]
-----------------------------------------------
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__uninitialized_move_if_noexcept_a<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*> >(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [77]
[76]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::__uninitialized_copy_a<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [76]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::uninitialized_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [75]
-----------------------------------------------
                0.00    0.00      30/30          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
[77]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::__uninitialized_move_if_noexcept_a<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*> >(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [77]
                0.00    0.00      60/60          std::move_iterator<TreeBRLPolicy::BeliefState**> std::__make_move_if_noexcept_iterator<TreeBRLPolicy::BeliefState*, std::move_iterator<TreeBRLPolicy::BeliefState**> >(TreeBRLPolicy::BeliefState**) [39]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__uninitialized_copy_a<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [76]
-----------------------------------------------
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [72]
[78]     0.0    0.00    0.00      30         TreeBRLPolicy::BeliefState** std::copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [78]
                0.00    0.00      60/60          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>) [36]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__copy_move_a2<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [74]
-----------------------------------------------
                0.00    0.00      12/24          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::end() [161]
                0.00    0.00      12/24          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::begin() [162]
[79]     0.0    0.00    0.00      24         __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::__normal_iterator(FixedDiscretePolicy** const&) [79]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::max_size() const [81]
[80]     0.0    0.00    0.00      24         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() const [80]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_check_len(unsigned long, char const*) const [154]
[81]     0.0    0.00    0.00      24         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::max_size() const [81]
                0.00    0.00      24/24          std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::max_size(std::allocator<FixedDiscretePolicy*> const&) [83]
                0.00    0.00      24/24          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() const [80]
-----------------------------------------------
                0.00    0.00      24/24          FixedDiscretePolicy** std::__copy_move_a<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**) [85]
[82]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<FixedDiscretePolicy*>(FixedDiscretePolicy* const*, FixedDiscretePolicy* const*, FixedDiscretePolicy**) [82]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::max_size() const [81]
[83]     0.0    0.00    0.00      24         std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::max_size(std::allocator<FixedDiscretePolicy*> const&) [83]
                0.00    0.00      24/36          __gnu_cxx::new_allocator<FixedDiscretePolicy*>::max_size() const [58]
-----------------------------------------------
                0.00    0.00      24/24          FixedDiscretePolicy** std::uninitialized_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [87]
[84]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [84]
                0.00    0.00      24/24          FixedDiscretePolicy** std::copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [90]
-----------------------------------------------
                0.00    0.00      24/24          FixedDiscretePolicy** std::__copy_move_a2<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**) [86]
[85]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::__copy_move_a<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**) [85]
                0.00    0.00      24/24          FixedDiscretePolicy** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<FixedDiscretePolicy*>(FixedDiscretePolicy* const*, FixedDiscretePolicy* const*, FixedDiscretePolicy**) [82]
-----------------------------------------------
                0.00    0.00      24/24          FixedDiscretePolicy** std::copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [90]
[86]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::__copy_move_a2<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**) [86]
                0.00    0.00      72/72          FixedDiscretePolicy** std::__niter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**) [30]
                0.00    0.00      24/24          FixedDiscretePolicy** std::__copy_move_a<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**) [85]
-----------------------------------------------
                0.00    0.00      24/24          FixedDiscretePolicy** std::__uninitialized_copy_a<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, FixedDiscretePolicy*>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [88]
[87]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::uninitialized_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [87]
                0.00    0.00      24/24          FixedDiscretePolicy** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [84]
-----------------------------------------------
                0.00    0.00      24/24          FixedDiscretePolicy** std::__uninitialized_move_if_noexcept_a<FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*> >(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [89]
[88]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::__uninitialized_copy_a<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, FixedDiscretePolicy*>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [88]
                0.00    0.00      24/24          FixedDiscretePolicy** std::uninitialized_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [87]
-----------------------------------------------
                0.00    0.00      24/24          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[89]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::__uninitialized_move_if_noexcept_a<FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*> >(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [89]
                0.00    0.00      48/48          std::move_iterator<FixedDiscretePolicy**> std::__make_move_if_noexcept_iterator<FixedDiscretePolicy*, std::move_iterator<FixedDiscretePolicy**> >(FixedDiscretePolicy**) [46]
                0.00    0.00      24/24          FixedDiscretePolicy** std::__uninitialized_copy_a<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, FixedDiscretePolicy*>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [88]
-----------------------------------------------
                0.00    0.00      24/24          FixedDiscretePolicy** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [84]
[90]     0.0    0.00    0.00      24         FixedDiscretePolicy** std::copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [90]
                0.00    0.00      48/48          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>) [44]
                0.00    0.00      24/24          FixedDiscretePolicy** std::__copy_move_a2<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**) [86]
-----------------------------------------------
                0.00    0.00       3/23          TreeBRLPolicy::Act(double, int) [379]
                0.00    0.00      20/23          TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[91]     0.0    0.00    0.00      23         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::operator[](unsigned long) [91]
-----------------------------------------------
                0.00    0.00      22/22          ArgMax(Vector const&) [93]
[92]     0.0    0.00    0.00      22         int ArgMax<double>(int, double const*) [92]
-----------------------------------------------
                0.00    0.00       2/22          TreeBRLPolicy::Act(double, int) [379]
                0.00    0.00      20/22          TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[93]     0.0    0.00    0.00      22         ArgMax(Vector const&) [93]
                0.00    0.00      22/30          Vector::Size() const [66]
                0.00    0.00      22/22          int ArgMax<double>(int, double const*) [92]
-----------------------------------------------
                0.00    0.00      21/21          std::allocator<TreeBRLPolicy::BeliefState*>::allocator() [96]
[94]     0.0    0.00    0.00      21         __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::new_allocator() [94]
-----------------------------------------------
                0.00    0.00      21/21          std::allocator<TreeBRLPolicy::BeliefState*>::~allocator() [97]
[95]     0.0    0.00    0.00      21         __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::~new_allocator() [95]
-----------------------------------------------
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::_Vector_impl() [98]
[96]     0.0    0.00    0.00      21         std::allocator<TreeBRLPolicy::BeliefState*>::allocator() [96]
                0.00    0.00      21/21          __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::new_allocator() [94]
-----------------------------------------------
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::~_Vector_impl() [99]
[97]     0.0    0.00    0.00      21         std::allocator<TreeBRLPolicy::BeliefState*>::~allocator() [97]
                0.00    0.00      21/21          __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::~new_allocator() [95]
-----------------------------------------------
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_base() [100]
[98]     0.0    0.00    0.00      21         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::_Vector_impl() [98]
                0.00    0.00      21/21          std::allocator<TreeBRLPolicy::BeliefState*>::allocator() [96]
-----------------------------------------------
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~_Vector_base() [101]
[99]     0.0    0.00    0.00      21         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::~_Vector_impl() [99]
                0.00    0.00      21/21          std::allocator<TreeBRLPolicy::BeliefState*>::~allocator() [97]
-----------------------------------------------
                0.00    0.00      21/21          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::vector() [102]
[100]    0.0    0.00    0.00      21         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_base() [100]
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::_Vector_impl() [98]
-----------------------------------------------
                0.00    0.00      21/21          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~vector() [103]
[101]    0.0    0.00    0.00      21         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~_Vector_base() [101]
                0.00    0.00      21/36          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [60]
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::~_Vector_impl() [99]
-----------------------------------------------
                0.00    0.00       1/21          TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel const*, int) [376]
                0.00    0.00      20/21          TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel*, int, int, double, double, TreeBRLPolicy::BeliefState*) [104]
[102]    0.0    0.00    0.00      21         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::vector() [102]
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_base() [100]
-----------------------------------------------
                0.00    0.00      21/21          TreeBRLPolicy::BeliefState::~BeliefState() [377]
[103]    0.0    0.00    0.00      21         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~vector() [103]
                0.00    0.00      21/66          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() [31]
                0.00    0.00      21/36          void std::_Destroy<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [62]
                0.00    0.00      21/21          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~_Vector_base() [101]
-----------------------------------------------
                0.00    0.00      20/20          TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[104]    0.0    0.00    0.00      20         TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel*, int, int, double, double, TreeBRLPolicy::BeliefState*) [104]
                0.00    0.00      20/21          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::vector() [102]
-----------------------------------------------
                0.00    0.00      20/20          void std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [114]
[105]    0.0    0.00    0.00      20         void __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [105]
                0.00    0.00      20/75          TreeBRLPolicy::BeliefState*&& std::forward<TreeBRLPolicy::BeliefState*>(std::remove_reference<TreeBRLPolicy::BeliefState*>::type&) [29]
-----------------------------------------------
                0.00    0.00       4/20          std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [244]
                0.00    0.00      16/20          std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, true> >(std::allocator<std::__detail::_Hash_node<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, true> > const&) [1249]
[106]    0.0    0.00    0.00      20         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [106]
-----------------------------------------------
                0.00    0.00      20/20          std::allocator<std::__detail::_Hash_node_base*>::~allocator() [111]
[107]    0.0    0.00    0.00      20         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [107]
-----------------------------------------------
                0.00    0.00      10/20          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::end() [180]
                0.00    0.00      10/20          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::begin() [181]
[108]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::__normal_iterator(PolicyIteration** const&) [108]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::max_size() const [110]
[109]    0.0    0.00    0.00      20         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() const [109]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_check_len(unsigned long, char const*) const [173]
[110]    0.0    0.00    0.00      20         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::max_size() const [110]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<PolicyIteration*> >::max_size(std::allocator<PolicyIteration*> const&) [113]
                0.00    0.00      20/20          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() const [109]
-----------------------------------------------
                0.00    0.00       2/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long) [357]
                0.00    0.00       2/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [359]
                0.00    0.00      16/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, true> > >::_M_allocate_buckets(unsigned long) [1373]
[111]    0.0    0.00    0.00      20         std::allocator<std::__detail::_Hash_node_base*>::~allocator() [111]
                0.00    0.00      20/20          __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [107]
-----------------------------------------------
                0.00    0.00      20/20          PolicyIteration** std::__copy_move_a<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**) [120]
[112]    0.0    0.00    0.00      20         PolicyIteration** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<PolicyIteration*>(PolicyIteration* const*, PolicyIteration* const*, PolicyIteration**) [112]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::max_size() const [110]
[113]    0.0    0.00    0.00      20         std::allocator_traits<std::allocator<PolicyIteration*> >::max_size(std::allocator<PolicyIteration*> const&) [113]
                0.00    0.00      20/30          __gnu_cxx::new_allocator<PolicyIteration*>::max_size() const [67]
-----------------------------------------------
                0.00    0.00       5/20          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&) [116]
                0.00    0.00      15/20          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
[114]    0.0    0.00    0.00      20         void std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [114]
                0.00    0.00      20/75          TreeBRLPolicy::BeliefState*&& std::forward<TreeBRLPolicy::BeliefState*>(std::remove_reference<TreeBRLPolicy::BeliefState*>::type&) [29]
                0.00    0.00      20/20          void __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [105]
-----------------------------------------------
                0.00    0.00      20/20          PolicyIteration** std::uninitialized_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [122]
[115]    0.0    0.00    0.00      20         PolicyIteration** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [115]
                0.00    0.00      20/20          PolicyIteration** std::copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [125]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::push_back(TreeBRLPolicy::BeliefState*&&) [117]
[116]    0.0    0.00    0.00      20         void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&) [116]
                0.00    0.00      20/75          TreeBRLPolicy::BeliefState*&& std::forward<TreeBRLPolicy::BeliefState*>(std::remove_reference<TreeBRLPolicy::BeliefState*>::type&) [29]
                0.00    0.00      15/15          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::end() [146]
                0.00    0.00      15/15          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
                0.00    0.00       5/20          void std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [114]
-----------------------------------------------
                0.00    0.00      20/20          TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[117]    0.0    0.00    0.00      20         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::push_back(TreeBRLPolicy::BeliefState*&&) [117]
                0.00    0.00      20/20          std::remove_reference<TreeBRLPolicy::BeliefState*&>::type&& std::move<TreeBRLPolicy::BeliefState*&>(TreeBRLPolicy::BeliefState*&) [126]
                0.00    0.00      20/20          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&) [116]
-----------------------------------------------
                0.00    0.00       2/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long) [357]
                0.00    0.00       2/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [359]
                0.00    0.00       4/20          std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
                0.00    0.00       4/20          std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
                0.00    0.00       8/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [257]
[118]    0.0    0.00    0.00      20         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() [118]
                0.00    0.00      20/20          std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>&) [119]
-----------------------------------------------
                0.00    0.00      20/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() [118]
[119]    0.0    0.00    0.00      20         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>&) [119]
-----------------------------------------------
                0.00    0.00      20/20          PolicyIteration** std::__copy_move_a2<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**) [121]
[120]    0.0    0.00    0.00      20         PolicyIteration** std::__copy_move_a<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**) [120]
                0.00    0.00      20/20          PolicyIteration** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<PolicyIteration*>(PolicyIteration* const*, PolicyIteration* const*, PolicyIteration**) [112]
-----------------------------------------------
                0.00    0.00      20/20          PolicyIteration** std::copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [125]
[121]    0.0    0.00    0.00      20         PolicyIteration** std::__copy_move_a2<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**) [121]
                0.00    0.00      60/60          PolicyIteration** std::__niter_base<PolicyIteration**>(PolicyIteration**) [38]
                0.00    0.00      20/20          PolicyIteration** std::__copy_move_a<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**) [120]
-----------------------------------------------
                0.00    0.00      20/20          PolicyIteration** std::__uninitialized_copy_a<std::move_iterator<PolicyIteration**>, PolicyIteration**, PolicyIteration*>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**, std::allocator<PolicyIteration*>&) [123]
[122]    0.0    0.00    0.00      20         PolicyIteration** std::uninitialized_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [122]
                0.00    0.00      20/20          PolicyIteration** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [115]
-----------------------------------------------
                0.00    0.00      20/20          PolicyIteration** std::__uninitialized_move_if_noexcept_a<PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*> >(PolicyIteration**, PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [124]
[123]    0.0    0.00    0.00      20         PolicyIteration** std::__uninitialized_copy_a<std::move_iterator<PolicyIteration**>, PolicyIteration**, PolicyIteration*>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**, std::allocator<PolicyIteration*>&) [123]
                0.00    0.00      20/20          PolicyIteration** std::uninitialized_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [122]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[124]    0.0    0.00    0.00      20         PolicyIteration** std::__uninitialized_move_if_noexcept_a<PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*> >(PolicyIteration**, PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [124]
                0.00    0.00      40/40          std::move_iterator<PolicyIteration**> std::__make_move_if_noexcept_iterator<PolicyIteration*, std::move_iterator<PolicyIteration**> >(PolicyIteration**) [56]
                0.00    0.00      20/20          PolicyIteration** std::__uninitialized_copy_a<std::move_iterator<PolicyIteration**>, PolicyIteration**, PolicyIteration*>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**, std::allocator<PolicyIteration*>&) [123]
-----------------------------------------------
                0.00    0.00      20/20          PolicyIteration** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [115]
[125]    0.0    0.00    0.00      20         PolicyIteration** std::copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [125]
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<PolicyIteration**>(std::move_iterator<PolicyIteration**>) [54]
                0.00    0.00      20/20          PolicyIteration** std::__copy_move_a2<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**) [121]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::push_back(TreeBRLPolicy::BeliefState*&&) [117]
[126]    0.0    0.00    0.00      20         std::remove_reference<TreeBRLPolicy::BeliefState*&>::type&& std::move<TreeBRLPolicy::BeliefState*&>(TreeBRLPolicy::BeliefState*&) [126]
-----------------------------------------------
                0.00    0.00      19/19          void std::_Destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**) [128]
[127]    0.0    0.00    0.00      19         void std::_Destroy_aux<true>::__destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**) [127]
-----------------------------------------------
                0.00    0.00      19/19          void std::_Destroy<FixedDiscretePolicy**, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [129]
[128]    0.0    0.00    0.00      19         void std::_Destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**) [128]
                0.00    0.00      19/19          void std::_Destroy_aux<true>::__destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**) [127]
-----------------------------------------------
                0.00    0.00       1/19          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_erase_at_end(FixedDiscretePolicy**) [460]
                0.00    0.00       6/19          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector() [212]
                0.00    0.00      12/19          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[129]    0.0    0.00    0.00      19         void std::_Destroy<FixedDiscretePolicy**, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [129]
                0.00    0.00      19/19          void std::_Destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**) [128]
-----------------------------------------------
                0.00    0.00      18/18          std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [134]
[130]    0.0    0.00    0.00      18         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [130]
                0.00    0.00      18/18          __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [131]
-----------------------------------------------
                0.00    0.00      18/18          __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [130]
[131]    0.0    0.00    0.00      18         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [131]
-----------------------------------------------
                0.00    0.00       4/18          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
                0.00    0.00       6/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [274]
                0.00    0.00       8/18          bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [238]
[132]    0.0    0.00    0.00      18         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [132]
-----------------------------------------------
                0.00    0.00       6/18          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~_Vector_base() [210]
                0.00    0.00      12/18          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[133]    0.0    0.00    0.00      18         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_deallocate(FixedDiscretePolicy**, unsigned long) [133]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::deallocate(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, unsigned long) [156]
-----------------------------------------------
                0.00    0.00       2/18          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long) [357]
                0.00    0.00      16/18          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, true> > >::_M_allocate_buckets(unsigned long) [1373]
[134]    0.0    0.00    0.00      18         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [134]
                0.00    0.00      18/18          __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [130]
-----------------------------------------------
                0.00    0.00       2/18          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long) [357]
                0.00    0.00      16/18          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<StateAction<int, int> const, DirichletFiniteOutcomes>, true> > >::_M_allocate_buckets(unsigned long) [1373]
[135]    0.0    0.00    0.00      18         std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [135]
-----------------------------------------------
                0.00    0.00      15/15          std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::deallocate(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, unsigned long) [143]
[136]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [136]
-----------------------------------------------
                0.00    0.00      15/15          std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::allocate(std::allocator<TreeBRLPolicy::BeliefState*>&, unsigned long) [144]
[137]    0.0    0.00    0.00      15         __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::allocate(unsigned long, void const*) [137]
                0.00    0.00      15/45          __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::max_size() const [48]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
[138]    0.0    0.00    0.00      15         __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::difference_type __gnu_cxx::operator-<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&, __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&) [138]
                0.00    0.00      30/60          __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::base() const [33]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
[139]    0.0    0.00    0.00      15         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_check_len(unsigned long, char const*) const [139]
                0.00    0.00      60/151         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::size() const [23]
                0.00    0.00      30/30          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::max_size() const [69]
                0.00    0.00      15/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [32]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**) [148]
[140]    0.0    0.00    0.00      15         void std::_Destroy_aux<true>::__destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**) [140]
-----------------------------------------------
                0.00    0.00       5/15          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::~_Vector_base() [229]
                0.00    0.00      10/15          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[141]    0.0    0.00    0.00      15         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_deallocate(PolicyIteration**, unsigned long) [141]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<PolicyIteration*> >::deallocate(std::allocator<PolicyIteration*>&, PolicyIteration**, unsigned long) [175]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
[142]    0.0    0.00    0.00      15         std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_allocate(unsigned long) [142]
                0.00    0.00      15/15          std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::allocate(std::allocator<TreeBRLPolicy::BeliefState*>&, unsigned long) [144]
-----------------------------------------------
                0.00    0.00      15/15          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [60]
[143]    0.0    0.00    0.00      15         std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::deallocate(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, unsigned long) [143]
                0.00    0.00      15/15          __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [136]
-----------------------------------------------
                0.00    0.00      15/15          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_allocate(unsigned long) [142]
[144]    0.0    0.00    0.00      15         std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::allocate(std::allocator<TreeBRLPolicy::BeliefState*>&, unsigned long) [144]
                0.00    0.00      15/15          __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::allocate(unsigned long, void const*) [137]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&) [116]
[145]    0.0    0.00    0.00      15         void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
                0.00    0.00      45/66          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() [31]
                0.00    0.00      30/60          __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::base() const [33]
                0.00    0.00      30/30          TreeBRLPolicy::BeliefState** std::__uninitialized_move_if_noexcept_a<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*> >(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [77]
                0.00    0.00      15/15          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_check_len(unsigned long, char const*) const [139]
                0.00    0.00      15/15          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::begin() [147]
                0.00    0.00      15/15          __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::difference_type __gnu_cxx::operator-<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&, __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&) [138]
                0.00    0.00      15/15          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_allocate(unsigned long) [142]
                0.00    0.00      15/75          TreeBRLPolicy::BeliefState*&& std::forward<TreeBRLPolicy::BeliefState*>(std::remove_reference<TreeBRLPolicy::BeliefState*>::type&) [29]
                0.00    0.00      15/20          void std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [114]
                0.00    0.00      15/36          void std::_Destroy<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&) [62]
                0.00    0.00      15/36          std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [60]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&) [116]
[146]    0.0    0.00    0.00      15         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::end() [146]
                0.00    0.00      15/30          __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::__normal_iterator(TreeBRLPolicy::BeliefState** const&) [65]
-----------------------------------------------
                0.00    0.00      15/15          void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&) [145]
[147]    0.0    0.00    0.00      15         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::begin() [147]
                0.00    0.00      15/30          __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::__normal_iterator(TreeBRLPolicy::BeliefState** const&) [65]
-----------------------------------------------
                0.00    0.00      15/15          void std::_Destroy<PolicyIteration**, PolicyIteration*>(PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [149]
[148]    0.0    0.00    0.00      15         void std::_Destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**) [148]
                0.00    0.00      15/15          void std::_Destroy_aux<true>::__destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**) [140]
-----------------------------------------------
                0.00    0.00       5/15          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::~vector() [231]
                0.00    0.00      10/15          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[149]    0.0    0.00    0.00      15         void std::_Destroy<PolicyIteration**, PolicyIteration*>(PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [149]
                0.00    0.00      15/15          void std::_Destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**) [148]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::deallocate(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, unsigned long) [156]
[150]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<FixedDiscretePolicy*>::deallocate(FixedDiscretePolicy**, unsigned long) [150]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::allocate(std::allocator<FixedDiscretePolicy*>&, unsigned long) [157]
[151]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<FixedDiscretePolicy*>::allocate(unsigned long, void const*) [151]
                0.00    0.00      12/36          __gnu_cxx::new_allocator<FixedDiscretePolicy*>::max_size() const [58]
-----------------------------------------------
                0.00    0.00      12/12          void std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, FixedDiscretePolicy*&&) [158]
[152]    0.0    0.00    0.00      12         void __gnu_cxx::new_allocator<FixedDiscretePolicy*>::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy*&&) [152]
                0.00    0.00      12/48          FixedDiscretePolicy*&& std::forward<FixedDiscretePolicy*>(std::remove_reference<FixedDiscretePolicy*>::type&) [47]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[153]    0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::difference_type __gnu_cxx::operator-<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&, __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&) [153]
                0.00    0.00      24/48          __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::base() const [40]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[154]    0.0    0.00    0.00      12         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_check_len(unsigned long, char const*) const [154]
                0.00    0.00      48/48          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::size() const [42]
                0.00    0.00      24/24          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::max_size() const [81]
                0.00    0.00      12/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [32]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[155]    0.0    0.00    0.00      12         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_allocate(unsigned long) [155]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::allocate(std::allocator<FixedDiscretePolicy*>&, unsigned long) [157]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_deallocate(FixedDiscretePolicy**, unsigned long) [133]
[156]    0.0    0.00    0.00      12         std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::deallocate(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, unsigned long) [156]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<FixedDiscretePolicy*>::deallocate(FixedDiscretePolicy**, unsigned long) [150]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_allocate(unsigned long) [155]
[157]    0.0    0.00    0.00      12         std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::allocate(std::allocator<FixedDiscretePolicy*>&, unsigned long) [157]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<FixedDiscretePolicy*>::allocate(unsigned long, void const*) [151]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[158]    0.0    0.00    0.00      12         void std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, FixedDiscretePolicy*&&) [158]
                0.00    0.00      12/48          FixedDiscretePolicy*&& std::forward<FixedDiscretePolicy*>(std::remove_reference<FixedDiscretePolicy*>::type&) [47]
                0.00    0.00      12/12          void __gnu_cxx::new_allocator<FixedDiscretePolicy*>::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy*&&) [152]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::push_back(FixedDiscretePolicy*&&) [163]
[159]    0.0    0.00    0.00      12         void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::emplace_back<FixedDiscretePolicy*>(FixedDiscretePolicy*&&) [159]
                0.00    0.00      12/12          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::end() [161]
                0.00    0.00      12/48          FixedDiscretePolicy*&& std::forward<FixedDiscretePolicy*>(std::remove_reference<FixedDiscretePolicy*>::type&) [47]
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::emplace_back<FixedDiscretePolicy*>(FixedDiscretePolicy*&&) [159]
[160]    0.0    0.00    0.00      12         void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
                0.00    0.00      36/43          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() [49]
                0.00    0.00      24/48          __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::base() const [40]
                0.00    0.00      24/24          FixedDiscretePolicy** std::__uninitialized_move_if_noexcept_a<FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*> >(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [89]
                0.00    0.00      12/12          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_check_len(unsigned long, char const*) const [154]
                0.00    0.00      12/12          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::begin() [162]
                0.00    0.00      12/12          __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::difference_type __gnu_cxx::operator-<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&, __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&) [153]
                0.00    0.00      12/12          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_allocate(unsigned long) [155]
                0.00    0.00      12/48          FixedDiscretePolicy*&& std::forward<FixedDiscretePolicy*>(std::remove_reference<FixedDiscretePolicy*>::type&) [47]
                0.00    0.00      12/12          void std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, FixedDiscretePolicy*&&) [158]
                0.00    0.00      12/19          void std::_Destroy<FixedDiscretePolicy**, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [129]
                0.00    0.00      12/18          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_deallocate(FixedDiscretePolicy**, unsigned long) [133]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::emplace_back<FixedDiscretePolicy*>(FixedDiscretePolicy*&&) [159]
[161]    0.0    0.00    0.00      12         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::end() [161]
                0.00    0.00      12/24          __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::__normal_iterator(FixedDiscretePolicy** const&) [79]
-----------------------------------------------
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&) [160]
[162]    0.0    0.00    0.00      12         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::begin() [162]
                0.00    0.00      12/24          __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::__normal_iterator(FixedDiscretePolicy** const&) [79]
-----------------------------------------------
                0.00    0.00      12/12          TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[163]    0.0    0.00    0.00      12         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::push_back(FixedDiscretePolicy*&&) [163]
                0.00    0.00      12/12          std::remove_reference<FixedDiscretePolicy*&>::type&& std::move<FixedDiscretePolicy*&>(FixedDiscretePolicy*&) [165]
                0.00    0.00      12/12          void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::emplace_back<FixedDiscretePolicy*>(FixedDiscretePolicy*&&) [159]
-----------------------------------------------
                0.00    0.00      12/12          int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [262]
[164]    0.0    0.00    0.00      12         int* std::__niter_base<int*>(int*) [164]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::push_back(FixedDiscretePolicy*&&) [163]
[165]    0.0    0.00    0.00      12         std::remove_reference<FixedDiscretePolicy*&>::type&& std::move<FixedDiscretePolicy*&>(FixedDiscretePolicy*&) [165]
-----------------------------------------------
                0.00    0.00      11/11          std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() [168]
[166]    0.0    0.00    0.00      11         __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() [166]
                0.00    0.00      11/11          __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr() [167]
-----------------------------------------------
                0.00    0.00      11/11          __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() [166]
[167]    0.0    0.00    0.00      11         __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr() [167]
-----------------------------------------------
                0.00    0.00       1/11          std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() [468]
                0.00    0.00       2/11          std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
                0.00    0.00       2/11          std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
                0.00    0.00       2/11          std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::operator->() const [314]
                0.00    0.00       4/11          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [257]
[168]    0.0    0.00    0.00      11         std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() [168]
                0.00    0.00      11/11          __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() [166]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<PolicyIteration*> >::deallocate(std::allocator<PolicyIteration*>&, PolicyIteration**, unsigned long) [175]
[169]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<PolicyIteration*>::deallocate(PolicyIteration**, unsigned long) [169]
-----------------------------------------------
                0.00    0.00      10/10          std::allocator_traits<std::allocator<PolicyIteration*> >::allocate(std::allocator<PolicyIteration*>&, unsigned long) [176]
[170]    0.0    0.00    0.00      10         __gnu_cxx::new_allocator<PolicyIteration*>::allocate(unsigned long, void const*) [170]
                0.00    0.00      10/30          __gnu_cxx::new_allocator<PolicyIteration*>::max_size() const [67]
-----------------------------------------------
                0.00    0.00      10/10          void std::allocator_traits<std::allocator<PolicyIteration*> >::construct<PolicyIteration*, PolicyIteration*>(std::allocator<PolicyIteration*>&, PolicyIteration**, PolicyIteration*&&) [177]
[171]    0.0    0.00    0.00      10         void __gnu_cxx::new_allocator<PolicyIteration*>::construct<PolicyIteration*, PolicyIteration*>(PolicyIteration**, PolicyIteration*&&) [171]
                0.00    0.00      10/40          PolicyIteration*&& std::forward<PolicyIteration*>(std::remove_reference<PolicyIteration*>::type&) [57]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[172]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::difference_type __gnu_cxx::operator-<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&, __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&) [172]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::base() const [50]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[173]    0.0    0.00    0.00      10         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_check_len(unsigned long, char const*) const [173]
                0.00    0.00      40/40          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::size() const [52]
                0.00    0.00      20/20          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::max_size() const [110]
                0.00    0.00      10/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [32]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[174]    0.0    0.00    0.00      10         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_allocate(unsigned long) [174]
                0.00    0.00      10/10          std::allocator_traits<std::allocator<PolicyIteration*> >::allocate(std::allocator<PolicyIteration*>&, unsigned long) [176]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_deallocate(PolicyIteration**, unsigned long) [141]
[175]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<PolicyIteration*> >::deallocate(std::allocator<PolicyIteration*>&, PolicyIteration**, unsigned long) [175]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<PolicyIteration*>::deallocate(PolicyIteration**, unsigned long) [169]
-----------------------------------------------
                0.00    0.00      10/10          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_allocate(unsigned long) [174]
[176]    0.0    0.00    0.00      10         std::allocator_traits<std::allocator<PolicyIteration*> >::allocate(std::allocator<PolicyIteration*>&, unsigned long) [176]
                0.00    0.00      10/10          __gnu_cxx::new_allocator<PolicyIteration*>::allocate(unsigned long, void const*) [170]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[177]    0.0    0.00    0.00      10         void std::allocator_traits<std::allocator<PolicyIteration*> >::construct<PolicyIteration*, PolicyIteration*>(std::allocator<PolicyIteration*>&, PolicyIteration**, PolicyIteration*&&) [177]
                0.00    0.00      10/40          PolicyIteration*&& std::forward<PolicyIteration*>(std::remove_reference<PolicyIteration*>::type&) [57]
                0.00    0.00      10/10          void __gnu_cxx::new_allocator<PolicyIteration*>::construct<PolicyIteration*, PolicyIteration*>(PolicyIteration**, PolicyIteration*&&) [171]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::push_back(PolicyIteration*&&) [182]
[178]    0.0    0.00    0.00      10         void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::emplace_back<PolicyIteration*>(PolicyIteration*&&) [178]
                0.00    0.00      10/10          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::end() [180]
                0.00    0.00      10/40          PolicyIteration*&& std::forward<PolicyIteration*>(std::remove_reference<PolicyIteration*>::type&) [57]
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::emplace_back<PolicyIteration*>(PolicyIteration*&&) [178]
[179]    0.0    0.00    0.00      10         void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
                0.00    0.00      30/35          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() [63]
                0.00    0.00      20/40          __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::base() const [50]
                0.00    0.00      20/20          PolicyIteration** std::__uninitialized_move_if_noexcept_a<PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*> >(PolicyIteration**, PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [124]
                0.00    0.00      10/10          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_check_len(unsigned long, char const*) const [173]
                0.00    0.00      10/10          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::begin() [181]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::difference_type __gnu_cxx::operator-<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&, __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&) [172]
                0.00    0.00      10/10          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_allocate(unsigned long) [174]
                0.00    0.00      10/40          PolicyIteration*&& std::forward<PolicyIteration*>(std::remove_reference<PolicyIteration*>::type&) [57]
                0.00    0.00      10/10          void std::allocator_traits<std::allocator<PolicyIteration*> >::construct<PolicyIteration*, PolicyIteration*>(std::allocator<PolicyIteration*>&, PolicyIteration**, PolicyIteration*&&) [177]
                0.00    0.00      10/15          void std::_Destroy<PolicyIteration**, PolicyIteration*>(PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [149]
                0.00    0.00      10/15          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_deallocate(PolicyIteration**, unsigned long) [141]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::emplace_back<PolicyIteration*>(PolicyIteration*&&) [178]
[180]    0.0    0.00    0.00      10         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::end() [180]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::__normal_iterator(PolicyIteration** const&) [108]
-----------------------------------------------
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&) [179]
[181]    0.0    0.00    0.00      10         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::begin() [181]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::__normal_iterator(PolicyIteration** const&) [108]
-----------------------------------------------
                0.00    0.00      10/10          TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[182]    0.0    0.00    0.00      10         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::push_back(PolicyIteration*&&) [182]
                0.00    0.00      10/10          std::remove_reference<PolicyIteration*&>::type&& std::move<PolicyIteration*&>(PolicyIteration*&) [183]
                0.00    0.00      10/10          void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::emplace_back<PolicyIteration*>(PolicyIteration*&&) [178]
-----------------------------------------------
                0.00    0.00      10/10          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::push_back(PolicyIteration*&&) [182]
[183]    0.0    0.00    0.00      10         std::remove_reference<PolicyIteration*&>::type&& std::move<PolicyIteration*&>(PolicyIteration*&) [183]
-----------------------------------------------
                0.00    0.00       2/10          void std::allocator_traits<std::allocator<int> >::construct<int, int const&>(std::allocator<int>&, int*, int const&) [345]
                0.00    0.00       2/10          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
                0.00    0.00       2/10          void __gnu_cxx::new_allocator<int>::construct<int, int const&>(int*, int const&) [308]
                0.00    0.00       2/10          std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [328]
                0.00    0.00       2/10          std::pair<int const, int>::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [348]
[184]    0.0    0.00    0.00      10         int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [184]
-----------------------------------------------
                0.00    0.00       9/9           std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [186]
[185]    0.0    0.00    0.00       9         std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::get() const [185]
-----------------------------------------------
                0.00    0.00       9/9           std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [187]
[186]    0.0    0.00    0.00       9         std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [186]
                0.00    0.00       9/9           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::get() const [185]
-----------------------------------------------
                0.00    0.00       2/9           main [20]
                0.00    0.00       7/9           RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >) [371]
[187]    0.0    0.00    0.00       9         std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [187]
                0.00    0.00       9/9           std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [186]
-----------------------------------------------
                0.00    0.00       2/9           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
                0.00    0.00       2/9           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::pair<int const, int> const&) [340]
                0.00    0.00       2/9           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::pair<int const, int>*, std::pair<int const, int> const&) [300]
                0.00    0.00       3/9           _ZNKSt8__detail10_Select1stclIRKSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ [279]
[188]    0.0    0.00    0.00       9         std::pair<int const, int> const& std::forward<std::pair<int const, int> const&>(std::remove_reference<std::pair<int const, int> const&>::type&) [188]
-----------------------------------------------
                0.00    0.00       2/8           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [310]
                0.00    0.00       3/8           std::vector<int, std::allocator<int> >::begin() [293]
                0.00    0.00       3/8           std::vector<int, std::allocator<int> >::end() [292]
[189]    0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [189]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [193]
[190]    0.0    0.00    0.00       8         std::move_iterator<int*>::base() const [190]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [313]
[191]    0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::size() const [191]
-----------------------------------------------
                0.00    0.00       8/8           std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [195]
[192]    0.0    0.00    0.00       8         std::move_iterator<int*>::move_iterator(int*) [192]
-----------------------------------------------
                0.00    0.00       8/8           int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [266]
[193]    0.0    0.00    0.00       8         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [193]
                0.00    0.00       8/8           int* std::__miter_base<int*>(int*) [194]
                0.00    0.00       8/8           std::move_iterator<int*>::base() const [190]
-----------------------------------------------
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [193]
[194]    0.0    0.00    0.00       8         int* std::__miter_base<int*>(int*) [194]
-----------------------------------------------
                0.00    0.00       8/8           int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [265]
[195]    0.0    0.00    0.00       8         std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [195]
                0.00    0.00       8/8           std::move_iterator<int*>::move_iterator(int*) [192]
-----------------------------------------------
                0.00    0.00       1/8           std::shared_ptr<Gridworld> std::make_shared<Gridworld, char const (&) [20]>(char const (&) [20]) [473]
                0.00    0.00       1/8           std::shared_ptr<Gridworld> std::allocate_shared<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::allocator<Gridworld> const&, char const (&) [20]) [476]
                0.00    0.00       1/8           std::shared_ptr<Gridworld>::shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [423]
                0.00    0.00       1/8           std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [435]
                0.00    0.00       1/8           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/8           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
                0.00    0.00       1/8           void std::allocator_traits<std::allocator<Gridworld> >::construct<Gridworld, char const (&) [20]>(std::allocator<Gridworld>&, Gridworld*, char const (&) [20]) [449]
                0.00    0.00       1/8           void __gnu_cxx::new_allocator<Gridworld>::construct<Gridworld, char const (&) [20]>(Gridworld*, char const (&) [20]) [391]
[196]    0.0    0.00    0.00       8         char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
-----------------------------------------------
                0.00    0.00       1/7           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*) [324]
                0.00    0.00       2/7           void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
                0.00    0.00       4/7           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [358]
[197]    0.0    0.00    0.00       7         std::__detail::_Hash_node<std::pair<int const, int>, false>::_M_next() const [197]
-----------------------------------------------
                0.00    0.00       1/7           std::vector<int, std::allocator<int> >::~vector() [463]
                0.00    0.00       6/7           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[198]    0.0    0.00    0.00       7         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [198]
-----------------------------------------------
                0.00    0.00       6/6           Max(Vector const&) [200]
[199]    0.0    0.00    0.00       6         double Max<double>(int, double const*) [199]
-----------------------------------------------
                0.00    0.00       1/6           main [20]
                0.00    0.00       5/6           TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
[200]    0.0    0.00    0.00       6         Max(Vector const&) [200]
                0.00    0.00       6/30          Vector::Size() const [66]
                0.00    0.00       6/6           double Max<double>(int, double const*) [199]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<FixedDiscretePolicy*>::allocator() [205]
[201]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<FixedDiscretePolicy*>::new_allocator() [201]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<FixedDiscretePolicy*>::~allocator() [206]
[202]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<FixedDiscretePolicy*>::~new_allocator() [202]
-----------------------------------------------
                0.00    0.00       2/6           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [307]
                0.00    0.00       4/6           std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [254]
[203]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<int>::max_size() const [203]
-----------------------------------------------
                0.00    0.00       3/6           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
                0.00    0.00       3/6           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const [282]
[204]    0.0    0.00    0.00       6         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [204]
                0.00    0.00       6/98          std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [27]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::_Vector_impl() [207]
[205]    0.0    0.00    0.00       6         std::allocator<FixedDiscretePolicy*>::allocator() [205]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<FixedDiscretePolicy*>::new_allocator() [201]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::~_Vector_impl() [208]
[206]    0.0    0.00    0.00       6         std::allocator<FixedDiscretePolicy*>::~allocator() [206]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<FixedDiscretePolicy*>::~new_allocator() [202]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_base() [209]
[207]    0.0    0.00    0.00       6         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::_Vector_impl() [207]
                0.00    0.00       6/6           std::allocator<FixedDiscretePolicy*>::allocator() [205]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~_Vector_base() [210]
[208]    0.0    0.00    0.00       6         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::~_Vector_impl() [208]
                0.00    0.00       6/6           std::allocator<FixedDiscretePolicy*>::~allocator() [206]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::vector() [211]
[209]    0.0    0.00    0.00       6         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_base() [209]
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::_Vector_impl() [207]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector() [212]
[210]    0.0    0.00    0.00       6         std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~_Vector_base() [210]
                0.00    0.00       6/18          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_deallocate(FixedDiscretePolicy**, unsigned long) [133]
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::~_Vector_impl() [208]
-----------------------------------------------
                0.00    0.00       1/6           TreeBRLPolicy::TreeBRLPolicy(int, int, double, MDPModel*, RandomNumberGenerator*, int, TreeBRLPolicy::LeafNodeValue, TreeBRLPolicy::WhichAlgo, int, int, int) [381]
                0.00    0.00       5/6           TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[211]    0.0    0.00    0.00       6         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::vector() [211]
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_base() [209]
-----------------------------------------------
                0.00    0.00       1/6           TreeBRLPolicy::~TreeBRLPolicy() [382]
                0.00    0.00       5/6           TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[212]    0.0    0.00    0.00       6         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector() [212]
                0.00    0.00       6/43          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() [49]
                0.00    0.00       6/19          void std::_Destroy<FixedDiscretePolicy**, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [129]
                0.00    0.00       6/6           std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~_Vector_base() [210]
-----------------------------------------------
                0.00    0.00       2/6           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
                0.00    0.00       2/6           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [341]
                0.00    0.00       2/6           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [301]
[213]    0.0    0.00    0.00       6         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [213]
-----------------------------------------------
                0.00    0.00       2/6           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
                0.00    0.00       2/6           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [341]
                0.00    0.00       2/6           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [301]
[214]    0.0    0.00    0.00       6         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [214]
-----------------------------------------------
                0.00    0.00       2/6           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
                0.00    0.00       2/6           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [341]
                0.00    0.00       2/6           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [301]
[215]    0.0    0.00    0.00       6         std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [215]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator<PolicyIteration*>::allocator() [224]
[216]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<PolicyIteration*>::new_allocator() [216]
-----------------------------------------------
                0.00    0.00       5/5           std::allocator<PolicyIteration*>::~allocator() [225]
[217]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<PolicyIteration*>::~new_allocator() [217]
-----------------------------------------------
                0.00    0.00       5/5           std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() const [223]
[218]    0.0    0.00    0.00       5         __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() const [218]
                0.00    0.00       5/5           __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr() const [219]
-----------------------------------------------
                0.00    0.00       5/5           __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() const [218]
[219]    0.0    0.00    0.00       5         __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr() const [219]
-----------------------------------------------
                0.00    0.00       2/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [316]
                0.00    0.00       3/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
[220]    0.0    0.00    0.00       5         std::hash<int>::operator()(int) const [220]
-----------------------------------------------
                0.00    0.00       2/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [316]
                0.00    0.00       3/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
[221]    0.0    0.00    0.00       5         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [221]
                0.00    0.00       5/5           std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true> const&) [232]
-----------------------------------------------
                0.00    0.00       2/5           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const [370]
                0.00    0.00       3/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
[222]    0.0    0.00    0.00       5         std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() const [222]
                0.00    0.00       5/5           std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() const [223]
-----------------------------------------------
                0.00    0.00       5/5           std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() const [222]
[223]    0.0    0.00    0.00       5         std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() const [223]
                0.00    0.00       5/5           __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() const [218]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::_Vector_impl() [226]
[224]    0.0    0.00    0.00       5         std::allocator<PolicyIteration*>::allocator() [224]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<PolicyIteration*>::new_allocator() [216]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::~_Vector_impl() [227]
[225]    0.0    0.00    0.00       5         std::allocator<PolicyIteration*>::~allocator() [225]
                0.00    0.00       5/5           __gnu_cxx::new_allocator<PolicyIteration*>::~new_allocator() [217]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_base() [228]
[226]    0.0    0.00    0.00       5         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::_Vector_impl() [226]
                0.00    0.00       5/5           std::allocator<PolicyIteration*>::allocator() [224]
-----------------------------------------------
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::~_Vector_base() [229]
[227]    0.0    0.00    0.00       5         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::~_Vector_impl() [227]
                0.00    0.00       5/5           std::allocator<PolicyIteration*>::~allocator() [225]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::vector() [230]
[228]    0.0    0.00    0.00       5         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_base() [228]
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::_Vector_impl() [226]
-----------------------------------------------
                0.00    0.00       5/5           std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::~vector() [231]
[229]    0.0    0.00    0.00       5         std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::~_Vector_base() [229]
                0.00    0.00       5/15          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_deallocate(PolicyIteration**, unsigned long) [141]
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::~_Vector_impl() [227]
-----------------------------------------------
                0.00    0.00       5/5           TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[230]    0.0    0.00    0.00       5         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::vector() [230]
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_base() [228]
-----------------------------------------------
                0.00    0.00       5/5           TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
[231]    0.0    0.00    0.00       5         std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::~vector() [231]
                0.00    0.00       5/35          std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() [63]
                0.00    0.00       5/15          void std::_Destroy<PolicyIteration**, PolicyIteration*>(PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&) [149]
                0.00    0.00       5/5           std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::~_Vector_base() [229]
-----------------------------------------------
                0.00    0.00       5/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [221]
[232]    0.0    0.00    0.00       5         std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true> const&) [232]
-----------------------------------------------
                0.00    0.00       1/4           __gnu_cxx::__atomic_add_dispatch(int*, int) [401]
                0.00    0.00       3/4           __gnu_cxx::__exchange_and_add_dispatch(int*, int) [273]
[233]    0.0    0.00    0.00       4         __gthread_active_p() [233]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<Gridworld>::~allocator() [243]
[234]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Gridworld>::~new_allocator() [234]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [251]
[235]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [235]
-----------------------------------------------
                0.00    0.00       4/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::destroy<std::pair<int const, int> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*) [252]
[236]    0.0    0.00    0.00       4         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::destroy<std::pair<int const, int> >(std::pair<int const, int>*) [236]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, unsigned long) [253]
[237]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocate(unsigned long, void const*) [237]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::max_size() const [239]
-----------------------------------------------
                0.00    0.00       4/4           void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [475]
[238]    0.0    0.00    0.00       4         bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [238]
                0.00    0.00       8/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [132]
-----------------------------------------------
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocate(unsigned long, void const*) [237]
[239]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::max_size() const [239]
-----------------------------------------------
                0.00    0.00       1/4           void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
                0.00    0.00       1/4           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [414]
                0.00    0.00       2/4           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [325]
[240]    0.0    0.00    0.00       4         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [240]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<int, std::allocator<int> >::max_size() const [242]
[241]    0.0    0.00    0.00       4         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [241]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [313]
[242]    0.0    0.00    0.00       4         std::vector<int, std::allocator<int> >::max_size() const [242]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [254]
                0.00    0.00       4/4           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [241]
-----------------------------------------------
                0.00    0.00       1/4           std::shared_ptr<Gridworld> std::make_shared<Gridworld, char const (&) [20]>(char const (&) [20]) [473]
                0.00    0.00       1/4           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/4           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
                0.00    0.00       1/4           std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::~_Sp_ebo_helper() [440]
[243]    0.0    0.00    0.00       4         std::allocator<Gridworld>::~allocator() [243]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Gridworld>::~new_allocator() [234]
-----------------------------------------------
                0.00    0.00       2/4           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long) [357]
                0.00    0.00       2/4           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [359]
[244]    0.0    0.00    0.00       4         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [244]
                0.00    0.00       4/20          __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [106]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [247]
[245]    0.0    0.00    0.00       4         std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&) [245]
-----------------------------------------------
                0.00    0.00       2/4           std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [328]
                0.00    0.00       2/4           std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [329]
[246]    0.0    0.00    0.00       4         std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [246]
-----------------------------------------------
                0.00    0.00       2/4           std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [328]
                0.00    0.00       2/4           int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&) [366]
[247]    0.0    0.00    0.00       4         std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [247]
                0.00    0.00       4/4           std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&) [245]
-----------------------------------------------
                0.00    0.00       4/4           int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [261]
[248]    0.0    0.00    0.00       4         int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [248]
-----------------------------------------------
                0.00    0.00       1/4           std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [436]
                0.00    0.00       3/4           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [290]
[249]    0.0    0.00    0.00       4         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [249]
                0.00    0.00       2/2           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [339]
-----------------------------------------------
                0.00    0.00       4/4           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [257]
[250]    0.0    0.00    0.00       4         std::pointer_traits<std::__detail::_Hash_node<std::pair<int const, int>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [250]
                0.00    0.00       4/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [267]
-----------------------------------------------
                0.00    0.00       4/4           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [257]
[251]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [251]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [235]
-----------------------------------------------
                0.00    0.00       4/4           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [257]
[252]    0.0    0.00    0.00       4         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::destroy<std::pair<int const, int> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*) [252]
                0.00    0.00       4/4           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::destroy<std::pair<int const, int> >(std::pair<int const, int>*) [236]
-----------------------------------------------
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
[253]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, unsigned long) [253]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocate(unsigned long, void const*) [237]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<int, std::allocator<int> >::max_size() const [242]
[254]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [254]
                0.00    0.00       4/6           __gnu_cxx::new_allocator<int>::max_size() const [203]
-----------------------------------------------
                0.00    0.00       4/4           int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [263]
[255]    0.0    0.00    0.00       4         int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [255]
                0.00    0.00       4/4           int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [266]
-----------------------------------------------
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
[256]    0.0    0.00    0.00       4         std::__detail::_Hash_node<std::pair<int const, int>, false>::_Hash_node() [256]
                0.00    0.00       4/4           std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_Hash_node_value_base() [258]
-----------------------------------------------
                0.00    0.00       4/4           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [358]
[257]    0.0    0.00    0.00       4         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [257]
                0.00    0.00       8/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() [118]
                0.00    0.00       4/4           std::pointer_traits<std::__detail::_Hash_node<std::pair<int const, int>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [250]
                0.00    0.00       4/4           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::destroy<std::pair<int const, int> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*) [252]
                0.00    0.00       4/11          std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() [168]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [251]
-----------------------------------------------
                0.00    0.00       4/4           std::__detail::_Hash_node<std::pair<int const, int>, false>::_Hash_node() [256]
[258]    0.0    0.00    0.00       4         std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_Hash_node_value_base() [258]
                0.00    0.00       4/119         std::__detail::_Hash_node_base::_Hash_node_base() [25]
-----------------------------------------------
                0.00    0.00       4/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [267]
[259]    0.0    0.00    0.00       4         std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [259]
-----------------------------------------------
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
[260]    0.0    0.00    0.00       4         std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [260]
-----------------------------------------------
                0.00    0.00       4/4           int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [262]
[261]    0.0    0.00    0.00       4         int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [261]
                0.00    0.00       4/4           int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [248]
-----------------------------------------------
                0.00    0.00       4/4           int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [266]
[262]    0.0    0.00    0.00       4         int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [262]
                0.00    0.00      12/12          int* std::__niter_base<int*>(int*) [164]
                0.00    0.00       4/4           int* std::__copy_move_a<true, int*, int*>(int*, int*, int*) [261]
-----------------------------------------------
                0.00    0.00       4/4           int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [264]
[263]    0.0    0.00    0.00       4         int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [263]
                0.00    0.00       4/4           int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [255]
-----------------------------------------------
                0.00    0.00       4/4           int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [265]
[264]    0.0    0.00    0.00       4         int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [264]
                0.00    0.00       4/4           int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [263]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[265]    0.0    0.00    0.00       4         int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [265]
                0.00    0.00       8/8           std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*) [195]
                0.00    0.00       4/4           int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&) [264]
-----------------------------------------------
                0.00    0.00       4/4           int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [255]
[266]    0.0    0.00    0.00       4         int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [266]
                0.00    0.00       8/8           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [193]
                0.00    0.00       4/4           int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*) [262]
-----------------------------------------------
                0.00    0.00       4/4           std::pointer_traits<std::__detail::_Hash_node<std::pair<int const, int>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [250]
[267]    0.0    0.00    0.00       4         std::__detail::_Hash_node<std::pair<int const, int>, false>* std::addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [267]
                0.00    0.00       4/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [259]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<Gridworld>::allocator(std::allocator<Gridworld> const&) [283]
[268]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<Gridworld>::new_allocator(__gnu_cxx::new_allocator<Gridworld> const&) [268]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~allocator() [284]
[269]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~new_allocator() [269]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [291]
[270]    0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<Gridworld>::_M_ptr() [270]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<Gridworld>::_M_addr() [271]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<Gridworld>::_M_ptr() [270]
[271]    0.0    0.00    0.00       3         __gnu_cxx::__aligned_buffer<Gridworld>::_M_addr() [271]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::__exchange_and_add_dispatch(int*, int) [273]
[272]    0.0    0.00    0.00       3         __gnu_cxx::__exchange_and_add_single(int*, int) [272]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [339]
[273]    0.0    0.00    0.00       3         __gnu_cxx::__exchange_and_add_dispatch(int*, int) [273]
                0.00    0.00       3/4           __gthread_active_p() [233]
                0.00    0.00       3/3           __gnu_cxx::__exchange_and_add_single(int*, int) [272]
-----------------------------------------------
                0.00    0.00       1/3           void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [475]
                0.00    0.00       2/3           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[274]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [274]
                0.00    0.00       6/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [132]
-----------------------------------------------
                0.00    0.00       3/3           RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >) [371]
[275]    0.0    0.00    0.00       3         Environment<int, int>::getState() const [275]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*) [324]
                0.00    0.00       2/3           void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
[276]    0.0    0.00    0.00       3         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false>*) const [276]
                0.00    0.00       3/3           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
                0.00    0.00       2/3           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
[277]    0.0    0.00    0.00       3         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const [277]
                0.00    0.00       3/3           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const [282]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [285]
[278]    0.0    0.00    0.00       3         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [278]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
[279]    0.0    0.00    0.00       3         _ZNKSt8__detail10_Select1stclIRKSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ [279]
                0.00    0.00       3/9           std::pair<int const, int> const& std::forward<std::pair<int const, int> const&>(std::remove_reference<std::pair<int const, int> const&>::type&) [188]
                0.00    0.00       3/3           std::tuple_element<0ul, std::pair<int const, int> >::type const& std::get<0ul, int const, int>(std::pair<int const, int> const&) [295]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
[280]    0.0    0.00    0.00       3         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [280]
                0.00    0.00       3/3           std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&) [294]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false>*) const [276]
[281]    0.0    0.00    0.00       3         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [281]
                0.00    0.00       3/6           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [204]
                0.00    0.00       3/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [221]
                0.00    0.00       3/3           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [280]
                0.00    0.00       3/5           std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() const [222]
                0.00    0.00       3/3           _ZNKSt8__detail10_Select1stclIRKSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ [279]
                0.00    0.00       3/5           std::hash<int>::operator()(int) const [220]
                0.00    0.00       3/98          std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [26]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const [277]
[282]    0.0    0.00    0.00       3         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const [282]
                0.00    0.00       3/6           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [204]
                0.00    0.00       3/98          std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [26]
-----------------------------------------------
                0.00    0.00       1/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
                0.00    0.00       1/3           std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_Sp_ebo_helper(std::allocator<Gridworld> const&) [439]
[283]    0.0    0.00    0.00       3         std::allocator<Gridworld>::allocator(std::allocator<Gridworld> const&) [283]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<Gridworld>::new_allocator(__gnu_cxx::new_allocator<Gridworld> const&) [268]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
                0.00    0.00       2/3           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::~_Hashtable_ebo_helper() [362]
[284]    0.0    0.00    0.00       3         std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~allocator() [284]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~new_allocator() [269]
-----------------------------------------------
                0.00    0.00       3/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [286]
[285]    0.0    0.00    0.00       3         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [285]
                0.00    0.00       3/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [278]
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [359]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [414]
                0.00    0.00       2/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [326]
[286]    0.0    0.00    0.00       3         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [286]
                0.00    0.00       3/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [285]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<0ul, std::pair<int const, int> >::type const& std::get<0ul, int const, int>(std::pair<int const, int> const&) [295]
[287]    0.0    0.00    0.00       3         int const& std::__pair_get<0ul>::__const_get<int const, int>(std::pair<int const, int> const&) [287]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<int*>(int*, int*) [298]
[288]    0.0    0.00    0.00       3         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [288]
-----------------------------------------------
                0.00    0.00       1/3           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
                0.00    0.00       2/3           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[289]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [289]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [343]
-----------------------------------------------
                0.00    0.00       1/3           _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE [433]
                0.00    0.00       2/3           std::shared_ptr<Environment<int, int> >::~shared_ptr() [327]
[290]    0.0    0.00    0.00       3         std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [290]
                0.00    0.00       3/4           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [249]
-----------------------------------------------
                0.00    0.00       1/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
                0.00    0.00       1/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [454]
                0.00    0.00       1/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [455]
[291]    0.0    0.00    0.00       3         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [291]
                0.00    0.00       3/3           __gnu_cxx::__aligned_buffer<Gridworld>::_M_ptr() [270]
-----------------------------------------------
                0.00    0.00       1/3           main [20]
                0.00    0.00       2/3           std::vector<int, std::allocator<int> >::push_back(int const&) [352]
[292]    0.0    0.00    0.00       3         std::vector<int, std::allocator<int> >::end() [292]
                0.00    0.00       3/8           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [189]
-----------------------------------------------
                0.00    0.00       1/3           main [20]
                0.00    0.00       2/3           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[293]    0.0    0.00    0.00       3         std::vector<int, std::allocator<int> >::begin() [293]
                0.00    0.00       3/8           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [189]
-----------------------------------------------
                0.00    0.00       3/3           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [280]
[294]    0.0    0.00    0.00       3         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&) [294]
-----------------------------------------------
                0.00    0.00       3/3           _ZNKSt8__detail10_Select1stclIRKSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ [279]
[295]    0.0    0.00    0.00       3         std::tuple_element<0ul, std::pair<int const, int> >::type const& std::get<0ul, int const, int>(std::pair<int const, int> const&) [295]
                0.00    0.00       3/3           int const& std::__pair_get<0ul>::__const_get<int const, int>(std::pair<int const, int> const&) [287]
-----------------------------------------------
                0.00    0.00       3/3           _ZSt4swapIP11EnvironmentIiiEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SF_ [482]
[296]    0.0    0.00    0.00       3         std::remove_reference<Environment<int, int>*&>::type&& std::move<Environment<int, int>*&>(Environment<int, int>*&) [296]
-----------------------------------------------
                0.00    0.00       3/3           _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [483]
[297]    0.0    0.00    0.00       3         std::remove_reference<int&>::type&& std::move<int&>(int&) [297]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [299]
[298]    0.0    0.00    0.00       3         void std::_Destroy<int*>(int*, int*) [298]
                0.00    0.00       3/3           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [288]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<int, std::allocator<int> >::~vector() [463]
                0.00    0.00       2/3           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[299]    0.0    0.00    0.00       3         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [299]
                0.00    0.00       3/3           void std::_Destroy<int*>(int*, int*) [298]
-----------------------------------------------
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::pair<int const, int> const&) [340]
[300]    0.0    0.00    0.00       2         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::pair<int const, int>*, std::pair<int const, int> const&) [300]
                0.00    0.00       2/9           std::pair<int const, int> const& std::forward<std::pair<int const, int> const&>(std::remove_reference<std::pair<int const, int> const&>::type&) [188]
-----------------------------------------------
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [341]
[301]    0.0    0.00    0.00       2         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [301]
                0.00    0.00       2/6           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [213]
                0.00    0.00       2/6           std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [215]
                0.00    0.00       2/6           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [214]
                0.00    0.00       2/2           std::tuple<int const&>::tuple(std::tuple<int const&>&&) [349]
                0.00    0.00       2/2           std::pair<int const, int>::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>) [347]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [319]
[302]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [302]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [342]
[303]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [303]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocator<Gridworld>(std::allocator<Gridworld> const&) [320]
[304]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [304]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [321]
[305]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [305]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [343]
[306]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [306]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [344]
[307]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [307]
                0.00    0.00       2/6           __gnu_cxx::new_allocator<int>::max_size() const [203]
-----------------------------------------------
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<int> >::construct<int, int const&>(std::allocator<int>&, int*, int const&) [345]
[308]    0.0    0.00    0.00       2         void __gnu_cxx::new_allocator<int>::construct<int, int const&>(int*, int const&) [308]
                0.00    0.00       2/10          int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [184]
-----------------------------------------------
                0.00    0.00       2/2           void std::iter_swap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [485]
[309]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [309]
-----------------------------------------------
                0.00    0.00       2/2           void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [475]
[310]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [310]
                0.00    0.00       2/8           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [189]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
[311]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, int const&, unsigned long) const [311]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const [312]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, int const&, unsigned long) const [311]
[312]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const [312]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[313]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [313]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::size() const [191]
                0.00    0.00       4/4           std::vector<int, std::allocator<int> >::max_size() const [242]
                0.00    0.00       2/62          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [32]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
[314]    0.0    0.00    0.00       2         std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::operator->() const [314]
                0.00    0.00       2/11          std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() [168]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
[315]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const [315]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
[316]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [316]
                0.00    0.00       2/5           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [221]
                0.00    0.00       2/5           std::hash<int>::operator()(int) const [220]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[317]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) const [317]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[318]    0.0    0.00    0.00       2         std::__detail::_Prime_rehash_policy::_M_state() const [318]
-----------------------------------------------
                0.00    0.00       1/2           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::select_on_container_copy_construction(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [450]
                0.00    0.00       1/2           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [472]
[319]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [319]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [302]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
[320]    0.0    0.00    0.00       2         std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocator<Gridworld>(std::allocator<Gridworld> const&) [320]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [304]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
[321]    0.0    0.00    0.00       2         std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [321]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [305]
-----------------------------------------------
                0.00    0.00       1/2           void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
                0.00    0.00       1/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [414]
[322]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [322]
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long) [357]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
[323]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
                0.00    0.00       2/2           std::__detail::_Prime_rehash_policy::_M_state() const [318]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) const [317]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*) [324]
                0.00    0.00       2/2           std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [354]
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [416]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [464]
                0.00    0.00       1/1           std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() [468]
                0.00    0.00       1/1           _ZNKSt8__detail10_Select1stclIRSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_ [407]
                0.00    0.00       1/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const [277]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[324]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*) [324]
                0.00    0.00       1/7           std::__detail::_Hash_node<std::pair<int const, int>, false>::_M_next() const [197]
                0.00    0.00       1/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false>*) const [276]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [326]
[325]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [325]
                0.00    0.00       2/4           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [240]
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [358]
-----------------------------------------------
                0.00    0.00       2/2           std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::~unordered_map() [331]
[326]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [326]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [325]
                0.00    0.00       2/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [286]
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::~_Hashtable_alloc() [360]
-----------------------------------------------
                0.00    0.00       2/2           main [20]
[327]    0.0    0.00    0.00       2         std::shared_ptr<Environment<int, int> >::~shared_ptr() [327]
                0.00    0.00       2/3           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [290]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple<int const&>::tuple(std::tuple<int const&>&&) [349]
[328]    0.0    0.00    0.00       2         std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [328]
                0.00    0.00       2/4           std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [247]
                0.00    0.00       2/4           std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [246]
                0.00    0.00       2/10          int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [184]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple<int const&>::tuple<void, true>(int const&) [350]
[329]    0.0    0.00    0.00       2         std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [329]
                0.00    0.00       2/4           std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [246]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[330]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [330]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [344]
-----------------------------------------------
                0.00    0.00       2/2           main [20]
[331]    0.0    0.00    0.00       2         std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::~unordered_map() [331]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [326]
-----------------------------------------------
                0.00    0.00       2/2           main [20]
[332]    0.0    0.00    0.00       2         std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::operator[](int const&) [332]
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
-----------------------------------------------
                0.00    0.00       2/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [346]
[333]    0.0    0.00    0.00       2         std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>&) [333]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Gridworld, void>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&&) [432]
                0.00    0.00       1/2           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>&) [429]
[334]    0.0    0.00    0.00       2         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [334]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [431]
                0.00    0.00       1/2           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Gridworld, void>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&&) [432]
[335]    0.0    0.00    0.00       2         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [335]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [359]
[336]    0.0    0.00    0.00       2         std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [336]
                0.00    0.00       2/2           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [369]
-----------------------------------------------
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&) [477]
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
[337]    0.0    0.00    0.00       2         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*) [337]
                0.00    0.00       2/2           std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&) [365]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
[338]    0.0    0.00    0.00       2         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [338]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [451]
-----------------------------------------------
                0.00    0.00       2/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [249]
[339]    0.0    0.00    0.00       2         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [339]
                0.00    0.00       3/3           __gnu_cxx::__exchange_and_add_dispatch(int*, int) [273]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [454]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
[340]    0.0    0.00    0.00       2         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::pair<int const, int> const&) [340]
                0.00    0.00       2/9           std::pair<int const, int> const& std::forward<std::pair<int const, int> const&>(std::remove_reference<std::pair<int const, int> const&>::type&) [188]
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::pair<int const, int>*, std::pair<int const, int> const&) [300]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
[341]    0.0    0.00    0.00       2         void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [341]
                0.00    0.00       2/6           std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [215]
                0.00    0.00       2/6           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [213]
                0.00    0.00       2/6           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [214]
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [301]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [359]
[342]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [342]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [303]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [289]
[343]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [343]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [306]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [330]
[344]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [344]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [307]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
[345]    0.0    0.00    0.00       2         void std::allocator_traits<std::allocator<int> >::construct<int, int const&>(std::allocator<int>&, int*, int const&) [345]
                0.00    0.00       2/10          int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [184]
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<int>::construct<int, int const&>(int*, int const&) [308]
-----------------------------------------------
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [454]
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
[346]    0.0    0.00    0.00       2         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [346]
                0.00    0.00       2/2           std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>&) [333]
-----------------------------------------------
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [301]
[347]    0.0    0.00    0.00       2         std::pair<int const, int>::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>) [347]
                0.00    0.00       2/2           std::pair<int const, int>::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [348]
-----------------------------------------------
                0.00    0.00       2/2           std::pair<int const, int>::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>) [347]
[348]    0.0    0.00    0.00       2         std::pair<int const, int>::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [348]
                0.00    0.00       2/10          int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [184]
                0.00    0.00       2/2           std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&) [367]
-----------------------------------------------
                0.00    0.00       2/2           void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [301]
[349]    0.0    0.00    0.00       2         std::tuple<int const&>::tuple(std::tuple<int const&>&&) [349]
                0.00    0.00       2/2           std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [328]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
[350]    0.0    0.00    0.00       2         std::tuple<int const&>::tuple<void, true>(int const&) [350]
                0.00    0.00       2/2           std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [329]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::push_back(int const&) [352]
[351]    0.0    0.00    0.00       2         void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
                0.00    0.00       6/7           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [198]
                0.00    0.00       4/18          __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [132]
                0.00    0.00       4/4           int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [265]
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [313]
                0.00    0.00       2/3           std::vector<int, std::allocator<int> >::begin() [293]
                0.00    0.00       2/3           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [274]
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [330]
                0.00    0.00       2/10          int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [184]
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<int> >::construct<int, int const&>(std::allocator<int>&, int*, int const&) [345]
                0.00    0.00       2/3           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [299]
                0.00    0.00       2/3           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [289]
-----------------------------------------------
                0.00    0.00       2/2           main [20]
[352]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::push_back(int const&) [352]
                0.00    0.00       2/3           std::vector<int, std::allocator<int> >::end() [292]
                0.00    0.00       2/2           void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [351]
-----------------------------------------------
                0.00    0.00       2/2           main [20]
[353]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::operator[](unsigned long) [353]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[354]    0.0    0.00    0.00       2         std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [354]
                0.00    0.00       2/2           std::__detail::_Node_iterator_base<std::pair<int const, int>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [361]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const [370]
[355]    0.0    0.00    0.00       2         std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
                0.00    0.00       4/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() [118]
                0.00    0.00       2/4           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, unsigned long) [253]
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>::_Hash_node() [256]
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [260]
                0.00    0.00       2/11          std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() [168]
                0.00    0.00       2/9           std::pair<int const, int> const& std::forward<std::pair<int const, int> const&>(std::remove_reference<std::pair<int const, int> const&>::type&) [188]
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::pair<int const, int> const&) [340]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
[356]    0.0    0.00    0.00       2         std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
                0.00    0.00       4/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() [118]
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [260]
                0.00    0.00       2/4           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, unsigned long) [253]
                0.00    0.00       2/4           std::__detail::_Hash_node<std::pair<int const, int>, false>::_Hash_node() [256]
                0.00    0.00       2/11          std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() [168]
                0.00    0.00       2/6           std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [213]
                0.00    0.00       2/6           std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&) [215]
                0.00    0.00       2/6           std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [214]
                0.00    0.00       2/2           void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [341]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [322]
[357]    0.0    0.00    0.00       2         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long) [357]
                0.00    0.00       2/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() [118]
                0.00    0.00       2/18          std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [134]
                0.00    0.00       2/4           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [244]
                0.00    0.00       2/18          std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [135]
                0.00    0.00       2/20          std::allocator<std::__detail::_Hash_node_base*>::~allocator() [111]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [325]
[358]    0.0    0.00    0.00       2         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [358]
                0.00    0.00       4/7           std::__detail::_Hash_node<std::pair<int const, int>, false>::_M_next() const [197]
                0.00    0.00       4/4           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [257]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [285]
[359]    0.0    0.00    0.00       2         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [359]
                0.00    0.00       2/2           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [336]
                0.00    0.00       2/20          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() [118]
                0.00    0.00       2/4           std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [244]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [342]
                0.00    0.00       2/20          std::allocator<std::__detail::_Hash_node_base*>::~allocator() [111]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [326]
[360]    0.0    0.00    0.00       2         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::~_Hashtable_alloc() [360]
                0.00    0.00       2/2           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::~_Hashtable_ebo_helper() [362]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [354]
[361]    0.0    0.00    0.00       2         std::__detail::_Node_iterator_base<std::pair<int const, int>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<int const, int>, false>*) [361]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::~_Hashtable_alloc() [360]
[362]    0.0    0.00    0.00       2         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::~_Hashtable_ebo_helper() [362]
                0.00    0.00       2/3           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~allocator() [284]
-----------------------------------------------
                0.00    0.00       2/2           std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::operator[](int const&) [332]
[363]    0.0    0.00    0.00       2         std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [363]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [316]
                0.00    0.00       2/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const [277]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, int const&, unsigned long) const [311]
                0.00    0.00       2/2           std::tuple<int const&>::tuple<void, true>(int const&) [350]
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [356]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
                0.00    0.00       2/2           std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::operator->() const [314]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [369]
[364]    0.0    0.00    0.00       2         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [364]
-----------------------------------------------
                0.00    0.00       2/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*) [337]
[365]    0.0    0.00    0.00       2         std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&) [365]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&) [367]
[366]    0.0    0.00    0.00       2         int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&) [366]
                0.00    0.00       2/4           std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [247]
-----------------------------------------------
                0.00    0.00       2/2           std::pair<int const, int>::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [348]
[367]    0.0    0.00    0.00       2         std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&) [367]
                0.00    0.00       2/2           int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&) [366]
-----------------------------------------------
                0.00    0.00       1/2           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [466]
                0.00    0.00       1/2           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [472]
[368]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&& std::forward<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::remove_reference<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::type&) [368]
-----------------------------------------------
                0.00    0.00       2/2           std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [336]
[369]    0.0    0.00    0.00       2         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [369]
                0.00    0.00       2/2           std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [364]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
[370]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const [370]
                0.00    0.00       2/5           std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() const [222]
                0.00    0.00       2/2           std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&) [355]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[371]    0.0    0.00    0.00       1         RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >) [371]
                0.00    0.00       7/9           std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [187]
                0.00    0.00       3/3           Environment<int, int>::getState() const [275]
                0.00    0.00       1/1           TreeBRLPolicy::Reset(int) [380]
                0.00    0.00       1/1           Environment<int, int>::getReward() const [404]
                0.00    0.00       1/1           TreeBRLPolicy::Act(double, int) [379]
-----------------------------------------------
                0.00    0.00       1/1           Min(Vector const&) [373]
[372]    0.0    0.00    0.00       1         double Min<double>(int, double const*) [372]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[373]    0.0    0.00    0.00       1         Min(Vector const&) [373]
                0.00    0.00       1/30          Vector::Size() const [66]
                0.00    0.00       1/1           double Min<double>(int, double const*) [372]
-----------------------------------------------
                                  20             TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
                0.00    0.00       1/1           TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) [378]
[374]    0.0    0.00    0.00       1+20      TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
                0.00    0.00     100/140         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::operator[](unsigned long) [24]
                0.00    0.00      25/151         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::size() const [23]
                0.00    0.00      20/8449        Vector::operator()(int) [22]
                0.00    0.00       5/6           Max(Vector const&) [200]
                                  20             TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
-----------------------------------------------
                                  20             TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
                0.00    0.00       1/1           TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) [378]
[375]    0.0    0.00    0.00       1+20      TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
                0.00    0.00      32/32          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::operator[](unsigned long) [64]
                0.00    0.00      25/151         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::size() const [23]
                0.00    0.00      20/23          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::operator[](unsigned long) [91]
                0.00    0.00      20/22          ArgMax(Vector const&) [93]
                0.00    0.00      20/20          TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel*, int, int, double, double, TreeBRLPolicy::BeliefState*) [104]
                0.00    0.00      20/20          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::push_back(TreeBRLPolicy::BeliefState*&&) [117]
                0.00    0.00      20/140         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::operator[](unsigned long) [24]
                0.00    0.00      12/12          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::push_back(FixedDiscretePolicy*&&) [163]
                0.00    0.00      10/10          std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::push_back(PolicyIteration*&&) [182]
                0.00    0.00       5/5           std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::vector() [230]
                0.00    0.00       5/6           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::vector() [211]
                0.00    0.00       5/6           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector() [212]
                0.00    0.00       5/5           std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::~vector() [231]
                                  20             TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
-----------------------------------------------
                0.00    0.00       1/1           TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) [378]
[376]    0.0    0.00    0.00       1         TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel const*, int) [376]
                0.00    0.00       1/21          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::vector() [102]
-----------------------------------------------
                                  20             TreeBRLPolicy::BeliefState::~BeliefState() [377]
                0.00    0.00       1/1           TreeBRLPolicy::Act(double, int) [379]
[377]    0.0    0.00    0.00       1+20      TreeBRLPolicy::BeliefState::~BeliefState() [377]
                0.00    0.00      41/151         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::size() const [23]
                0.00    0.00      21/21          std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~vector() [103]
                0.00    0.00      20/140         std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::operator[](unsigned long) [24]
                                  20             TreeBRLPolicy::BeliefState::~BeliefState() [377]
-----------------------------------------------
                0.00    0.00       1/1           TreeBRLPolicy::Act(double, int) [379]
[378]    0.0    0.00    0.00       1         TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) [378]
                0.00    0.00       1/1           TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel const*, int) [376]
                0.00    0.00       1/1           TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [375]
                0.00    0.00       1/1           TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [374]
-----------------------------------------------
                0.00    0.00       1/1           RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >) [371]
[379]    0.0    0.00    0.00       1         TreeBRLPolicy::Act(double, int) [379]
                0.00    0.00       3/23          std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::operator[](unsigned long) [91]
                0.00    0.00       2/22          ArgMax(Vector const&) [93]
                0.00    0.00       1/1           TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) [378]
                0.00    0.00       1/1           TreeBRLPolicy::BeliefState::~BeliefState() [377]
                0.00    0.00       1/1           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::clear() [461]
-----------------------------------------------
                0.00    0.00       1/1           RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >) [371]
[380]    0.0    0.00    0.00       1         TreeBRLPolicy::Reset(int) [380]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[381]    0.0    0.00    0.00       1         TreeBRLPolicy::TreeBRLPolicy(int, int, double, MDPModel*, RandomNumberGenerator*, int, TreeBRLPolicy::LeafNodeValue, TreeBRLPolicy::WhichAlgo, int, int, int) [381]
                0.00    0.00       1/1           OnlineAlgorithm<int, int>::OnlineAlgorithm() [383]
                0.00    0.00       1/6           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::vector() [211]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[382]    0.0    0.00    0.00       1         TreeBRLPolicy::~TreeBRLPolicy() [382]
                0.00    0.00       1/6           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector() [212]
                0.00    0.00       1/1           OnlineAlgorithm<int, int>::~OnlineAlgorithm() [384]
-----------------------------------------------
                0.00    0.00       1/1           TreeBRLPolicy::TreeBRLPolicy(int, int, double, MDPModel*, RandomNumberGenerator*, int, TreeBRLPolicy::LeafNodeValue, TreeBRLPolicy::WhichAlgo, int, int, int) [381]
[383]    0.0    0.00    0.00       1         OnlineAlgorithm<int, int>::OnlineAlgorithm() [383]
-----------------------------------------------
                0.00    0.00       1/1           TreeBRLPolicy::~TreeBRLPolicy() [382]
[384]    0.0    0.00    0.00       1         OnlineAlgorithm<int, int>::~OnlineAlgorithm() [384]
-----------------------------------------------
                0.00    0.00       1/1           DefaultRandomNumberGenerator::DefaultRandomNumberGenerator() [388]
[385]    0.0    0.00    0.00       1         RandomNumberGenerator::RandomNumberGenerator() [385]
-----------------------------------------------
                0.00    0.00       1/1           DefaultRandomNumberGenerator::~DefaultRandomNumberGenerator() [389]
[386]    0.0    0.00    0.00       1         RandomNumberGenerator::~RandomNumberGenerator() [386]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[387]    0.0    0.00    0.00       1         DefaultRandomNumberGenerator::manualSeed(unsigned long) [387]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[388]    0.0    0.00    0.00       1         DefaultRandomNumberGenerator::DefaultRandomNumberGenerator() [388]
                0.00    0.00       1/1           RandomNumberGenerator::RandomNumberGenerator() [385]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[389]    0.0    0.00    0.00       1         DefaultRandomNumberGenerator::~DefaultRandomNumberGenerator() [389]
                0.00    0.00       1/1           RandomNumberGenerator::~RandomNumberGenerator() [386]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<Gridworld> >::destroy<Gridworld>(std::allocator<Gridworld>&, Gridworld*) [448]
[390]    0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<Gridworld>::destroy<Gridworld>(Gridworld*) [390]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<Gridworld> >::construct<Gridworld, char const (&) [20]>(std::allocator<Gridworld>&, Gridworld*, char const (&) [20]) [449]
[391]    0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<Gridworld>::construct<Gridworld, char const (&) [20]>(Gridworld*, char const (&) [20]) [391]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Gridworld>::allocator() [410]
[392]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Gridworld>::new_allocator() [392]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator() [411]
[393]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator() [393]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [451]
[394]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [394]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [452]
[395]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [395]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::max_size() const [405]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [412]
[396]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [396]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::~allocator() [413]
[397]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::~new_allocator() [397]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
[398]    0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, std::__detail::_Hash_node<std::pair<int const, int>, false> >::_S_select_on_copy(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [398]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::select_on_container_copy_construction(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [450]
-----------------------------------------------
                0.00    0.00       1/1           void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [475]
[399]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [399]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__atomic_add_dispatch(int*, int) [401]
[400]    0.0    0.00    0.00       1         __gnu_cxx::__atomic_add_single(int*, int) [400]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [445]
[401]    0.0    0.00    0.00       1         __gnu_cxx::__atomic_add_dispatch(int*, int) [401]
                0.00    0.00       1/4           __gthread_active_p() [233]
                0.00    0.00       1/1           __gnu_cxx::__atomic_add_single(int*, int) [400]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[402]    0.0    0.00    0.00       1         Environment<int, int>::getNStates() const [402]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[403]    0.0    0.00    0.00       1         Environment<int, int>::getNActions() const [403]
-----------------------------------------------
                0.00    0.00       1/1           RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >) [371]
[404]    0.0    0.00    0.00       1         Environment<int, int>::getReward() const [404]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [395]
[405]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::max_size() const [405]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [435]
[406]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [406]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [455]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[407]    0.0    0.00    0.00       1         _ZNKSt8__detail10_Select1stclIRSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_ [407]
                0.00    0.00       1/1           std::pair<int const, int>& std::forward<std::pair<int const, int>&>(std::remove_reference<std::pair<int const, int>&>::type&) [484]
                0.00    0.00       1/1           std::tuple_element<0ul, std::pair<int const, int> >::type& std::get<0ul, int const, int>(std::pair<int const, int>&) [478]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
[408]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() const [408]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true> const&) [470]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [455]
[409]    0.0    0.00    0.00       1         std::type_info::operator==(std::type_info const&) const [409]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<Gridworld> std::make_shared<Gridworld, char const (&) [20]>(char const (&) [20]) [473]
[410]    0.0    0.00    0.00       1         std::allocator<Gridworld>::allocator() [410]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Gridworld>::new_allocator() [392]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper() [471]
[411]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator() [411]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator() [393]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [425]
[412]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [412]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [396]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [426]
[413]    0.0    0.00    0.00       1         std::allocator<int>::~allocator() [413]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::~new_allocator() [397]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [416]
[414]    0.0    0.00    0.00       1         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [414]
                0.00    0.00       1/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [322]
                0.00    0.00       1/4           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [240]
                0.00    0.00       1/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [286]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
[415]    0.0    0.00    0.00       1         void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const [370]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const [315]
                0.00    0.00       2/3           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false>*) const [276]
                0.00    0.00       2/7           std::__detail::_Hash_node<std::pair<int const, int>, false>::_M_next() const [197]
                0.00    0.00       1/2           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [322]
                0.00    0.00       1/4           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [240]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[416]    0.0    0.00    0.00       1         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [416]
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [414]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map(std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > > const&) [437]
[417]    0.0    0.00    0.00       1         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() const [408]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, std::__detail::_Hash_node<std::pair<int const, int>, false> >::_S_select_on_copy(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [398]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [466]
                0.00    0.00       1/3           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~allocator() [284]
                0.00    0.00       1/119         std::__detail::_Hash_node_base::_Hash_node_base() [25]
                0.00    0.00       1/1           void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [415]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map() [438]
[418]    0.0    0.00    0.00       1         std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [418]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc() [465]
                0.00    0.00       1/119         std::__detail::_Hash_node_base::_Hash_node_base() [25]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [467]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0ul, std::pair<int const, int> >::type& std::get<0ul, int const, int>(std::pair<int const, int>&) [478]
[419]    0.0    0.00    0.00       1         int const& std::__pair_get<0ul>::__get<int const, int>(std::pair<int const, int>&) [419]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[420]    0.0    0.00    0.00       1         std::shared_ptr<Environment<int, int> >::shared_ptr(std::shared_ptr<Environment<int, int> > const&) [420]
                0.00    0.00       1/1           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2> const&) [430]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[421]    0.0    0.00    0.00       1         std::shared_ptr<Environment<int, int> >::shared_ptr() [421]
                0.00    0.00       1/1           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [431]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[422]    0.0    0.00    0.00       1         _ZNSt10shared_ptrI11EnvironmentIiiEEaSI9GridworldEENSt9enable_ifIXsr13is_assignableIRSt12__shared_ptrIS1_LN9__gnu_cxx12_Lock_policyE2EES_IT_EEE5valueERS2_E4typeEOSC_ [422]
                0.00    0.00       1/1           std::remove_reference<std::shared_ptr<Gridworld>&>::type&& std::move<std::shared_ptr<Gridworld>&>(std::shared_ptr<Gridworld>&) [480]
                0.00    0.00       1/1           _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE [433]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<Gridworld> std::allocate_shared<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::allocator<Gridworld> const&, char const (&) [20]) [476]
[423]    0.0    0.00    0.00       1         std::shared_ptr<Gridworld>::shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [423]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
                0.00    0.00       1/1           std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [435]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[424]    0.0    0.00    0.00       1         std::shared_ptr<Gridworld>::~shared_ptr() [424]
                0.00    0.00       1/1           std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [436]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [427]
[425]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [425]
                0.00    0.00       1/1           std::allocator<int>::allocator() [412]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
[426]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [426]
                0.00    0.00       1/1           std::allocator<int>::~allocator() [413]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [462]
[427]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [427]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [425]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [463]
[428]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
                0.00    0.00       1/3           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [289]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [426]
-----------------------------------------------
                0.00    0.00       1/1           _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE [433]
[429]    0.0    0.00    0.00       1         std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>&) [429]
                0.00    0.00       1/1           _ZSt4swapIP11EnvironmentIiiEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SF_ [482]
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [334]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<Environment<int, int> >::shared_ptr(std::shared_ptr<Environment<int, int> > const&) [420]
[430]    0.0    0.00    0.00       1         std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2> const&) [430]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [441]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<Environment<int, int> >::shared_ptr() [421]
[431]    0.0    0.00    0.00       1         std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [431]
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [335]
-----------------------------------------------
                0.00    0.00       1/1           _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE [433]
[432]    0.0    0.00    0.00       1         std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Gridworld, void>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&&) [432]
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [335]
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [334]
-----------------------------------------------
                0.00    0.00       1/1           _ZNSt10shared_ptrI11EnvironmentIiiEEaSI9GridworldEENSt9enable_ifIXsr13is_assignableIRSt12__shared_ptrIS1_LN9__gnu_cxx12_Lock_policyE2EES_IT_EEE5valueERS2_E4typeEOSC_ [422]
[433]    0.0    0.00    0.00       1         _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE [433]
                0.00    0.00       1/1           std::remove_reference<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&) [481]
                0.00    0.00       1/1           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>&) [429]
                0.00    0.00       1/1           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Gridworld, void>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&&) [432]
                0.00    0.00       1/3           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [290]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [435]
[434]    0.0    0.00    0.00       1         _ZNSt12__shared_ptrI9GridworldLN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS0_S0_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_ [434]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<Gridworld>::shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [423]
[435]    0.0    0.00    0.00       1         std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [435]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [406]
                0.00    0.00       1/1           _ZNSt12__shared_ptrI9GridworldLN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS0_S0_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_ [434]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<Gridworld>::~shared_ptr() [424]
[436]    0.0    0.00    0.00       1         std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [436]
                0.00    0.00       1/4           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [249]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[437]    0.0    0.00    0.00       1         std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map(std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > > const&) [437]
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[438]    0.0    0.00    0.00       1         std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map() [438]
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [418]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<Gridworld>) [456]
[439]    0.0    0.00    0.00       1         std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_Sp_ebo_helper(std::allocator<Gridworld> const&) [439]
                0.00    0.00       1/3           std::allocator<Gridworld>::allocator(std::allocator<Gridworld> const&) [283]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [457]
[440]    0.0    0.00    0.00       1         std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::~_Sp_ebo_helper() [440]
                0.00    0.00       1/4           std::allocator<Gridworld>::~allocator() [243]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2> const&) [430]
[441]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [441]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [445]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [435]
[442]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
                0.00    0.00       1/2           std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocator<Gridworld>(std::allocator<Gridworld> const&) [320]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&) [477]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::get() [443]
                0.00    0.00       1/1           std::remove_reference<std::allocator<Gridworld> const&>::type&& std::move<std::allocator<Gridworld> const&>(std::allocator<Gridworld> const&) [479]
                0.00    0.00       1/3           std::allocator<Gridworld>::allocator(std::allocator<Gridworld> const&) [283]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
                0.00    0.00       1/4           std::allocator<Gridworld>::~allocator() [243]
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [444]
                0.00    0.00       1/2           std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [321]
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [338]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
[443]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::get() [443]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*) [474]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
[444]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [444]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [441]
[445]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [445]
                0.00    0.00       1/1           __gnu_cxx::__atomic_add_dispatch(int*, int) [401]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
[446]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [446]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [459]
[447]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [447]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [454]
[448]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<Gridworld> >::destroy<Gridworld>(std::allocator<Gridworld>&, Gridworld*) [448]
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<Gridworld>::destroy<Gridworld>(Gridworld*) [390]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
[449]    0.0    0.00    0.00       1         void std::allocator_traits<std::allocator<Gridworld> >::construct<Gridworld, char const (&) [20]>(std::allocator<Gridworld>&, Gridworld*, char const (&) [20]) [449]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<Gridworld>::construct<Gridworld, char const (&) [20]>(Gridworld*, char const (&) [20]) [391]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, std::__detail::_Hash_node<std::pair<int const, int>, false> >::_S_select_on_copy(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [398]
[450]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::select_on_container_copy_construction(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [450]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [319]
-----------------------------------------------
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [338]
[451]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [451]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [394]
-----------------------------------------------
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&) [477]
[452]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [452]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [395]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [339]
[453]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
                0.00    0.00       1/2           std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocator<Gridworld>(std::allocator<Gridworld> const&) [320]
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [346]
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*) [337]
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [338]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [459]
                0.00    0.00       1/2           std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [321]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [339]
[454]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [454]
                0.00    0.00       1/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [291]
                0.00    0.00       1/2           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [346]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<Gridworld> >::destroy<Gridworld>(std::allocator<Gridworld>&, Gridworld*) [448]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [406]
[455]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [455]
                0.00    0.00       1/1           std::type_info::operator==(std::type_info const&) const [409]
                0.00    0.00       1/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [291]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
[456]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<Gridworld>) [456]
                0.00    0.00       1/1           std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_Sp_ebo_helper(std::allocator<Gridworld> const&) [439]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [459]
[457]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [457]
                0.00    0.00       1/1           std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::~_Sp_ebo_helper() [440]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
[458]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [458]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [446]
                0.00    0.00       1/3           std::allocator<Gridworld>::allocator(std::allocator<Gridworld> const&) [283]
                0.00    0.00       1/4           std::allocator<Gridworld>::~allocator() [243]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<Gridworld>) [456]
                0.00    0.00       1/3           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [291]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<Gridworld> >::construct<Gridworld, char const (&) [20]>(std::allocator<Gridworld>&, Gridworld*, char const (&) [20]) [449]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [453]
[459]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [459]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [447]
                0.00    0.00       1/1           std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [457]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::clear() [461]
[460]    0.0    0.00    0.00       1         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_erase_at_end(FixedDiscretePolicy**) [460]
                0.00    0.00       1/43          std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() [49]
                0.00    0.00       1/19          void std::_Destroy<FixedDiscretePolicy**, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&) [129]
-----------------------------------------------
                0.00    0.00       1/1           TreeBRLPolicy::Act(double, int) [379]
[461]    0.0    0.00    0.00       1         std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::clear() [461]
                0.00    0.00       1/1           std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_erase_at_end(FixedDiscretePolicy**) [460]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[462]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [462]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [427]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[463]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [463]
                0.00    0.00       1/7           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [198]
                0.00    0.00       1/3           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [299]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[464]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [464]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&) [469]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [418]
[465]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc() [465]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper() [471]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [417]
[466]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [466]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&& std::forward<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::remove_reference<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::type&) [368]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [472]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [418]
[467]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [467]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [323]
[468]    0.0    0.00    0.00       1         std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() [468]
                0.00    0.00       1/11          std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() [168]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [464]
[469]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&) [469]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() const [408]
[470]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true> const&) [470]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc() [465]
[471]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper() [471]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator() [411]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [466]
[472]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&) [472]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&& std::forward<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::remove_reference<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::type&) [368]
                0.00    0.00       1/2           std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [319]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[473]    0.0    0.00    0.00       1         std::shared_ptr<Gridworld> std::make_shared<Gridworld, char const (&) [20]>(char const (&) [20]) [473]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
                0.00    0.00       1/1           std::allocator<Gridworld>::allocator() [410]
                0.00    0.00       1/1           std::shared_ptr<Gridworld> std::allocate_shared<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::allocator<Gridworld> const&, char const (&) [20]) [476]
                0.00    0.00       1/4           std::allocator<Gridworld>::~allocator() [243]
-----------------------------------------------
                0.00    0.00       1/1           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::get() [443]
[474]    0.0    0.00    0.00       1         std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*) [474]
-----------------------------------------------
                0.00    0.00       1/1           main [20]
[475]    0.0    0.00    0.00       1         void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [475]
                0.00    0.00       4/4           bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [238]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [310]
                0.00    0.00       1/3           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [274]
                0.00    0.00       1/1           void std::iter_swap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [485]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [399]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<Gridworld> std::make_shared<Gridworld, char const (&) [20]>(char const (&) [20]) [473]
[476]    0.0    0.00    0.00       1         std::shared_ptr<Gridworld> std::allocate_shared<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::allocator<Gridworld> const&, char const (&) [20]) [476]
                0.00    0.00       1/8           char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20] [196]
                0.00    0.00       1/1           std::shared_ptr<Gridworld>::shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [423]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
[477]    0.0    0.00    0.00       1         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&) [477]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [452]
                0.00    0.00       1/2           std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*) [337]
-----------------------------------------------
                0.00    0.00       1/1           _ZNKSt8__detail10_Select1stclIRSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_ [407]
[478]    0.0    0.00    0.00       1         std::tuple_element<0ul, std::pair<int const, int> >::type& std::get<0ul, int const, int>(std::pair<int const, int>&) [478]
                0.00    0.00       1/1           int const& std::__pair_get<0ul>::__get<int const, int>(std::pair<int const, int>&) [419]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [442]
[479]    0.0    0.00    0.00       1         std::remove_reference<std::allocator<Gridworld> const&>::type&& std::move<std::allocator<Gridworld> const&>(std::allocator<Gridworld> const&) [479]
-----------------------------------------------
                0.00    0.00       1/1           _ZNSt10shared_ptrI11EnvironmentIiiEEaSI9GridworldEENSt9enable_ifIXsr13is_assignableIRSt12__shared_ptrIS1_LN9__gnu_cxx12_Lock_policyE2EES_IT_EEE5valueERS2_E4typeEOSC_ [422]
[480]    0.0    0.00    0.00       1         std::remove_reference<std::shared_ptr<Gridworld>&>::type&& std::move<std::shared_ptr<Gridworld>&>(std::shared_ptr<Gridworld>&) [480]
-----------------------------------------------
                0.00    0.00       1/1           _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE [433]
[481]    0.0    0.00    0.00       1         std::remove_reference<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&) [481]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>&) [429]
[482]    0.0    0.00    0.00       1         _ZSt4swapIP11EnvironmentIiiEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SF_ [482]
                0.00    0.00       3/3           std::remove_reference<Environment<int, int>*&>::type&& std::move<Environment<int, int>*&>(Environment<int, int>*&) [296]
-----------------------------------------------
                0.00    0.00       1/1           void std::iter_swap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [485]
[483]    0.0    0.00    0.00       1         _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [483]
                0.00    0.00       3/3           std::remove_reference<int&>::type&& std::move<int&>(int&) [297]
-----------------------------------------------
                0.00    0.00       1/1           _ZNKSt8__detail10_Select1stclIRSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_ [407]
[484]    0.0    0.00    0.00       1         std::pair<int const, int>& std::forward<std::pair<int const, int>&>(std::remove_reference<std::pair<int const, int>&>::type&) [484]
-----------------------------------------------
                0.00    0.00       1/1           void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [475]
[485]    0.0    0.00    0.00       1         void std::iter_swap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [485]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [309]
                0.00    0.00       1/1           _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1454]
[486]    0.0    0.00    0.00       1         __cxx_global_var_init [486]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1454]
[487]    0.0    0.00    0.00       1         __cxx_global_var_init [487]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [371] RunExperiment(std::shared_ptr<Environment<int, int> >, TreeBRLPolicy&, int, SampleBasedRL*, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >) [408] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator() const [459] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 [199] double Max<double>(int, double const*) [26] std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [347] std::pair<int const, int>::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>)
 [200] Max(Vector const&)    [318] std::__detail::_Prime_rehash_policy::_M_state() const [348] std::pair<int const, int>::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
 [372] double Min<double>(int, double const*) [222] std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v() const [349] std::tuple<int const&>::tuple(std::tuple<int const&>&&)
 [373] Min(Vector const&)    [223] std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr() const [350] std::tuple<int const&>::tuple<void, true>(int const&)
  [92] int ArgMax<double>(int, double const*) [409] std::type_info::operator==(std::type_info const&) const [8] std::vector<tsl::detail_hopscotch_hash::hopscotch_bucket<std::pair<Transition<int, int>, double>, 62u, false>, std::allocator<tsl::detail_hopscotch_hash::hopscotch_bucket<std::pair<Transition<int, int>, double>, 62u, false> > >::_M_default_append(unsigned long)
  [93] ArgMax(Vector const&) [283] std::allocator<Gridworld>::allocator(std::allocator<Gridworld> const&) [178] void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::emplace_back<PolicyIteration*>(PolicyIteration*&&)
 [233] __gthread_active_p()  [410] std::allocator<Gridworld>::allocator() [179] void std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_realloc_insert<PolicyIteration*>(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >, PolicyIteration*&&)
 [374] TreeBRLPolicy::BeliefState::CalculateValues(TreeBRLPolicy::LeafNodeValue, int) [243] std::allocator<Gridworld>::~allocator() [180] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::end()
 [375] TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) [319] std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [181] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::begin()
 [104] TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel*, int, int, double, double, TreeBRLPolicy::BeliefState*) [411] std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocator() [182] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::push_back(PolicyIteration*&&)
 [376] TreeBRLPolicy::BeliefState::BeliefState(TreeBRLPolicy&, MDPModel const*, int) [284] std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~allocator() [230] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::vector()
 [377] TreeBRLPolicy::BeliefState::~BeliefState() [224] std::allocator<PolicyIteration*>::allocator() [231] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::~vector()
 [378] TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) [225] std::allocator<PolicyIteration*>::~allocator() [64] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::operator[](unsigned long)
 [379] TreeBRLPolicy::Act(double, int) [205] std::allocator<FixedDiscretePolicy*>::allocator() [159] void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::emplace_back<FixedDiscretePolicy*>(FixedDiscretePolicy*&&)
 [380] TreeBRLPolicy::Reset(int) [206] std::allocator<FixedDiscretePolicy*>::~allocator() [460] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_erase_at_end(FixedDiscretePolicy**)
 [381] TreeBRLPolicy::TreeBRLPolicy(int, int, double, MDPModel*, RandomNumberGenerator*, int, TreeBRLPolicy::LeafNodeValue, TreeBRLPolicy::WhichAlgo, int, int, int) [96] std::allocator<TreeBRLPolicy::BeliefState*>::allocator() [160] void std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_realloc_insert<FixedDiscretePolicy*>(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >, FixedDiscretePolicy*&&)
 [382] TreeBRLPolicy::~TreeBRLPolicy() [97] std::allocator<TreeBRLPolicy::BeliefState*>::~allocator() [161] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::end()
 [383] OnlineAlgorithm<int, int>::OnlineAlgorithm() [244] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [162] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::begin()
 [384] OnlineAlgorithm<int, int>::~OnlineAlgorithm() [111] std::allocator<std::__detail::_Hash_node_base*>::~allocator() [461] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::clear()
   [9] SingularDistribution::setMean(double) [320] std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocator<Gridworld>(std::allocator<Gridworld> const&) [163] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::push_back(FixedDiscretePolicy*&&)
 [385] RandomNumberGenerator::RandomNumberGenerator() [321] std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [211] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::vector()
 [386] RandomNumberGenerator::~RandomNumberGenerator() [412] std::allocator<int>::allocator() [212] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~vector()
 [387] DefaultRandomNumberGenerator::manualSeed(unsigned long) [413] std::allocator<int>::~allocator() [91] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::operator[](unsigned long)
 [388] DefaultRandomNumberGenerator::DefaultRandomNumberGenerator() [414] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [116] void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::emplace_back<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState*&&)
 [389] DefaultRandomNumberGenerator::~DefaultRandomNumberGenerator() [322] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [145] void std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_realloc_insert<TreeBRLPolicy::BeliefState*>(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >, TreeBRLPolicy::BeliefState*&&)
   [7] std::pair<tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::hopscotch_iterator<false>, bool> tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::insert_impl<std::piecewise_construct_t const&, std::tuple<Transition<int, int> const&>, std::tuple<> >(unsigned long, unsigned long, std::piecewise_construct_t const&, std::tuple<Transition<int, int> const&>&&, std::tuple<>&&) [285] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [146] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::end()
  [10] tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::hopscotch_hash(tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > > const&) [286] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets() [147] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::begin()
   [2] tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect::value_type& tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<Transition<int, int>, double>, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<Transition<int, int>, double>, std::allocator<std::pair<Transition<int, int>, double> > > >::operator[]<Transition<int, int> const&, tsl::hopscotch_map<Transition<int, int>, double, std::hash<Transition<int, int> >, std::equal_to<Transition<int, int> >, std::allocator<std::pair<Transition<int, int>, double> >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, (void*)0>(Transition<int, int> const&) [323] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [117] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::push_back(TreeBRLPolicy::BeliefState*&&)
  [11] std::pair<tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > > > >::hopscotch_iterator<false>, bool> tsl::detail_hopscotch_hash::hopscotch_hash<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::KeySelect, tsl::hopscotch_map<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> >, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul> >::ValueSelect, std::hash<StateAction<int, int> >, std::equal_to<StateAction<int, int> >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >, 62u, false, tsl::hh::power_of_two_growth_policy<2ul>, std::__cxx11::list<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >, std::allocator<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > > > >::insert_impl<std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > > >(unsigned long, unsigned long, std::pair<StateAction<int, int>, std::set<int, std::less<int>, std::allocator<int> > >&&) [324] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*) [102] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::vector()
  [12] Vector::Vector(Vector const&) [325] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [103] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~vector()
  [22] Vector::operator()(int) [415] void std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}>(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1} const&) [24] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::operator[](unsigned long)
 [390] void __gnu_cxx::new_allocator<Gridworld>::destroy<Gridworld>(Gridworld*) [416] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [351] void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 [391] void __gnu_cxx::new_allocator<Gridworld>::construct<Gridworld, char const (&) [20]>(Gridworld*, char const (&) [20]) [417] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [292] std::vector<int, std::allocator<int> >::end()
 [268] __gnu_cxx::new_allocator<Gridworld>::new_allocator(__gnu_cxx::new_allocator<Gridworld> const&) [418] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable() [293] std::vector<int, std::allocator<int> >::begin()
 [392] __gnu_cxx::new_allocator<Gridworld>::new_allocator() [326] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [352] std::vector<int, std::allocator<int> >::push_back(int const&)
 [234] __gnu_cxx::new_allocator<Gridworld>::~new_allocator() [245] std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&) [462] std::vector<int, std::allocator<int> >::vector()
 [235] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [246] std::_Head_base<0ul, int const&, false>::_Head_base(int const&) [463] std::vector<int, std::allocator<int> >::~vector()
 [236] void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::destroy<std::pair<int const, int> >(std::pair<int const, int>*) [287] int const& std::__pair_get<0ul>::__const_get<int const, int>(std::pair<int const, int> const&) [353] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [237] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::allocate(unsigned long, void const*) [419] int const& std::__pair_get<0ul>::__get<int const, int>(std::pair<int const, int>&) [3] std::_Rb_tree_node<int>* std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_copy<std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>(std::_Rb_tree_node<int> const*, std::_Rb_tree_node_base*, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node&)
 [300] void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::pair<int const, int>*, std::pair<int const, int> const&) [420] std::shared_ptr<Environment<int, int> >::shared_ptr(std::shared_ptr<Environment<int, int> > const&) [6] std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
 [301] void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [421] std::shared_ptr<Environment<int, int> >::shared_ptr() [256] std::__detail::_Hash_node<std::pair<int const, int>, false>::_Hash_node()
 [302] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [327] std::shared_ptr<Environment<int, int> >::~shared_ptr() [354] std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
 [393] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::new_allocator() [422] _ZNSt10shared_ptrI11EnvironmentIiiEEaSI9GridworldEENSt9enable_ifIXsr13is_assignableIRSt12__shared_ptrIS1_LN9__gnu_cxx12_Lock_policyE2EES_IT_EEE5valueERS2_E4typeEOSC_ [464] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
 [269] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::~new_allocator() [423] std::shared_ptr<Gridworld>::shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [25] std::__detail::_Hash_node_base::_Hash_node_base()
 [169] __gnu_cxx::new_allocator<PolicyIteration*>::deallocate(PolicyIteration**, unsigned long) [424] std::shared_ptr<Gridworld>::~shared_ptr() [355] std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::pair<int const, int> const&>(std::pair<int const, int> const&)
 [170] __gnu_cxx::new_allocator<PolicyIteration*>::allocate(unsigned long, void const*) [247] std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&) [356] std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
 [171] void __gnu_cxx::new_allocator<PolicyIteration*>::construct<PolicyIteration*, PolicyIteration*>(PolicyIteration**, PolicyIteration*&&) [328] std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&) [118] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_node_allocator()
 [216] __gnu_cxx::new_allocator<PolicyIteration*>::new_allocator() [329] std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&) [257] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
 [217] __gnu_cxx::new_allocator<PolicyIteration*>::~new_allocator() [112] PolicyIteration** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<PolicyIteration*>(PolicyIteration* const*, PolicyIteration* const*, PolicyIteration**) [357] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_allocate_buckets(unsigned long)
 [150] __gnu_cxx::new_allocator<FixedDiscretePolicy*>::deallocate(FixedDiscretePolicy**, unsigned long) [82] FixedDiscretePolicy** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<FixedDiscretePolicy*>(FixedDiscretePolicy* const*, FixedDiscretePolicy* const*, FixedDiscretePolicy**) [358] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
 [151] __gnu_cxx::new_allocator<FixedDiscretePolicy*>::allocate(unsigned long, void const*) [70] TreeBRLPolicy::BeliefState** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState* const*, TreeBRLPolicy::BeliefState**) [359] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
 [152] void __gnu_cxx::new_allocator<FixedDiscretePolicy*>::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy*&&) [248] int* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [465] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc()
 [201] __gnu_cxx::new_allocator<FixedDiscretePolicy*>::new_allocator() [140] void std::_Destroy_aux<true>::__destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**) [466] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&)
 [202] __gnu_cxx::new_allocator<FixedDiscretePolicy*>::~new_allocator() [127] void std::_Destroy_aux<true>::__destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**) [360] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::~_Hashtable_alloc()
 [136] __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [59] void std::_Destroy_aux<true>::__destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**) [361] std::__detail::_Node_iterator_base<std::pair<int const, int>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
 [137] __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::allocate(unsigned long, void const*) [288] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [467] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
 [105] void __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [174] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_allocate(unsigned long) [468] std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_v()
  [94] __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::new_allocator() [226] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::_Vector_impl() [168] std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_M_valptr()
  [95] __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::~new_allocator() [227] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_impl::~_Vector_impl() [258] std::__detail::_Hash_node_value_base<std::pair<int const, int> >::_Hash_node_value_base()
 [303] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [141] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_deallocate(PolicyIteration**, unsigned long) [469] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&)
 [130] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [63] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() [294] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&)
 [106] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [228] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_Vector_base() [119] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>&)
 [107] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [229] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::~_Vector_base() [470] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true> const&)
 [394] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [155] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_allocate(unsigned long) [471] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper()
 [395] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [207] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::_Vector_impl() [472] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&&)
 [304] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [208] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_impl::~_Vector_impl() [362] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, true>::~_Hashtable_ebo_helper()
 [305] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [133] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_deallocate(FixedDiscretePolicy**, unsigned long) [232] std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true> const&)
 [306] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [49] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() [27] std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&)
 [307] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [209] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_Vector_base() [363] std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
 [308] void __gnu_cxx::new_allocator<int>::construct<int, int const&>(int*, int const&) [210] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::~_Vector_base() [259] std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&)
 [396] __gnu_cxx::new_allocator<int>::new_allocator() [142] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_allocate(unsigned long) [364] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [397] __gnu_cxx::new_allocator<int>::~new_allocator() [98] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::_Vector_impl() [365] std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&)
 [398] __gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >, std::__detail::_Hash_node<std::pair<int const, int>, false> >::_S_select_on_copy(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [99] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_impl::~_Vector_impl() [473] std::shared_ptr<Gridworld> std::make_shared<Gridworld, char const (&) [20]>(char const (&) [20])
 [270] __gnu_cxx::__aligned_buffer<Gridworld>::_M_ptr() [60] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_deallocate(TreeBRLPolicy::BeliefState**, unsigned long) [366] int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&)
 [271] __gnu_cxx::__aligned_buffer<Gridworld>::_M_addr() [31] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() [54] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<PolicyIteration**>(std::move_iterator<PolicyIteration**>)
 [166] __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() [100] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_Vector_base() [55] PolicyIteration** std::__miter_base<PolicyIteration**>(PolicyIteration**)
 [167] __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr() [101] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::~_Vector_base() [44] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>)
 [108] __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::__normal_iterator(PolicyIteration** const&) [330] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [45] FixedDiscretePolicy** std::__miter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**)
  [79] __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::__normal_iterator(FixedDiscretePolicy** const&) [425] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [36] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>)
  [65] __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::__normal_iterator(TreeBRLPolicy::BeliefState** const&) [426] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [37] TreeBRLPolicy::BeliefState** std::__miter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**)
 [189] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [289] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [193] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
 [399] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [198] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [194] int* std::__miter_base<int*>(int*)
 [400] __gnu_cxx::__atomic_add_single(int*, int) [427] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [38] PolicyIteration** std::__niter_base<PolicyIteration**>(PolicyIteration**)
 [401] __gnu_cxx::__atomic_add_dispatch(int*, int) [428] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [30] FixedDiscretePolicy** std::__niter_base<FixedDiscretePolicy**>(FixedDiscretePolicy**)
 [272] __gnu_cxx::__exchange_and_add_single(int*, int) [429] std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>&) [28] TreeBRLPolicy::BeliefState** std::__niter_base<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**)
 [273] __gnu_cxx::__exchange_and_add_dispatch(int*, int) [430] std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2> const&) [164] int* std::__niter_base<int*>(int*)
 [172] __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::difference_type __gnu_cxx::operator-<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >(__gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&, __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > > const&) [431] std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [260] std::__detail::_Hash_node<std::pair<int const, int>, false>* std::__to_address<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>*)
 [153] __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::difference_type __gnu_cxx::operator-<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >(__gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&, __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > > const&) [432] std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<Gridworld, void>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&&) [135] std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
 [138] __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::difference_type __gnu_cxx::operator-<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >(__gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&, __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > > const&) [290] std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [474] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*)
 [274] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [433] _ZNSt12__shared_ptrI11EnvironmentIiiELN9__gnu_cxx12_Lock_policyE2EEaSI9GridworldEENSt9enable_ifIXsr20__sp_compatible_withIPT_PS1_EE5valueERS4_E4typeEOS_IS8_LS3_2EE [120] PolicyIteration** std::__copy_move_a<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**)
 [238] bool __gnu_cxx::operator!=<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [434] _ZNSt12__shared_ptrI9GridworldLN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS0_S0_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_ [85] FixedDiscretePolicy** std::__copy_move_a<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**)
 [402] Environment<int, int>::getNStates() const [435] std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, std::allocator<Gridworld> const&, char const (&) [20]) [73] TreeBRLPolicy::BeliefState** std::__copy_move_a<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**)
 [403] Environment<int, int>::getNActions() const [436] std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [261] int* std::__copy_move_a<true, int*, int*>(int*, int*, int*)
 [275] Environment<int, int>::getState() const [53] std::move_iterator<PolicyIteration**>::move_iterator(PolicyIteration**) [121] PolicyIteration** std::__copy_move_a2<true, PolicyIteration**, PolicyIteration**>(PolicyIteration**, PolicyIteration**, PolicyIteration**)
 [404] Environment<int, int>::getReward() const [43] std::move_iterator<FixedDiscretePolicy**>::move_iterator(FixedDiscretePolicy**) [86] FixedDiscretePolicy** std::__copy_move_a2<true, FixedDiscretePolicy**, FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**)
   [4] PolicyEvaluation::getValue(int, int) const [35] std::move_iterator<TreeBRLPolicy::BeliefState**>::move_iterator(TreeBRLPolicy::BeliefState**) [74] TreeBRLPolicy::BeliefState** std::__copy_move_a2<true, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**)
   [1] TransitionDistribution<int, int>::GetTransition(int, int, int) const [192] std::move_iterator<int*>::move_iterator(int*) [262] int* std::__copy_move_a2<true, int*, int*>(int*, int*, int*)
  [13] MDP<int, int>::getNextStates(int, int) const [437] std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map(std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > > const&) [475] void std::random_shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  [14] MDP<int, int>::getRewardProbability(int const&, int const&, double) const [438] std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::unordered_map() [476] std::shared_ptr<Gridworld> std::allocate_shared<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::allocator<Gridworld> const&, char const (&) [20])
  [66] Vector::Size() const  [331] std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::~unordered_map() [477] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&)
   [5] Vector::operator[](int) const [332] std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >::operator[](int const&) [122] PolicyIteration** std::uninitialized_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**)
 [239] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >::max_size() const [333] std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>&) [87] FixedDiscretePolicy** std::uninitialized_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**)
  [67] __gnu_cxx::new_allocator<PolicyIteration*>::max_size() const [439] std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::_Sp_ebo_helper(std::allocator<Gridworld> const&) [75] TreeBRLPolicy::BeliefState** std::uninitialized_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**)
  [58] __gnu_cxx::new_allocator<FixedDiscretePolicy*>::max_size() const [440] std::_Sp_ebo_helper<0, std::allocator<Gridworld>, true>::~_Sp_ebo_helper() [263] int* std::uninitialized_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  [48] __gnu_cxx::new_allocator<TreeBRLPolicy::BeliefState*>::max_size() const [334] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [123] PolicyIteration** std::__uninitialized_copy_a<std::move_iterator<PolicyIteration**>, PolicyIteration**, PolicyIteration*>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**, std::allocator<PolicyIteration*>&)
 [131] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [441] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [88] FixedDiscretePolicy** std::__uninitialized_copy_a<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, FixedDiscretePolicy*>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&)
 [405] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >::max_size() const [335] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [76] TreeBRLPolicy::BeliefState** std::__uninitialized_copy_a<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&)
 [203] __gnu_cxx::new_allocator<int>::max_size() const [442] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<Gridworld, std::allocator<Gridworld>, char const (&) [20]>(std::_Sp_make_shared_tag, Gridworld*, std::allocator<Gridworld> const&, char const (&) [20]) [264] int* std::__uninitialized_copy_a<std::move_iterator<int*>, int*, int>(std::move_iterator<int*>, std::move_iterator<int*>, int*, std::allocator<int>&)
 [218] __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_ptr() const [249] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [56] std::move_iterator<PolicyIteration**> std::__make_move_if_noexcept_iterator<PolicyIteration*, std::move_iterator<PolicyIteration**> >(PolicyIteration**)
 [219] __gnu_cxx::__aligned_buffer<std::pair<int const, int> >::_M_addr() const [250] std::pointer_traits<std::__detail::_Hash_node<std::pair<int const, int>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<int const, int>, false>&) [46] std::move_iterator<FixedDiscretePolicy**> std::__make_move_if_noexcept_iterator<FixedDiscretePolicy*, std::move_iterator<FixedDiscretePolicy**> >(FixedDiscretePolicy**)
  [50] __gnu_cxx::__normal_iterator<PolicyIteration**, std::vector<PolicyIteration*, std::allocator<PolicyIteration*> > >::base() const [336] std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [39] std::move_iterator<TreeBRLPolicy::BeliefState**> std::__make_move_if_noexcept_iterator<TreeBRLPolicy::BeliefState*, std::move_iterator<TreeBRLPolicy::BeliefState**> >(TreeBRLPolicy::BeliefState**)
  [40] __gnu_cxx::__normal_iterator<FixedDiscretePolicy**, std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> > >::base() const [443] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::get() [195] std::move_iterator<int*> std::__make_move_if_noexcept_iterator<int, std::move_iterator<int*> >(int*)
  [33] __gnu_cxx::__normal_iterator<TreeBRLPolicy::BeliefState**, std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> > >::base() const [337] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*) [124] PolicyIteration** std::__uninitialized_move_if_noexcept_a<PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*> >(PolicyIteration**, PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&)
 [132] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [338] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [89] FixedDiscretePolicy** std::__uninitialized_move_if_noexcept_a<FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*> >(FixedDiscretePolicy**, FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&)
 [309] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [444] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [77] TreeBRLPolicy::BeliefState** std::__uninitialized_move_if_noexcept_a<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*> >(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&)
 [310] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator+(long) const [339] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [265] int* std::__uninitialized_move_if_noexcept_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
 [311] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, int const&, unsigned long) const [445] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [367] std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&)
 [276] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false>*) const [446] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [295] std::tuple_element<0ul, std::pair<int const, int> >::type const& std::get<0ul, int const, int>(std::pair<int const, int> const&)
 [277] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const [447] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [478] std::tuple_element<0ul, std::pair<int const, int> >::type& std::get<0ul, int const, int>(std::pair<int const, int>&)
 [312] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const [448] void std::allocator_traits<std::allocator<Gridworld> >::destroy<Gridworld>(std::allocator<Gridworld>&, Gridworld*) [32] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [278] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [449] void std::allocator_traits<std::allocator<Gridworld> >::construct<Gridworld, char const (&) [20]>(std::allocator<Gridworld>&, Gridworld*, char const (&) [20]) [125] PolicyIteration** std::copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**)
 [240] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [251] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) [90] FixedDiscretePolicy** std::copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**)
 [109] std::_Vector_base<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_get_Tp_allocator() const [450] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::select_on_container_copy_construction(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > const&) [78] TreeBRLPolicy::BeliefState** std::copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**)
  [80] std::_Vector_base<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_get_Tp_allocator() const [252] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::destroy<std::pair<int const, int> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*) [266] int* std::copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*)
  [68] std::_Vector_base<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_get_Tp_allocator() const [253] std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, unsigned long) [479] std::remove_reference<std::allocator<Gridworld> const&>::type&& std::move<std::allocator<Gridworld> const&>(std::allocator<Gridworld> const&)
 [241] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const [340] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::pair<int const, int> const&>(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::pair<int const, int> const&) [296] std::remove_reference<Environment<int, int>*&>::type&& std::move<Environment<int, int>*&>(Environment<int, int>*&)
 [185] std::__shared_ptr<Environment<int, int>, (__gnu_cxx::_Lock_policy)2>::get() const [341] void std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::construct<std::pair<int const, int>, std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&, std::pair<int const, int>*, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) [183] std::remove_reference<PolicyIteration*&>::type&& std::move<PolicyIteration*&>(PolicyIteration*&)
  [51] std::move_iterator<PolicyIteration**>::base() const [175] std::allocator_traits<std::allocator<PolicyIteration*> >::deallocate(std::allocator<PolicyIteration*>&, PolicyIteration**, unsigned long) [165] std::remove_reference<FixedDiscretePolicy*&>::type&& std::move<FixedDiscretePolicy*&>(FixedDiscretePolicy*&)
  [41] std::move_iterator<FixedDiscretePolicy**>::base() const [176] std::allocator_traits<std::allocator<PolicyIteration*> >::allocate(std::allocator<PolicyIteration*>&, unsigned long) [126] std::remove_reference<TreeBRLPolicy::BeliefState*&>::type&& std::move<TreeBRLPolicy::BeliefState*&>(TreeBRLPolicy::BeliefState*&)
  [34] std::move_iterator<TreeBRLPolicy::BeliefState**>::base() const [113] std::allocator_traits<std::allocator<PolicyIteration*> >::max_size(std::allocator<PolicyIteration*> const&) [480] std::remove_reference<std::shared_ptr<Gridworld>&>::type&& std::move<std::shared_ptr<Gridworld>&>(std::shared_ptr<Gridworld>&)
 [190] std::move_iterator<int*>::base() const [177] void std::allocator_traits<std::allocator<PolicyIteration*> >::construct<PolicyIteration*, PolicyIteration*>(std::allocator<PolicyIteration*>&, PolicyIteration**, PolicyIteration*&&) [481] std::remove_reference<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<Gridworld, (__gnu_cxx::_Lock_policy)2>&)
 [406] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [156] std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::deallocate(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, unsigned long) [297] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [186] std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [157] std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::allocate(std::allocator<FixedDiscretePolicy*>&, unsigned long) [482] _ZSt4swapIP11EnvironmentIiiEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SF_
 [187] std::__shared_ptr_access<Environment<int, int>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [83] std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::max_size(std::allocator<FixedDiscretePolicy*> const&) [483] _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_
 [220] std::hash<int>::operator()(int) const [158] void std::allocator_traits<std::allocator<FixedDiscretePolicy*> >::construct<FixedDiscretePolicy*, FixedDiscretePolicy*>(std::allocator<FixedDiscretePolicy*>&, FixedDiscretePolicy**, FixedDiscretePolicy*&&) [57] PolicyIteration*&& std::forward<PolicyIteration*>(std::remove_reference<PolicyIteration*>::type&)
 [173] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::_M_check_len(unsigned long, char const*) const [143] std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::deallocate(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, unsigned long) [47] FixedDiscretePolicy*&& std::forward<FixedDiscretePolicy*>(std::remove_reference<FixedDiscretePolicy*>::type&)
  [52] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::size() const [144] std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::allocate(std::allocator<TreeBRLPolicy::BeliefState*>&, unsigned long) [29] TreeBRLPolicy::BeliefState*&& std::forward<TreeBRLPolicy::BeliefState*>(std::remove_reference<TreeBRLPolicy::BeliefState*>::type&)
 [110] std::vector<PolicyIteration*, std::allocator<PolicyIteration*> >::max_size() const [71] std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::max_size(std::allocator<TreeBRLPolicy::BeliefState*> const&) [196] char const (&std::forward<char const (&) [20]>(std::remove_reference<char const (&) [20]>::type&)) [20]
 [154] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::_M_check_len(unsigned long, char const*) const [114] void std::allocator_traits<std::allocator<TreeBRLPolicy::BeliefState*> >::construct<TreeBRLPolicy::BeliefState*, TreeBRLPolicy::BeliefState*>(std::allocator<TreeBRLPolicy::BeliefState*>&, TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*&&) [213] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  [42] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::size() const [342] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [188] std::pair<int const, int> const& std::forward<std::pair<int const, int> const&>(std::remove_reference<std::pair<int const, int> const&>::type&)
  [81] std::vector<FixedDiscretePolicy*, std::allocator<FixedDiscretePolicy*> >::max_size() const [134] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [184] int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
 [139] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::_M_check_len(unsigned long, char const*) const [451] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [484] std::pair<int const, int>& std::forward<std::pair<int const, int>&>(std::remove_reference<std::pair<int const, int>&>::type&)
  [23] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::size() const [452] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [368] std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> >&& std::forward<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >(std::remove_reference<std::allocator<std::__detail::_Hash_node<std::pair<int const, int>, false> > >::type&)
  [69] std::vector<TreeBRLPolicy::BeliefState*, std::allocator<TreeBRLPolicy::BeliefState*> >::max_size() const [343] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [214] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
 [313] std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [344] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [215] std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&)
 [191] std::vector<int, std::allocator<int> >::size() const [254] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [148] void std::_Destroy<PolicyIteration**>(PolicyIteration**, PolicyIteration**)
 [242] std::vector<int, std::allocator<int> >::max_size() const [345] void std::allocator_traits<std::allocator<int> >::construct<int, int const&>(std::allocator<int>&, int*, int const&) [149] void std::_Destroy<PolicyIteration**, PolicyIteration*>(PolicyIteration**, PolicyIteration**, std::allocator<PolicyIteration*>&)
 [197] std::__detail::_Hash_node<std::pair<int const, int>, false>::_M_next() const [115] PolicyIteration** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<PolicyIteration**>, PolicyIteration**>(std::move_iterator<PolicyIteration**>, std::move_iterator<PolicyIteration**>, PolicyIteration**) [128] void std::_Destroy<FixedDiscretePolicy**>(FixedDiscretePolicy**, FixedDiscretePolicy**)
 [279] _ZNKSt8__detail10_Select1stclIRKSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS7_ [84] FixedDiscretePolicy** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**>(std::move_iterator<FixedDiscretePolicy**>, std::move_iterator<FixedDiscretePolicy**>, FixedDiscretePolicy**) [129] void std::_Destroy<FixedDiscretePolicy**, FixedDiscretePolicy*>(FixedDiscretePolicy**, FixedDiscretePolicy**, std::allocator<FixedDiscretePolicy*>&)
 [407] _ZNKSt8__detail10_Select1stclIRSt4pairIKiiEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS6_ [72] TreeBRLPolicy::BeliefState** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**>(std::move_iterator<TreeBRLPolicy::BeliefState**>, std::move_iterator<TreeBRLPolicy::BeliefState**>, TreeBRLPolicy::BeliefState**) [61] void std::_Destroy<TreeBRLPolicy::BeliefState**>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**)
 [314] std::__detail::_Node_iterator<std::pair<int const, int>, false, false>::operator->() const [255] int* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<int*>, int*>(std::move_iterator<int*>, std::move_iterator<int*>, int*) [62] void std::_Destroy<TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState*>(TreeBRLPolicy::BeliefState**, TreeBRLPolicy::BeliefState**, std::allocator<TreeBRLPolicy::BeliefState*>&)
 [280] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [453] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [298] void std::_Destroy<int*>(int*, int*)
 [315] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const [454] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [299] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [316] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [455] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [267] std::__detail::_Hash_node<std::pair<int const, int>, false>* std::addressof<std::__detail::_Hash_node<std::pair<int const, int>, false> >(std::__detail::_Hash_node<std::pair<int const, int>, false>&)
 [317] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) const [346] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [369] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [281] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, int>, false> const*, unsigned long) const [456] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<Gridworld>) [485] void std::iter_swap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [282] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const [457] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [370] std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<int const, int>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<int const, int>, false> const*) const
 [221] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [291] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [486] __cxx_global_var_init
 [204] std::__detail::_Hash_code_base<int, std::pair<int const, int>, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [458] std::_Sp_counted_ptr_inplace<Gridworld, std::allocator<Gridworld>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<char const (&) [20]>(std::allocator<Gridworld>, char const (&) [20]) [487] __cxx_global_var_init
