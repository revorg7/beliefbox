<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="34955pt" height="2727pt"
 viewBox="0.00 0.00 34955.00 2727.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2723)">
<title>%3</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2723 34951,-2723 34951,4 -4,4"/>
<!-- (below main) -->
<g id="node1" class="node">
<title>(below main)</title>
<polygon fill="#ff0100" stroke="#ff0100" points="19033,-2513 18962,-2513 18962,-2450 19033,-2450 19033,-2513"/>
<text text-anchor="middle" x="18997.5" y="-2501" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.27.so</text>
<text text-anchor="middle" x="18997.5" y="-2490" font-family="Arial" font-size="10.00" fill="#ffffff">(below main)</text>
<text text-anchor="middle" x="18997.5" y="-2479" font-family="Arial" font-size="10.00" fill="#ffffff">99.87%</text>
<text text-anchor="middle" x="18997.5" y="-2468" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18997.5" y="-2457" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main -->
<g id="node2" class="node">
<title>main</title>
<polygon fill="#ff0100" stroke="#ff0100" points="19048,-2410 18947,-2410 18947,-2347 19048,-2347 19048,-2410"/>
<text text-anchor="middle" x="18997.5" y="-2398" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18997.5" y="-2387" font-family="Arial" font-size="10.00" fill="#ffffff">main</text>
<text text-anchor="middle" x="18997.5" y="-2376" font-family="Arial" font-size="10.00" fill="#ffffff">99.86%</text>
<text text-anchor="middle" x="18997.5" y="-2365" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18997.5" y="-2354" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- (below main)&#45;&gt;main -->
<g id="edge1" class="edge">
<title>(below main)&#45;&gt;main</title>
<path fill="none" stroke="#ff0100" stroke-width="3.99" d="M18997.5,-2449.7562C18997.5,-2440.5536 18997.5,-2430.3591 18997.5,-2420.6267"/>
<polygon fill="#ff0100" stroke="#ff0100" stroke-width="3.99" points="19001.0001,-2420.3163 18997.5,-2410.3163 18994.0001,-2420.3164 19001.0001,-2420.3163"/>
<text text-anchor="middle" x="19014.5" y="-2433" font-family="Arial" font-size="10.00" fill="#ff0100">99.86%</text>
<text text-anchor="middle" x="19014.5" y="-2422" font-family="Arial" font-size="10.00" fill="#ff0100">1×</text>
</g>
<!-- RunExperiment(std::shared_ptr&lt;Environment&lt;int, int&gt; &gt;, TreeBRLPolicy&amp;, int, SampleBasedRL*, std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;) -->
<g id="node45" class="node">
<title>RunExperiment(std::shared_ptr&lt;Environment&lt;int, int&gt; &gt;, TreeBRLPolicy&amp;, int, SampleBasedRL*, std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;)</title>
<polygon fill="#ff0200" stroke="#ff0200" points="19451,-2307 18544,-2307 18544,-2244 19451,-2244 19451,-2307"/>
<text text-anchor="middle" x="18997.5" y="-2295" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18997.5" y="-2284" font-family="Arial" font-size="10.00" fill="#ffffff">RunExperiment(std::shared_ptr&lt;Environment&lt;int, int&gt; &gt;, TreeBRLPolicy&amp;, int, SampleBasedRL*, std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;)</text>
<text text-anchor="middle" x="18997.5" y="-2273" font-family="Arial" font-size="10.00" fill="#ffffff">99.83%</text>
<text text-anchor="middle" x="18997.5" y="-2262" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18997.5" y="-2251" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;RunExperiment(std::shared_ptr&lt;Environment&lt;int, int&gt; &gt;, TreeBRLPolicy&amp;, int, SampleBasedRL*, std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;) -->
<g id="edge76" class="edge">
<title>main&#45;&gt;RunExperiment(std::shared_ptr&lt;Environment&lt;int, int&gt; &gt;, TreeBRLPolicy&amp;, int, SampleBasedRL*, std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;)</title>
<path fill="none" stroke="#ff0200" stroke-width="3.99" d="M18997.5,-2346.7562C18997.5,-2337.5536 18997.5,-2327.3591 18997.5,-2317.6267"/>
<polygon fill="#ff0200" stroke="#ff0200" stroke-width="3.99" points="19001.0001,-2317.3163 18997.5,-2307.3163 18994.0001,-2317.3164 19001.0001,-2317.3163"/>
<text text-anchor="middle" x="19014.5" y="-2330" font-family="Arial" font-size="10.00" fill="#ff0200">99.83%</text>
<text text-anchor="middle" x="19014.5" y="-2319" font-family="Arial" font-size="10.00" fill="#ff0200">1×</text>
</g>
<!-- 0x0000000000001090 -->
<g id="node3" class="node">
<title>0x0000000000001090</title>
<polygon fill="#ff0000" stroke="#ff0000" points="19053,-2719 18942,-2719 18942,-2656 19053,-2656 19053,-2719"/>
<text text-anchor="middle" x="18997.5" y="-2707" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.27.so</text>
<text text-anchor="middle" x="18997.5" y="-2696" font-family="Arial" font-size="10.00" fill="#ffffff">0x0000000000001090</text>
<text text-anchor="middle" x="18997.5" y="-2685" font-family="Arial" font-size="10.00" fill="#ffffff">99.97%</text>
<text text-anchor="middle" x="18997.5" y="-2674" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18997.5" y="-2663" font-family="Arial" font-size="10.00" fill="#ffffff">0×</text>
</g>
<!-- _start -->
<g id="node4" class="node">
<title>_start</title>
<polygon fill="#ff0100" stroke="#ff0100" points="19048,-2616 18947,-2616 18947,-2553 19048,-2553 19048,-2616"/>
<text text-anchor="middle" x="18997.5" y="-2604" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18997.5" y="-2593" font-family="Arial" font-size="10.00" fill="#ffffff">_start</text>
<text text-anchor="middle" x="18997.5" y="-2582" font-family="Arial" font-size="10.00" fill="#ffffff">99.87%</text>
<text text-anchor="middle" x="18997.5" y="-2571" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18997.5" y="-2560" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- 0x0000000000001090&#45;&gt;_start -->
<g id="edge2" class="edge">
<title>0x0000000000001090&#45;&gt;_start</title>
<path fill="none" stroke="#ff0100" stroke-width="3.99" d="M18997.5,-2655.7562C18997.5,-2646.5536 18997.5,-2636.3591 18997.5,-2626.6267"/>
<polygon fill="#ff0100" stroke="#ff0100" stroke-width="3.99" points="19001.0001,-2626.3163 18997.5,-2616.3163 18994.0001,-2626.3164 19001.0001,-2626.3163"/>
<text text-anchor="middle" x="19014.5" y="-2639" font-family="Arial" font-size="10.00" fill="#ff0100">99.87%</text>
<text text-anchor="middle" x="19014.5" y="-2628" font-family="Arial" font-size="10.00" fill="#ff0100">1×</text>
</g>
<!-- _start&#45;&gt;(below main) -->
<g id="edge74" class="edge">
<title>_start&#45;&gt;(below main)</title>
<path fill="none" stroke="#ff0100" stroke-width="3.99" d="M18997.5,-2552.7562C18997.5,-2543.5536 18997.5,-2533.3591 18997.5,-2523.6267"/>
<polygon fill="#ff0100" stroke="#ff0100" stroke-width="3.99" points="19001.0001,-2523.3163 18997.5,-2513.3163 18994.0001,-2523.3164 19001.0001,-2523.3163"/>
<text text-anchor="middle" x="19014.5" y="-2536" font-family="Arial" font-size="10.00" fill="#ff0100">99.87%</text>
<text text-anchor="middle" x="19014.5" y="-2525" font-family="Arial" font-size="10.00" fill="#ff0100">1×</text>
</g>
<!-- DirichletTransitions::DirichletTransitions(DirichletTransitions const&amp;) -->
<g id="node5" class="node">
<title>DirichletTransitions::DirichletTransitions(DirichletTransitions const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="14038.5,-1586 13726.5,-1586 13726.5,-1523 14038.5,-1523 14038.5,-1586"/>
<text text-anchor="middle" x="13882.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="13882.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">DirichletTransitions::DirichletTransitions(DirichletTransitions const&amp;)</text>
<text text-anchor="middle" x="13882.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="13882.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="13882.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::unordered_map(std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt; const&amp;) -->
<g id="node6" class="node">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::unordered_map(std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="11614.5,-1483 9622.5,-1483 9622.5,-1420 11614.5,-1420 11614.5,-1483"/>
<text text-anchor="middle" x="10618.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="10618.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::unordered_map(std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="10618.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="10618.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="10618.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- DirichletTransitions::DirichletTransitions(DirichletTransitions const&amp;)&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::unordered_map(std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt; const&amp;) -->
<g id="edge3" class="edge">
<title>DirichletTransitions::DirichletTransitions(DirichletTransitions const&amp;)&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::unordered_map(std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M13726.3383,-1550.2531C13466.6966,-1543.1364 12929.8106,-1528.1837 12475.5,-1514 12168.1883,-1504.4056 11832.2924,-1493.2917 11531.6972,-1483.1198"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="11531.7019,-1481.8944 11528.1624,-1483.0002 11531.6189,-1484.343 11531.7019,-1481.8944"/>
<text text-anchor="middle" x="12489.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="12489.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d0f73">730×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;) -->
<g id="node67" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="10515.5,-1339 6615.5,-1339 6615.5,-1276 10515.5,-1276 10515.5,-1339"/>
<text text-anchor="middle" x="8565.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="8565.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="8565.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">0.55%</text>
<text text-anchor="middle" x="8565.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="8565.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::unordered_map(std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;) -->
<g id="edge163" class="edge">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::unordered_map(std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M10169.2295,-1419.9876C9827.8798,-1396.0449 9360.3534,-1363.252 9018.1698,-1339.2508"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="9018.2306,-1338.0272 9014.6535,-1339.0042 9018.0592,-1340.4712 9018.2306,-1338.0272"/>
<text text-anchor="middle" x="10026.5" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.55%</text>
<text text-anchor="middle" x="10026.5" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d0f73">730×</text>
</g>
<!-- DirichletTransitions::Observe(int, int, int) -->
<g id="node7" class="node">
<title>DirichletTransitions::Observe(int, int, int)</title>
<polygon fill="#0d2379" stroke="#0d2379" points="24050.5,-1586 23858.5,-1586 23858.5,-1523 24050.5,-1523 24050.5,-1586"/>
<text text-anchor="middle" x="23954.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="23954.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">DirichletTransitions::Observe(int, int, int)</text>
<text text-anchor="middle" x="23954.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">5.12%</text>
<text text-anchor="middle" x="23954.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.07%)</text>
<text text-anchor="middle" x="23954.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">28809×</text>
</g>
<!-- std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;) -->
<g id="node8" class="node">
<title>std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="28848.5,-1483 26848.5,-1483 26848.5,-1420 28848.5,-1420 28848.5,-1483"/>
<text text-anchor="middle" x="27848.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="27848.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</text>
<text text-anchor="middle" x="27848.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">0.52%</text>
<text text-anchor="middle" x="27848.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="27848.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">1610×</text>
</g>
<!-- DirichletTransitions::Observe(int, int, int)&#45;&gt;std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;) -->
<g id="edge4" class="edge">
<title>DirichletTransitions::Observe(int, int, int)&#45;&gt;std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M24050.7567,-1551.9539C24430.5963,-1541.9068 25853.0635,-1504.2812 26844.8596,-1478.0472"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="26845.0278,-1479.2683 26848.4941,-1477.9511 26844.9629,-1476.8192 26845.0278,-1479.2683"/>
<text text-anchor="middle" x="26263.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d0f73">0.52%</text>
<text text-anchor="middle" x="26263.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d0f73">1610×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) -->
<g id="node9" class="node">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)</title>
<polygon fill="#0d1b77" stroke="#0d1b77" points="24504.5,-1483 23404.5,-1483 23404.5,-1420 24504.5,-1420 24504.5,-1483"/>
<text text-anchor="middle" x="23954.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="23954.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)</text>
<text text-anchor="middle" x="23954.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">3.31%</text>
<text text-anchor="middle" x="23954.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="23954.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">28809×</text>
</g>
<!-- DirichletTransitions::Observe(int, int, int)&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) -->
<g id="edge5" class="edge">
<title>DirichletTransitions::Observe(int, int, int)&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)</title>
<path fill="none" stroke="#0d1b77" stroke-width=".5" d="M23954.5,-1522.7562C23954.5,-1511.3998 23954.5,-1498.5328 23954.5,-1486.888"/>
<polygon fill="#0d1b77" stroke="#0d1b77" stroke-width=".5" points="23955.7251,-1486.8163 23954.5,-1483.3163 23953.2751,-1486.8164 23955.7251,-1486.8163"/>
<text text-anchor="middle" x="23971" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1b77">3.31%</text>
<text text-anchor="middle" x="23971" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1b77">28809×</text>
</g>
<!-- std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::__detail::_Insert&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;) -->
<g id="node103" class="node">
<title>std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::__detail::_Insert&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="31671.5,-1339 28663.5,-1339 28663.5,-1276 31671.5,-1276 31671.5,-1339"/>
<text text-anchor="middle" x="30167.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="30167.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::__detail::_Insert&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</text>
<text text-anchor="middle" x="30167.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">0.51%</text>
<text text-anchor="middle" x="30167.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="30167.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">1610×</text>
</g>
<!-- std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)&#45;&gt;std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::__detail::_Insert&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;) -->
<g id="edge155" class="edge">
<title>std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)&#45;&gt;std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::__detail::_Insert&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M28355.9809,-1419.9876C28741.6526,-1396.039 29269.919,-1363.2359 29656.4634,-1339.2332"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="29656.734,-1340.4438 29660.1513,-1339.0042 29656.5821,-1337.9986 29656.734,-1340.4438"/>
<text text-anchor="middle" x="29495.5" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.51%</text>
<text text-anchor="middle" x="29495.5" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d0f73">1610×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) -->
<g id="node78" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)</title>
<polygon fill="#0d1a77" stroke="#0d1a77" points="24986,-1339 22923,-1339 22923,-1276 24986,-1276 24986,-1339"/>
<text text-anchor="middle" x="23954.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="23954.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)</text>
<text text-anchor="middle" x="23954.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">3.23%</text>
<text text-anchor="middle" x="23954.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(0.05%)</text>
<text text-anchor="middle" x="23954.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">28809×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) -->
<g id="edge160" class="edge">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)</title>
<path fill="none" stroke="#0d1a77" stroke-width=".5" d="M23954.5,-1419.8986C23954.5,-1397.1085 23954.5,-1366.3344 23954.5,-1342.749"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width=".5" points="23955.7251,-1342.5277 23954.5,-1339.0277 23953.2751,-1342.5277 23955.7251,-1342.5277"/>
<text text-anchor="middle" x="23971" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d1a77">3.23%</text>
<text text-anchor="middle" x="23971" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d1a77">28809×</text>
</g>
<!-- DirichletTransitions::generate(int, int) const -->
<g id="node10" class="node">
<title>DirichletTransitions::generate(int, int) const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="19896,-1586 19693,-1586 19693,-1523 19896,-1523 19896,-1586"/>
<text text-anchor="middle" x="19794.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19794.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">DirichletTransitions::generate(int, int) const</text>
<text text-anchor="middle" x="19794.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">0.85%</text>
<text text-anchor="middle" x="19794.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="19794.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">3620×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="node11" class="node">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</title>
<polygon fill="#0c8e92" stroke="#0c8e92" points="20309,-1483 19182,-1483 19182,-1420 20309,-1420 20309,-1483"/>
<text text-anchor="middle" x="19745.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19745.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</text>
<text text-anchor="middle" x="19745.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">24.26%</text>
<text text-anchor="middle" x="19745.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.17%)</text>
<text text-anchor="middle" x="19745.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">213065×</text>
</g>
<!-- DirichletTransitions::generate(int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge6" class="edge">
<title>DirichletTransitions::generate(int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M19896.2192,-1538.0978C19926.5496,-1533.2217 19959.8683,-1527.8798 19990.5,-1523 20003.1639,-1520.9826 20039.1694,-1523.7491 20047.5,-1514 20053.8519,-1506.5664 20053.9381,-1499.3591 20047.5,-1492 20045.0999,-1489.2565 20039.7158,-1486.6344 20032.0182,-1484.1392"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="20032.2851,-1482.9396 20028.5795,-1483.0776 20031.5624,-1485.2806 20032.2851,-1482.9396"/>
<text text-anchor="middle" x="20065.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d0e73">0.39%</text>
<text text-anchor="middle" x="20065.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d0e73">3620×</text>
</g>
<!-- mcount -->
<g id="node18" class="node">
<title>mcount</title>
<polygon fill="#0c968a" stroke="#0c968a" points="23563,-166 23496,-166 23496,-103 23563,-103 23563,-166"/>
<text text-anchor="middle" x="23529.5" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.27.so</text>
<text text-anchor="middle" x="23529.5" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">mcount</text>
<text text-anchor="middle" x="23529.5" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">27.23%</text>
<text text-anchor="middle" x="23529.5" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(11.54%)</text>
<text text-anchor="middle" x="23529.5" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">13532695×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount -->
<g id="edge161" class="edge">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M19413.1181,-1419.9809C19291.226,-1398.9316 19182.5,-1364.2504 19182.5,-1307.5 19182.5,-1307.5 19182.5,-1307.5 19182.5,-1091.5 19182.5,-1013.4684 19207.3264,-988.1063 19177.5,-916 19108.158,-748.3632 18977.3304,-781.9034 18897.5,-619 18881.0691,-585.4709 18884.5,-573.3386 18884.5,-536 18884.5,-536 18884.5,-536 18884.5,-237.5 18884.5,-178.1534 18943.7911,-183.6769 19002.5,-175 19237.6779,-140.242 23072.8785,-135.0076 23492.352,-134.5384"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.4623,-135.7634 23495.9609,-134.5344 23492.4595,-133.3134 23492.4623,-135.7634"/>
<text text-anchor="middle" x="19055.5" y="-734.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.43%</text>
<text text-anchor="middle" x="19055.5" y="-723.5" font-family="Arial" font-size="10.00" fill="#0d0f73">213065×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="node80" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</title>
<polygon fill="#0c8b92" stroke="#0c8b92" points="21305.5,-1339 19215.5,-1339 19215.5,-1276 21305.5,-1276 21305.5,-1339"/>
<text text-anchor="middle" x="20260.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="20260.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</text>
<text text-anchor="middle" x="20260.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">23.67%</text>
<text text-anchor="middle" x="20260.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(0.35%)</text>
<text text-anchor="middle" x="20260.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">213065×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge162" class="edge">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0c8b92" stroke-width=".95" d="M19858.2006,-1419.9876C19942.4558,-1396.4289 20057.3556,-1364.3015 20142.793,-1340.4123"/>
<polygon fill="#0c8b92" stroke="#0c8b92" stroke-width=".95" points="20143.3495,-1342.0375 20147.6067,-1339.0663 20142.4258,-1338.7342 20143.3495,-1342.0375"/>
<text text-anchor="middle" x="20126.5" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0c8b92">23.67%</text>
<text text-anchor="middle" x="20126.5" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0c8b92">213065×</text>
</g>
<!-- DirichletTransitions::getMarginal(int, int) const -->
<g id="node12" class="node">
<title>DirichletTransitions::getMarginal(int, int) const</title>
<polygon fill="#0d2078" stroke="#0d2078" points="20210.5,-1586 19994.5,-1586 19994.5,-1523 20210.5,-1523 20210.5,-1586"/>
<text text-anchor="middle" x="20102.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="20102.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">DirichletTransitions::getMarginal(int, int) const</text>
<text text-anchor="middle" x="20102.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">4.47%</text>
<text text-anchor="middle" x="20102.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.07%)</text>
<text text-anchor="middle" x="20102.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">28800×</text>
</g>
<!-- DirichletTransitions::getMarginal(int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge8" class="edge">
<title>DirichletTransitions::getMarginal(int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0d1b77" stroke-width=".5" d="M20098.9289,-1522.8382C20096.0284,-1511.4662 20090.8208,-1499.5884 20081.5,-1492 20078.0715,-1489.2088 20070.8049,-1486.514 20060.65,-1483.9317"/>
<polygon fill="#0d1b77" stroke="#0d1b77" stroke-width=".5" points="20060.7878,-1482.7043 20057.0968,-1483.0603 20060.2042,-1485.0838 20060.7878,-1482.7043"/>
<text text-anchor="middle" x="20112" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1b77">3.31%</text>
<text text-anchor="middle" x="20112" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1b77">28800×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const -->
<g id="node13" class="node">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const</title>
<polygon fill="#0d1676" stroke="#0d1676" points="21576,-1411 20573,-1411 20573,-1348 21576,-1348 21576,-1411"/>
<text text-anchor="middle" x="21074.5" y="-1399" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="21074.5" y="-1388" font-family="Arial" font-size="10.00" fill="#ffffff">std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const</text>
<text text-anchor="middle" x="21074.5" y="-1377" font-family="Arial" font-size="10.00" fill="#ffffff">2.31%</text>
<text text-anchor="middle" x="21074.5" y="-1366" font-family="Arial" font-size="10.00" fill="#ffffff">(0.14%)</text>
<text text-anchor="middle" x="21074.5" y="-1355" font-family="Arial" font-size="10.00" fill="#ffffff">213065×</text>
</g>
<!-- DirichletTransitions::getMarginal(int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const -->
<g id="edge7" class="edge">
<title>DirichletTransitions::getMarginal(int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M20210.7027,-1535.0191C20376.4858,-1505.1713 20695.1612,-1447.7966 20895.6566,-1411.6992"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="20895.9618,-1412.889 20899.1893,-1411.0631 20895.5276,-1410.4778 20895.9618,-1412.889"/>
<text text-anchor="middle" x="20461" y="-1506" font-family="Arial" font-size="10.00" fill="#0d0e73">0.31%</text>
<text text-anchor="middle" x="20461" y="-1495" font-family="Arial" font-size="10.00" fill="#0d0e73">28800×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const&#45;&gt;mcount -->
<g id="edge158" class="edge">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M21576.2039,-1373.6633C22150.4761,-1367.0626 23119.3192,-1356.1717 23952.5,-1348 24413.8285,-1343.4754 24529.22,-1347.0731 24990.5,-1339 26205.8463,-1317.7297 26509.5424,-1304.3778 27724.5,-1267 27923.4179,-1260.8804 28619.5,-1434.512 28619.5,-1235.5 28619.5,-1235.5 28619.5,-1235.5 28619.5,-237.5 28619.5,-157 28529.5898,-183.1156 28449.5,-175 28191.9177,-148.8989 24008.4159,-135.9084 23567.0903,-134.6086"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.8008,-133.3829 23563.2972,-134.5975 23566.7935,-135.8329 23566.8008,-133.3829"/>
<text text-anchor="middle" x="28638.5" y="-734.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.43%</text>
<text text-anchor="middle" x="28638.5" y="-723.5" font-family="Arial" font-size="10.00" fill="#0d0f73">213065×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const -->
<g id="node76" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const</title>
<polygon fill="#0d1575" stroke="#0d1575" points="20921.5,-516 18955.5,-516 18955.5,-453 20921.5,-453 20921.5,-516"/>
<text text-anchor="middle" x="19938.5" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19938.5" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const</text>
<text text-anchor="middle" x="19938.5" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">1.90%</text>
<text text-anchor="middle" x="19938.5" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.16%)</text>
<text text-anchor="middle" x="19938.5" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">232590×</text>
</g>
<!-- std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const -->
<g id="edge159" class="edge">
<title>std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const</title>
<path fill="none" stroke="#0d1475" stroke-width=".5" d="M21290.9063,-1347.981C21300.9648,-1345.0349 21307.9545,-1342.0195 21310.5,-1339 21349.1724,-1293.1257 21350.5744,-1248.6547 21310.5,-1204 21198.9776,-1079.7311 20680.3053,-1242.3169 20563.5,-1123 20531.1995,-1090.0049 20554.5,-1065.6736 20554.5,-1019.5 20554.5,-1019.5 20554.5,-1019.5 20554.5,-587.5 20554.5,-556.9365 20435.0088,-533.3153 20301.2817,-516.45"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width=".5" points="20301.3465,-515.2236 20297.7211,-516.0029 20301.0412,-517.6545 20301.3465,-515.2236"/>
<text text-anchor="middle" x="20573.5" y="-950.5" font-family="Arial" font-size="10.00" fill="#0d1475">1.74%</text>
<text text-anchor="middle" x="20573.5" y="-939.5" font-family="Arial" font-size="10.00" fill="#0d1475">213065×</text>
</g>
<!-- DirichletTransitions::marginal_generate(int, int) const -->
<g id="node14" class="node">
<title>DirichletTransitions::marginal_generate(int, int) const</title>
<polygon fill="#0d2279" stroke="#0d2279" points="19611,-1689 19366,-1689 19366,-1626 19611,-1626 19611,-1689"/>
<text text-anchor="middle" x="19488.5" y="-1677" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19488.5" y="-1666" font-family="Arial" font-size="10.00" fill="#ffffff">DirichletTransitions::marginal_generate(int, int) const</text>
<text text-anchor="middle" x="19488.5" y="-1655" font-family="Arial" font-size="10.00" fill="#ffffff">4.83%</text>
<text text-anchor="middle" x="19488.5" y="-1644" font-family="Arial" font-size="10.00" fill="#ffffff">(0.05%)</text>
<text text-anchor="middle" x="19488.5" y="-1633" font-family="Arial" font-size="10.00" fill="#ffffff">28800×</text>
</g>
<!-- DirichletTransitions::marginal_generate(int, int) const&#45;&gt;DirichletTransitions::getMarginal(int, int) const -->
<g id="edge9" class="edge">
<title>DirichletTransitions::marginal_generate(int, int) const&#45;&gt;DirichletTransitions::getMarginal(int, int) const</title>
<path fill="none" stroke="#0d2078" stroke-width=".5" d="M19611.2764,-1636.904C19722.0614,-1618.3195 19883.6366,-1591.2149 19990.8456,-1573.2303"/>
<polygon fill="#0d2078" stroke="#0d2078" stroke-width=".5" points="19991.0696,-1574.4349 19994.3187,-1572.6477 19990.6643,-1572.0187 19991.0696,-1574.4349"/>
<text text-anchor="middle" x="19866" y="-1609" font-family="Arial" font-size="10.00" fill="#0d2078">4.47%</text>
<text text-anchor="middle" x="19866" y="-1598" font-family="Arial" font-size="10.00" fill="#0d2078">28800×</text>
</g>
<!-- DirichletTransitions::marginal_pdf(int, int, int) const -->
<g id="node15" class="node">
<title>DirichletTransitions::marginal_pdf(int, int, int) const</title>
<polygon fill="#0c958e" stroke="#0c958e" points="19279.5,-1586 19041.5,-1586 19041.5,-1523 19279.5,-1523 19279.5,-1586"/>
<text text-anchor="middle" x="19160.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19160.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">DirichletTransitions::marginal_pdf(int, int, int) const</text>
<text text-anchor="middle" x="19160.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">26.36%</text>
<text text-anchor="middle" x="19160.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.42%)</text>
<text text-anchor="middle" x="19160.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">180645×</text>
</g>
<!-- DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge15" class="edge">
<title>DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0c778e" stroke-width=".82" d="M19279.5886,-1533.5323C19360.7347,-1519.245 19469.7489,-1500.0511 19561.9258,-1483.8216"/>
<polygon fill="#0c778e" stroke="#0c778e" stroke-width=".82" points="19562.4208,-1485.3338 19566.5795,-1483.0022 19561.8746,-1482.2315 19562.4208,-1485.3338"/>
<text text-anchor="middle" x="19524.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0c778e">20.57%</text>
<text text-anchor="middle" x="19524.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0c778e">180645×</text>
</g>
<!-- DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const -->
<g id="edge14" class="edge">
<title>DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;std::unordered_map&lt;StateAction&lt;int, int&gt;, DirichletDistribution, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt; &gt;::end() const</title>
<path fill="none" stroke="#0d1575" stroke-width=".5" d="M19279.6249,-1544.0394C19443.4594,-1530.0346 19747.599,-1505.4045 20007.5,-1492 20075.4391,-1488.496 20246.5071,-1494.8302 20313.5,-1483 20401.11,-1467.529 20416.229,-1437.2813 20503.5,-1420 20520.2355,-1416.686 20542.7526,-1413.5325 20569.1994,-1410.556"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width=".5" points="20569.4425,-1411.7616 20572.7852,-1410.1562 20569.171,-1409.3267 20569.4425,-1411.7616"/>
<text text-anchor="middle" x="20026.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1575">1.96%</text>
<text text-anchor="middle" x="20026.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1575">180645×</text>
</g>
<!-- StateAction&lt;int, int&gt;::StateAction(int, int) -->
<g id="node16" class="node">
<title>StateAction&lt;int, int&gt;::StateAction(int, int)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18544,-1267 18347,-1267 18347,-1204 18544,-1204 18544,-1267"/>
<text text-anchor="middle" x="18445.5" y="-1255" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18445.5" y="-1244" font-family="Arial" font-size="10.00" fill="#ffffff">StateAction&lt;int, int&gt;::StateAction(int, int)</text>
<text text-anchor="middle" x="18445.5" y="-1233" font-family="Arial" font-size="10.00" fill="#ffffff">0.71%</text>
<text text-anchor="middle" x="18445.5" y="-1222" font-family="Arial" font-size="10.00" fill="#ffffff">(0.23%)</text>
<text text-anchor="middle" x="18445.5" y="-1211" font-family="Arial" font-size="10.00" fill="#ffffff">241874×</text>
</g>
<!-- DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;StateAction&lt;int, int&gt;::StateAction(int, int) -->
<g id="edge10" class="edge">
<title>DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;StateAction&lt;int, int&gt;::StateAction(int, int)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M19117.0354,-1522.6856C19104.8558,-1511.5269 19092.927,-1497.9916 19085.5,-1483 19044.4078,-1400.0547 19129.4137,-1339.9613 19062.5,-1276 19044.2081,-1258.5152 18718.0669,-1244.8138 18547.5435,-1238.8096"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="18547.5855,-1237.5854 18544.0446,-1238.6867 18547.4994,-1240.0339 18547.5855,-1237.5854"/>
<text text-anchor="middle" x="19104.5" y="-1454.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.53%</text>
<text text-anchor="middle" x="19104.5" y="-1443.5" font-family="Arial" font-size="10.00" fill="#0d0f73">180645×</text>
</g>
<!-- bool std::__detail::operator==&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;(std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;, std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;) -->
<g id="node17" class="node">
<title>bool std::__detail::operator==&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;(std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;, std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="19176,-979 17789,-979 17789,-916 19176,-916 19176,-979"/>
<text text-anchor="middle" x="18482.5" y="-967" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18482.5" y="-956" font-family="Arial" font-size="10.00" fill="#ffffff">bool std::__detail::operator==&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;(std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;, std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;)</text>
<text text-anchor="middle" x="18482.5" y="-945" font-family="Arial" font-size="10.00" fill="#ffffff">0.70%</text>
<text text-anchor="middle" x="18482.5" y="-934" font-family="Arial" font-size="10.00" fill="#ffffff">(0.22%)</text>
<text text-anchor="middle" x="18482.5" y="-923" font-family="Arial" font-size="10.00" fill="#ffffff">241874×</text>
</g>
<!-- DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;bool std::__detail::operator==&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;(std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;, std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;) -->
<g id="edge11" class="edge">
<title>DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;bool std::__detail::operator==&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;(std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;, std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M19146.2029,-1522.7176C19138.4761,-1502.7012 19130.5,-1476.085 19130.5,-1451.5 19130.5,-1451.5 19130.5,-1451.5 19130.5,-1091.5 19130.5,-1048.6293 18911.5738,-1006.9453 18728.2222,-979.5524"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="18728.3552,-978.3337 18724.7128,-979.0291 18727.9938,-980.7569 18728.3552,-978.3337"/>
<text text-anchor="middle" x="19149.5" y="-1310.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.52%</text>
<text text-anchor="middle" x="19149.5" y="-1299.5" font-family="Arial" font-size="10.00" fill="#0d0f73">180645×</text>
</g>
<!-- DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;mcount -->
<g id="edge12" class="edge">
<title>DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M19099.5192,-1522.9068C19095.963,-1520.1075 19092.5845,-1517.1367 19089.5,-1514 19078.4825,-1502.796 19077.3781,-1497.9371 19072.5,-1483 19065.2995,-1460.9511 19062.8313,-1291.4151 19045.5,-1276 19030.9075,-1263.0209 18361.837,-1269.7348 18342.5,-1267 18222.9285,-1250.0894 18196.2172,-1229.5374 18080.5,-1195 17936.862,-1152.1292 17759.5,-1241.3992 17759.5,-1091.5 17759.5,-1091.5 17759.5,-1091.5 17759.5,-237.5 17759.5,-197.4229 17787.3784,-190.105 17824.5,-175 17894.3736,-146.568 23001.9536,-135.5647 23491.8524,-134.5744"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="23492.2118,-135.7987 23495.7093,-134.5666 23492.2068,-133.3488 23492.2118,-135.7987"/>
<text text-anchor="middle" x="17778.5" y="-806.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.36%</text>
<text text-anchor="middle" x="17778.5" y="-795.5" font-family="Arial" font-size="10.00" fill="#0d0e73">180645×</text>
</g>
<!-- std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const -->
<g id="node19" class="node">
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const</title>
<polygon fill="#0d1575" stroke="#0d1575" points="19485,-619 18918,-619 18918,-556 19485,-556 19485,-619"/>
<text text-anchor="middle" x="19201.5" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19201.5" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const</text>
<text text-anchor="middle" x="19201.5" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">2.01%</text>
<text text-anchor="middle" x="19201.5" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.12%)</text>
<text text-anchor="middle" x="19201.5" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">193540×</text>
</g>
<!-- DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const -->
<g id="edge13" class="edge">
<title>DirichletTransitions::marginal_pdf(int, int, int) const&#45;&gt;std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const</title>
<path fill="none" stroke="#0d1475" stroke-width=".5" d="M19164.4522,-1522.9717C19167.8772,-1495.7118 19172.9795,-1455.2514 19177.5,-1420 19188.0179,-1337.9808 19201.5,-1318.1909 19201.5,-1235.5 19201.5,-1235.5 19201.5,-1235.5 19201.5,-731.5 19201.5,-694.5347 19201.5,-652.2317 19201.5,-623.0887"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width=".5" points="19202.7251,-622.7445 19201.5,-619.2445 19200.2751,-622.7446 19202.7251,-622.7445"/>
<text text-anchor="middle" x="19220.5" y="-1094.5" font-family="Arial" font-size="10.00" fill="#0d1475">1.70%</text>
<text text-anchor="middle" x="19220.5" y="-1083.5" font-family="Arial" font-size="10.00" fill="#0d1475">164330×</text>
</g>
<!-- StateAction&lt;int, int&gt;::StateAction(int, int)&#45;&gt;mcount -->
<g id="edge47" class="edge">
<title>StateAction&lt;int, int&gt;::StateAction(int, int)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M18346.9826,-1211.56C18179.9379,-1168.7537 17852.8361,-1074.594 17787.5,-979 17771.7004,-955.8835 17785.6118,-943.9363 17787.5,-916 17789.95,-879.7523 17794.4807,-871.1074 17798.5,-835 17803.6082,-789.1098 17807.5,-777.6736 17807.5,-731.5 17807.5,-731.5 17807.5,-731.5 17807.5,-237.5 17807.5,-45.6632 18476.8197,-182.7476 18668.5,-175 19178.7568,-154.3759 23069.4143,-136.5474 23492.2575,-134.6642"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.4003,-135.8887 23495.8948,-134.648 23492.3893,-133.4387 23492.4003,-135.8887"/>
<text text-anchor="middle" x="17826.5" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.48%</text>
<text text-anchor="middle" x="17826.5" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d0f73">241874×</text>
</g>
<!-- bool std::__detail::operator==&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;(std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;, std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;)&#45;&gt;mcount -->
<g id="edge75" class="edge">
<title>bool std::__detail::operator==&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;(std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;, std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M18566.3349,-915.9426C18612.084,-892.7192 18659.5,-855.9888 18659.5,-803.5 18659.5,-803.5 18659.5,-803.5 18659.5,-237.5 18659.5,-136.7078 18777.7504,-189.4597 18877.5,-175 19119.4561,-139.9261 23066.3728,-134.9682 23492.3199,-134.5348"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.4845,-135.7597 23495.9832,-134.5311 23492.4819,-133.3097 23492.4845,-135.7597"/>
<text text-anchor="middle" x="18678.5" y="-539" font-family="Arial" font-size="10.00" fill="#0d0f73">0.48%</text>
<text text-anchor="middle" x="18678.5" y="-528" font-family="Arial" font-size="10.00" fill="#0d0f73">241874×</text>
</g>
<!-- __mcount_internal -->
<g id="node61" class="node">
<title>__mcount_internal</title>
<polygon fill="#0c5987" stroke="#0c5987" points="23577.5,-63 23481.5,-63 23481.5,0 23577.5,0 23577.5,-63"/>
<text text-anchor="middle" x="23529.5" y="-51" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.27.so</text>
<text text-anchor="middle" x="23529.5" y="-40" font-family="Arial" font-size="10.00" fill="#ffffff">__mcount_internal</text>
<text text-anchor="middle" x="23529.5" y="-29" font-family="Arial" font-size="10.00" fill="#ffffff">15.68%</text>
<text text-anchor="middle" x="23529.5" y="-18" font-family="Arial" font-size="10.00" fill="#ffffff">(15.68%)</text>
<text text-anchor="middle" x="23529.5" y="-7" font-family="Arial" font-size="10.00" fill="#ffffff">13532696×</text>
</g>
<!-- mcount&#45;&gt;__mcount_internal -->
<g id="edge78" class="edge">
<title>mcount&#45;&gt;__mcount_internal</title>
<path fill="none" stroke="#0c5987" stroke-width=".63" d="M23529.5,-102.7562C23529.5,-91.5956 23529.5,-78.9761 23529.5,-67.4914"/>
<polygon fill="#0c5987" stroke="#0c5987" stroke-width=".63" points="23530.9001,-67.3163 23529.5,-63.3163 23528.1001,-67.3164 23530.9001,-67.3163"/>
<text text-anchor="middle" x="23554" y="-86" font-family="Arial" font-size="10.00" fill="#0c5987">15.68%</text>
<text text-anchor="middle" x="23554" y="-75" font-family="Arial" font-size="10.00" fill="#0c5987">13532696×</text>
</g>
<!-- std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const&#45;&gt;mcount -->
<g id="edge143" class="edge">
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M19019.5323,-555.9764C18980.3258,-545.4186 18946.8802,-532.1317 18934.5,-516 18909.0648,-482.8573 18909.5744,-455.5276 18934.5,-422 19133.3178,-154.5689 19323.8907,-261.3522 19652.5,-206 19979.7319,-150.8799 20066.7813,-184.0358 20398.5,-175 21669.9781,-140.3656 23232.7313,-135.2095 23492.2012,-134.5787"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="23492.4294,-135.8032 23495.9264,-134.5697 23492.4234,-133.3532 23492.4294,-135.8032"/>
<text text-anchor="middle" x="19013.5" y="-384.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.39%</text>
<text text-anchor="middle" x="19013.5" y="-373.5" font-family="Arial" font-size="10.00" fill="#0d0e73">193540×</text>
</g>
<!-- std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr() -->
<g id="node95" class="node">
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()</title>
<polygon fill="#0d1c77" stroke="#0d1c77" points="22983,-516 22474,-516 22474,-453 22983,-453 22983,-516"/>
<text text-anchor="middle" x="22728.5" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="22728.5" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()</text>
<text text-anchor="middle" x="22728.5" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">3.53%</text>
<text text-anchor="middle" x="22728.5" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.29%)</text>
<text text-anchor="middle" x="22728.5" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">456514×</text>
</g>
<!-- std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const&#45;&gt;std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr() -->
<g id="edge144" class="edge">
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::operator&#45;&gt;() const&#45;&gt;std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()</title>
<path fill="none" stroke="#0d1375" stroke-width=".5" d="M19485.1216,-581.954C20249.2104,-566.9196 22303.1406,-525.8529 22449.5,-516 22456.2709,-515.5442 22463.1305,-515.0448 22470.0492,-514.5079"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width=".5" points="22470.5053,-515.7009 22473.8987,-514.2058 22470.3136,-513.2584 22470.5053,-515.7009"/>
<text text-anchor="middle" x="22184.5" y="-539" font-family="Arial" font-size="10.00" fill="#0d1375">1.49%</text>
<text text-anchor="middle" x="22184.5" y="-528" font-family="Arial" font-size="10.00" fill="#0d1375">193540×</text>
</g>
<!-- DiscreteMDPCounts::AddTransition(int, int, double, int) -->
<g id="node20" class="node">
<title>DiscreteMDPCounts::AddTransition(int, int, double, int)</title>
<polygon fill="#0c9982" stroke="#0c9982" points="19315,-1689 19060,-1689 19060,-1626 19315,-1626 19315,-1689"/>
<text text-anchor="middle" x="19187.5" y="-1677" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19187.5" y="-1666" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::AddTransition(int, int, double, int)</text>
<text text-anchor="middle" x="19187.5" y="-1655" font-family="Arial" font-size="10.00" fill="#ffffff">28.97%</text>
<text text-anchor="middle" x="19187.5" y="-1644" font-family="Arial" font-size="10.00" fill="#ffffff">(0.24%)</text>
<text text-anchor="middle" x="19187.5" y="-1633" font-family="Arial" font-size="10.00" fill="#ffffff">28809×</text>
</g>
<!-- DiscreteMDPCounts::AddTransition(int, int, double, int)&#45;&gt;DirichletTransitions::Observe(int, int, int) -->
<g id="edge16" class="edge">
<title>DiscreteMDPCounts::AddTransition(int, int, double, int)&#45;&gt;DirichletTransitions::Observe(int, int, int)</title>
<path fill="none" stroke="#0d2379" stroke-width=".5" d="M19315.45,-1631.8876C19330.9136,-1629.518 19346.5285,-1627.4618 19361.5,-1626 19375.9779,-1624.5864 23184.5285,-1566.2772 23854.4657,-1556.0297"/>
<polygon fill="#0d2379" stroke="#0d2379" stroke-width=".5" points="23854.8819,-1557.2485 23858.3627,-1555.9701 23854.8444,-1554.7988 23854.8819,-1557.2485"/>
<text text-anchor="middle" x="21269" y="-1609" font-family="Arial" font-size="10.00" fill="#0d2379">5.12%</text>
<text text-anchor="middle" x="21269" y="-1598" font-family="Arial" font-size="10.00" fill="#0d2379">28809×</text>
</g>
<!-- DiscreteMDPCounts::AddTransition(int, int, double, int)&#45;&gt;DirichletTransitions::marginal_pdf(int, int, int) const -->
<g id="edge17" class="edge">
<title>DiscreteMDPCounts::AddTransition(int, int, double, int)&#45;&gt;DirichletTransitions::marginal_pdf(int, int, int) const</title>
<path fill="none" stroke="#0c7c8f" stroke-width=".86" d="M19179.1788,-1625.7562C19176.2789,-1614.6935 19173.0032,-1602.1974 19170.0139,-1590.7939"/>
<polygon fill="#0c7c8f" stroke="#0c7c8f" stroke-width=".86" points="19171.5641,-1590.3577 19168.8402,-1586.3163 19168.4493,-1591.1743 19171.5641,-1590.3577"/>
<text text-anchor="middle" x="19195.5" y="-1609" font-family="Arial" font-size="10.00" fill="#0c7c8f">21.45%</text>
<text text-anchor="middle" x="19195.5" y="-1598" font-family="Arial" font-size="10.00" fill="#0c7c8f">144045×</text>
</g>
<!-- MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double) -->
<g id="node21" class="node">
<title>MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)</title>
<polygon fill="#0d1876" stroke="#0d1876" points="19028,-1586 18759,-1586 18759,-1523 19028,-1523 19028,-1586"/>
<text text-anchor="middle" x="18893.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18893.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)</text>
<text text-anchor="middle" x="18893.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">2.58%</text>
<text text-anchor="middle" x="18893.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.26%)</text>
<text text-anchor="middle" x="18893.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">198765×</text>
</g>
<!-- DiscreteMDPCounts::AddTransition(int, int, double, int)&#45;&gt;MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double) -->
<g id="edge18" class="edge">
<title>DiscreteMDPCounts::AddTransition(int, int, double, int)&#45;&gt;MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)</title>
<path fill="none" stroke="#0d1375" stroke-width=".5" d="M19102.8903,-1625.9617C19075.4029,-1615.8803 19044.7167,-1604.7991 19016.5,-1595 19009.0668,-1592.4186 19001.367,-1589.786 18993.6124,-1587.1645"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width=".5" points="18993.9943,-1586.0005 18990.2863,-1586.0418 18993.2107,-1588.3219 18993.9943,-1586.0005"/>
<text text-anchor="middle" x="19097.5" y="-1609" font-family="Arial" font-size="10.00" fill="#0d1375">1.57%</text>
<text text-anchor="middle" x="19097.5" y="-1598" font-family="Arial" font-size="10.00" fill="#0d1375">144045×</text>
</g>
<!-- MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)&#45;&gt;mcount -->
<g id="edge33" class="edge">
<title>MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M18758.7243,-1523.6452C18756.9741,-1523.4182 18755.2321,-1523.2029 18753.5,-1523 18670.4783,-1513.2758 12735.5,-1535.0892 12735.5,-1451.5 12735.5,-1451.5 12735.5,-1451.5 12735.5,-237.5 12735.5,-165.1234 22797.8535,-136.4897 23491.874,-134.6008"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="23492.1021,-135.8253 23495.5987,-134.5907 23492.0953,-133.3753 23492.1021,-135.8253"/>
<text text-anchor="middle" x="12754.5" y="-806.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.40%</text>
<text text-anchor="middle" x="12754.5" y="-795.5" font-family="Arial" font-size="10.00" fill="#0d0e73">198765×</text>
</g>
<!-- TransitionDistribution&lt;int, int&gt;::SetTransition(int, int, int, double) -->
<g id="node37" class="node">
<title>TransitionDistribution&lt;int, int&gt;::SetTransition(int, int, int, double)</title>
<polygon fill="#0d1575" stroke="#0d1575" points="19024,-1483 18729,-1483 18729,-1420 19024,-1420 19024,-1483"/>
<text text-anchor="middle" x="18876.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18876.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">TransitionDistribution&lt;int, int&gt;::SetTransition(int, int, int, double)</text>
<text text-anchor="middle" x="18876.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">1.92%</text>
<text text-anchor="middle" x="18876.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.63%)</text>
<text text-anchor="middle" x="18876.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">198765×</text>
</g>
<!-- MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)&#45;&gt;TransitionDistribution&lt;int, int&gt;::SetTransition(int, int, int, double) -->
<g id="edge32" class="edge">
<title>MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)&#45;&gt;TransitionDistribution&lt;int, int&gt;::SetTransition(int, int, int, double)</title>
<path fill="none" stroke="#0d1575" stroke-width=".5" d="M18888.2607,-1522.7562C18886.3864,-1511.3998 18884.2627,-1498.5328 18882.3407,-1486.888"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width=".5" points="18883.5299,-1486.5701 18881.7512,-1483.3163 18881.1126,-1486.9691 18883.5299,-1486.5701"/>
<text text-anchor="middle" x="18906.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1575">1.92%</text>
<text text-anchor="middle" x="18906.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1575">198765×</text>
</g>
<!-- DiscreteMDPCounts::Clone() const -->
<g id="node22" class="node">
<title>DiscreteMDPCounts::Clone() const</title>
<polygon fill="#0d2e7c" stroke="#0d2e7c" points="18926,-1792 18757,-1792 18757,-1729 18926,-1729 18926,-1792"/>
<text text-anchor="middle" x="18841.5" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18841.5" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::Clone() const</text>
<text text-anchor="middle" x="18841.5" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">7.47%</text>
<text text-anchor="middle" x="18841.5" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18841.5" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;) -->
<g id="node23" class="node">
<title>DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)</title>
<polygon fill="#0d2e7c" stroke="#0d2e7c" points="18810.5,-1689 18482.5,-1689 18482.5,-1626 18810.5,-1626 18810.5,-1689"/>
<text text-anchor="middle" x="18646.5" y="-1677" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18646.5" y="-1666" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)</text>
<text text-anchor="middle" x="18646.5" y="-1655" font-family="Arial" font-size="10.00" fill="#ffffff">7.46%</text>
<text text-anchor="middle" x="18646.5" y="-1644" font-family="Arial" font-size="10.00" fill="#ffffff">(0.09%)</text>
<text text-anchor="middle" x="18646.5" y="-1633" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- DiscreteMDPCounts::Clone() const&#45;&gt;DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;) -->
<g id="edge19" class="edge">
<title>DiscreteMDPCounts::Clone() const&#45;&gt;DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)</title>
<path fill="none" stroke="#0d2e7c" stroke-width=".5" d="M18781.6684,-1728.8966C18758.7394,-1716.7854 18732.5261,-1702.9394 18709.3248,-1690.6844"/>
<polygon fill="#0d2e7c" stroke="#0d2e7c" stroke-width=".5" points="18709.8855,-1689.5952 18706.2185,-1689.0436 18708.7411,-1691.7615 18709.8855,-1689.5952"/>
<text text-anchor="middle" x="18775.5" y="-1712" font-family="Arial" font-size="10.00" fill="#0d2e7c">7.46%</text>
<text text-anchor="middle" x="18775.5" y="-1701" font-family="Arial" font-size="10.00" fill="#0d2e7c">730×</text>
</g>
<!-- DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;DirichletTransitions::DirichletTransitions(DirichletTransitions const&amp;) -->
<g id="edge20" class="edge">
<title>DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;DirichletTransitions::DirichletTransitions(DirichletTransitions const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M18482.167,-1653.947C17747.4795,-1638.0627 14768.2641,-1573.6507 14042.4912,-1557.9591"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="14042.3094,-1556.73 14038.7837,-1557.8789 14042.2564,-1559.1794 14042.3094,-1556.73"/>
<text text-anchor="middle" x="16705.5" y="-1609" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="16705.5" y="-1598" font-family="Arial" font-size="10.00" fill="#0d0f73">730×</text>
</g>
<!-- DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;DirichletTransitions::marginal_pdf(int, int, int) const -->
<g id="edge21" class="edge">
<title>DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;DirichletTransitions::marginal_pdf(int, int, int) const</title>
<path fill="none" stroke="#0d2279" stroke-width=".5" d="M18749.8254,-1625.9214C18791.844,-1614.3088 18841.111,-1602.2393 18886.5,-1595 18950.7006,-1584.7604 18968.2319,-1595.8073 19032.5,-1586 19034.2462,-1585.7335 19036.0035,-1585.4545 19037.7697,-1585.1639"/>
<polygon fill="#0d2279" stroke="#0d2279" stroke-width=".5" points="19038.1585,-1586.3407 19041.4065,-1584.5514 19037.7516,-1583.9247 19038.1585,-1586.3407"/>
<text text-anchor="middle" x="18903" y="-1609" font-family="Arial" font-size="10.00" fill="#0d2279">4.90%</text>
<text text-anchor="middle" x="18903" y="-1598" font-family="Arial" font-size="10.00" fill="#0d2279">36500×</text>
</g>
<!-- DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double) -->
<g id="edge24" class="edge">
<title>DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M18686.8532,-1625.6982C18702.318,-1614.7173 18720.566,-1603.1416 18738.5,-1595 18744.3763,-1592.3323 18750.4608,-1589.8155 18756.6673,-1587.4441"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="18757.2834,-1588.5212 18760.1274,-1586.1416 18756.4202,-1586.2282 18757.2834,-1588.5212"/>
<text text-anchor="middle" x="18755" y="-1609" font-family="Arial" font-size="10.00" fill="#0d0e73">0.40%</text>
<text text-anchor="middle" x="18755" y="-1598" font-family="Arial" font-size="10.00" fill="#0d0e73">36500×</text>
</g>
<!-- DiscreteMDPCounts::getExpectedReward(int, int) const -->
<g id="node24" class="node">
<title>DiscreteMDPCounts::getExpectedReward(int, int) const</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="18749.5,-1586 18491.5,-1586 18491.5,-1523 18749.5,-1523 18749.5,-1586"/>
<text text-anchor="middle" x="18620.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18620.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::getExpectedReward(int, int) const</text>
<text text-anchor="middle" x="18620.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">0.61%</text>
<text text-anchor="middle" x="18620.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.09%)</text>
<text text-anchor="middle" x="18620.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">65409×</text>
</g>
<!-- DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;DiscreteMDPCounts::getExpectedReward(int, int) const -->
<g id="edge22" class="edge">
<title>DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;DiscreteMDPCounts::getExpectedReward(int, int) const</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M18630.3757,-1625.5912C18629.284,-1622.7298 18628.3017,-1619.8403 18627.5,-1617 18625.0606,-1608.3572 18623.4661,-1598.8164 18622.4254,-1589.8468"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="18623.608,-1589.3893 18622.0124,-1586.0419 18621.1723,-1589.6537 18623.608,-1589.3893"/>
<text text-anchor="middle" x="18644" y="-1609" font-family="Arial" font-size="10.00" fill="#0d0e73">0.34%</text>
<text text-anchor="middle" x="18644" y="-1598" font-family="Arial" font-size="10.00" fill="#0d0e73">36500×</text>
</g>
<!-- MDP&lt;int, int&gt;::MDP(MDP&lt;int, int&gt; const&amp;) -->
<g id="node25" class="node">
<title>MDP&lt;int, int&gt;::MDP(MDP&lt;int, int&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="17072.5,-1586 16866.5,-1586 16866.5,-1523 17072.5,-1523 17072.5,-1586"/>
<text text-anchor="middle" x="16969.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="16969.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">MDP&lt;int, int&gt;::MDP(MDP&lt;int, int&gt; const&amp;)</text>
<text text-anchor="middle" x="16969.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">0.71%</text>
<text text-anchor="middle" x="16969.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="16969.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;MDP&lt;int, int&gt;::MDP(MDP&lt;int, int&gt; const&amp;) -->
<g id="edge23" class="edge">
<title>DiscreteMDPCounts::DiscreteMDPCounts(DiscreteMDPCounts const&amp;)&#45;&gt;MDP&lt;int, int&gt;::MDP(MDP&lt;int, int&gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18482.0544,-1626.4552C18412.4254,-1614.5497 18330.2639,-1602.1236 18255.5,-1595 18027.9947,-1573.3231 17342.578,-1560.4242 17076.6166,-1556.1198"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="17076.2513,-1554.8888 17072.732,-1556.057 17076.2117,-1557.3385 17076.2513,-1554.8888"/>
<text text-anchor="middle" x="18431.5" y="-1609" font-family="Arial" font-size="10.00" fill="#0d1074">0.71%</text>
<text text-anchor="middle" x="18431.5" y="-1598" font-family="Arial" font-size="10.00" fill="#0d1074">730×</text>
</g>
<!-- TransitionDistribution&lt;int, int&gt;::TransitionDistribution(TransitionDistribution&lt;int, int&gt; const&amp;) -->
<g id="node32" class="node">
<title>TransitionDistribution&lt;int, int&gt;::TransitionDistribution(TransitionDistribution&lt;int, int&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="12722,-1483 12307,-1483 12307,-1420 12722,-1420 12722,-1483"/>
<text text-anchor="middle" x="12514.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="12514.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">TransitionDistribution&lt;int, int&gt;::TransitionDistribution(TransitionDistribution&lt;int, int&gt; const&amp;)</text>
<text text-anchor="middle" x="12514.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">0.68%</text>
<text text-anchor="middle" x="12514.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="12514.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- MDP&lt;int, int&gt;::MDP(MDP&lt;int, int&gt; const&amp;)&#45;&gt;TransitionDistribution&lt;int, int&gt;::TransitionDistribution(TransitionDistribution&lt;int, int&gt; const&amp;) -->
<g id="edge30" class="edge">
<title>MDP&lt;int, int&gt;::MDP(MDP&lt;int, int&gt; const&amp;)&#45;&gt;TransitionDistribution&lt;int, int&gt;::TransitionDistribution(TransitionDistribution&lt;int, int&gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M16866.4547,-1553.2399C16489.2988,-1548.6598 15148.4045,-1532.6591 14042.5,-1523 14005.2228,-1522.6744 12737.2696,-1520.1392 12700.5,-1514 12664.6764,-1508.0188 12626.4309,-1496.1793 12593.9941,-1484.3984"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="12594.1798,-1483.1621 12590.4719,-1483.1112 12593.3387,-1485.4632 12594.1798,-1483.1621"/>
<text text-anchor="middle" x="12714.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1074">0.68%</text>
<text text-anchor="middle" x="12714.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1074">730×</text>
</g>
<!-- DiscreteMDPCounts::GenerateTransition(int, int) const -->
<g id="node26" class="node">
<title>DiscreteMDPCounts::GenerateTransition(int, int) const</title>
<polygon fill="#0d2279" stroke="#0d2279" points="19472.5,-1792 19218.5,-1792 19218.5,-1729 19472.5,-1729 19472.5,-1792"/>
<text text-anchor="middle" x="19345.5" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19345.5" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::GenerateTransition(int, int) const</text>
<text text-anchor="middle" x="19345.5" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">4.92%</text>
<text text-anchor="middle" x="19345.5" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="19345.5" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">28800×</text>
</g>
<!-- DiscreteMDPCounts::GenerateTransition(int, int) const&#45;&gt;DirichletTransitions::marginal_generate(int, int) const -->
<g id="edge25" class="edge">
<title>DiscreteMDPCounts::GenerateTransition(int, int) const&#45;&gt;DirichletTransitions::marginal_generate(int, int) const</title>
<path fill="none" stroke="#0d2279" stroke-width=".5" d="M19389.5715,-1728.7562C19406.0177,-1716.9103 19424.7459,-1703.4208 19441.4499,-1691.3892"/>
<polygon fill="#0d2279" stroke="#0d2279" stroke-width=".5" points="19442.2038,-1692.356 19444.3278,-1689.3163 19440.7718,-1690.368 19442.2038,-1692.356"/>
<text text-anchor="middle" x="19447" y="-1712" font-family="Arial" font-size="10.00" fill="#0d2279">4.83%</text>
<text text-anchor="middle" x="19447" y="-1701" font-family="Arial" font-size="10.00" fill="#0d2279">28800×</text>
</g>
<!-- DiscreteMDPCounts::generate() const -->
<g id="node27" class="node">
<title>DiscreteMDPCounts::generate() const</title>
<polygon fill="#0d1475" stroke="#0d1475" points="19050.5,-1689 18868.5,-1689 18868.5,-1626 19050.5,-1626 19050.5,-1689"/>
<text text-anchor="middle" x="18959.5" y="-1677" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18959.5" y="-1666" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::generate() const</text>
<text text-anchor="middle" x="18959.5" y="-1655" font-family="Arial" font-size="10.00" fill="#ffffff">1.67%</text>
<text text-anchor="middle" x="18959.5" y="-1644" font-family="Arial" font-size="10.00" fill="#ffffff">(0.04%)</text>
<text text-anchor="middle" x="18959.5" y="-1633" font-family="Arial" font-size="10.00" fill="#ffffff">362×</text>
</g>
<!-- DiscreteMDPCounts::generate() const&#45;&gt;DirichletTransitions::generate(int, int) const -->
<g id="edge26" class="edge">
<title>DiscreteMDPCounts::generate() const&#45;&gt;DirichletTransitions::generate(int, int) const</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18965.66,-1625.8505C18969.6046,-1614.1907 18976.0379,-1602.1062 18986.5,-1595 19000.1554,-1585.7248 19267.0098,-1586.7579 19283.5,-1586 19423.8991,-1579.547 19585.8144,-1569.0477 19689.1003,-1561.9627"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="19689.3418,-1563.1741 19692.7496,-1561.7121 19689.1739,-1560.7299 19689.3418,-1563.1741"/>
<text text-anchor="middle" x="19000.5" y="-1609" font-family="Arial" font-size="10.00" fill="#0d1074">0.85%</text>
<text text-anchor="middle" x="19000.5" y="-1598" font-family="Arial" font-size="10.00" fill="#0d1074">3620×</text>
</g>
<!-- DiscreteMDPCounts::generate() const&#45;&gt;MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double) -->
<g id="edge27" class="edge">
<title>DiscreteMDPCounts::generate() const&#45;&gt;MDP&lt;int, int&gt;::setTransitionProbability(int, int, int, double)</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M18939.1593,-1625.7562C18931.7569,-1614.204 18923.353,-1601.0887 18915.7906,-1589.2868"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="18916.8069,-1588.6023 18913.8872,-1586.3163 18914.7441,-1589.9242 18916.8069,-1588.6023"/>
<text text-anchor="middle" x="18949" y="-1609" font-family="Arial" font-size="10.00" fill="#0d0f74">0.60%</text>
<text text-anchor="middle" x="18949" y="-1598" font-family="Arial" font-size="10.00" fill="#0d0f74">18100×</text>
</g>
<!-- DiscreteMDPCounts::~DiscreteMDPCounts() -->
<g id="node28" class="node">
<title>DiscreteMDPCounts::~DiscreteMDPCounts()</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18749.5,-1895 18537.5,-1895 18537.5,-1832 18749.5,-1832 18749.5,-1895"/>
<text text-anchor="middle" x="18643.5" y="-1883" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18643.5" y="-1872" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::~DiscreteMDPCounts()</text>
<text text-anchor="middle" x="18643.5" y="-1861" font-family="Arial" font-size="10.00" fill="#ffffff">0.74%</text>
<text text-anchor="middle" x="18643.5" y="-1850" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18643.5" y="-1839" font-family="Arial" font-size="10.00" fill="#ffffff">731×</text>
</g>
<!-- DiscreteMDPCounts::~DiscreteMDPCounts()&#39;2 -->
<g id="node29" class="node">
<title>DiscreteMDPCounts::~DiscreteMDPCounts()&#39;2</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18747.5,-1792 18529.5,-1792 18529.5,-1729 18747.5,-1729 18747.5,-1792"/>
<text text-anchor="middle" x="18638.5" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18638.5" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteMDPCounts::~DiscreteMDPCounts()&#39;2</text>
<text text-anchor="middle" x="18638.5" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">0.74%</text>
<text text-anchor="middle" x="18638.5" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="18638.5" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- DiscreteMDPCounts::~DiscreteMDPCounts()&#45;&gt;DiscreteMDPCounts::~DiscreteMDPCounts()&#39;2 -->
<g id="edge28" class="edge">
<title>DiscreteMDPCounts::~DiscreteMDPCounts()&#45;&gt;DiscreteMDPCounts::~DiscreteMDPCounts()&#39;2</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18641.959,-1831.7562C18641.4078,-1820.3998 18640.7831,-1807.5328 18640.2179,-1795.888"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="18641.4378,-1795.7528 18640.0445,-1792.3163 18638.9907,-1795.8716 18641.4378,-1795.7528"/>
<text text-anchor="middle" x="18655.5" y="-1815" font-family="Arial" font-size="10.00" fill="#0d1074">0.74%</text>
<text text-anchor="middle" x="18655.5" y="-1804" font-family="Arial" font-size="10.00" fill="#0d1074">730×</text>
</g>
<!-- FixedDiscretePolicy::getActionProbability(int const&amp;, int const&amp;) const -->
<g id="node30" class="node">
<title>FixedDiscretePolicy::getActionProbability(int const&amp;, int const&amp;) const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="34467.5,-1586 34143.5,-1586 34143.5,-1523 34467.5,-1523 34467.5,-1586"/>
<text text-anchor="middle" x="34305.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="34305.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">FixedDiscretePolicy::getActionProbability(int const&amp;, int const&amp;) const</text>
<text text-anchor="middle" x="34305.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">0.72%</text>
<text text-anchor="middle" x="34305.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.33%)</text>
<text text-anchor="middle" x="34305.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">764230×</text>
</g>
<!-- Vector::operator[](int) const -->
<g id="node31" class="node">
<title>Vector::operator[](int) const</title>
<polygon fill="#0d1776" stroke="#0d1776" points="34947,-1483 34812,-1483 34812,-1420 34947,-1420 34947,-1483"/>
<text text-anchor="middle" x="34879.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="34879.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">Vector::operator[](int) const</text>
<text text-anchor="middle" x="34879.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">2.51%</text>
<text text-anchor="middle" x="34879.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(2.51%)</text>
<text text-anchor="middle" x="34879.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">4900398×</text>
</g>
<!-- FixedDiscretePolicy::getActionProbability(int const&amp;, int const&amp;) const&#45;&gt;Vector::operator[](int) const -->
<g id="edge29" class="edge">
<title>FixedDiscretePolicy::getActionProbability(int const&amp;, int const&amp;) const&#45;&gt;Vector::operator[](int) const</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M34467.6378,-1546.6338C34602.9274,-1539.2168 34778.482,-1527.2798 34809.5,-1514 34824.5379,-1507.5618 34838.5478,-1496.5595 34850.0229,-1485.5637"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="34850.9297,-1486.3905 34852.5823,-1483.0709 34849.2202,-1484.6354 34850.9297,-1486.3905"/>
<text text-anchor="middle" x="34860.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d0e73">0.39%</text>
<text text-anchor="middle" x="34860.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d0e73">764230×</text>
</g>
<!-- MDP&lt;int, int&gt;::getExpectedReward(int const&amp;, int const&amp;) const -->
<g id="node33" class="node">
<title>MDP&lt;int, int&gt;::getExpectedReward(int const&amp;, int const&amp;) const</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="34803.5,-1483 34505.5,-1483 34505.5,-1420 34803.5,-1420 34803.5,-1483"/>
<text text-anchor="middle" x="34654.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="34654.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">MDP&lt;int, int&gt;::getExpectedReward(int const&amp;, int const&amp;) const</text>
<text text-anchor="middle" x="34654.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">0.59%</text>
<text text-anchor="middle" x="34654.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.13%)</text>
<text text-anchor="middle" x="34654.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">767860×</text>
</g>
<!-- MDP&lt;int, int&gt;::getNextStates(int, int) const -->
<g id="node34" class="node">
<title>MDP&lt;int, int&gt;::getNextStates(int, int) const</title>
<polygon fill="#0d1274" stroke="#0d1274" points="31712.5,-1483 31506.5,-1483 31506.5,-1420 31712.5,-1420 31712.5,-1483"/>
<text text-anchor="middle" x="31609.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="31609.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">MDP&lt;int, int&gt;::getNextStates(int, int) const</text>
<text text-anchor="middle" x="31609.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">1.32%</text>
<text text-anchor="middle" x="31609.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(1.32%)</text>
<text text-anchor="middle" x="31609.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">767830×</text>
</g>
<!-- MDP&lt;int, int&gt;::getTransitionProbability(int const&amp;, int const&amp;, int const&amp;) const -->
<g id="node35" class="node">
<title>MDP&lt;int, int&gt;::getTransitionProbability(int const&amp;, int const&amp;, int const&amp;) const</title>
<polygon fill="#0d3d80" stroke="#0d3d80" points="32085,-1483 31722,-1483 31722,-1420 32085,-1420 32085,-1483"/>
<text text-anchor="middle" x="31903.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="31903.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">MDP&lt;int, int&gt;::getTransitionProbability(int const&amp;, int const&amp;, int const&amp;) const</text>
<text text-anchor="middle" x="31903.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">10.49%</text>
<text text-anchor="middle" x="31903.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.82%)</text>
<text text-anchor="middle" x="31903.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">3839250×</text>
</g>
<!-- TransitionDistribution&lt;int, int&gt;::pdf(int, int, int) const -->
<g id="node36" class="node">
<title>TransitionDistribution&lt;int, int&gt;::pdf(int, int, int) const</title>
<polygon fill="#0d397f" stroke="#0d397f" points="31979,-1339 31736,-1339 31736,-1276 31979,-1276 31979,-1339"/>
<text text-anchor="middle" x="31857.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="31857.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">TransitionDistribution&lt;int, int&gt;::pdf(int, int, int) const</text>
<text text-anchor="middle" x="31857.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">9.67%</text>
<text text-anchor="middle" x="31857.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(0.49%)</text>
<text text-anchor="middle" x="31857.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">3839250×</text>
</g>
<!-- MDP&lt;int, int&gt;::getTransitionProbability(int const&amp;, int const&amp;, int const&amp;) const&#45;&gt;TransitionDistribution&lt;int, int&gt;::pdf(int, int, int) const -->
<g id="edge31" class="edge">
<title>MDP&lt;int, int&gt;::getTransitionProbability(int const&amp;, int const&amp;, int const&amp;) const&#45;&gt;TransitionDistribution&lt;int, int&gt;::pdf(int, int, int) const</title>
<path fill="none" stroke="#0d397f" stroke-width=".5" d="M31893.4051,-1419.8986C31886.095,-1397.0148 31876.2134,-1366.0809 31868.6672,-1342.4581"/>
<polygon fill="#0d397f" stroke="#0d397f" stroke-width=".5" points="31869.8034,-1341.9889 31867.5713,-1339.0277 31867.4695,-1342.7345 31869.8034,-1341.9889"/>
<text text-anchor="middle" x="31911" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d397f">9.67%</text>
<text text-anchor="middle" x="31911" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d397f">3839250×</text>
</g>
<!-- TransitionDistribution&lt;int, int&gt;::GetTransition(int, int, int) const -->
<g id="node49" class="node">
<title>TransitionDistribution&lt;int, int&gt;::GetTransition(int, int, int) const</title>
<polygon fill="#0d367f" stroke="#0d367f" points="32056.5,-1195 31768.5,-1195 31768.5,-1132 32056.5,-1132 32056.5,-1195"/>
<text text-anchor="middle" x="31912.5" y="-1183" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="31912.5" y="-1172" font-family="Arial" font-size="10.00" fill="#ffffff">TransitionDistribution&lt;int, int&gt;::GetTransition(int, int, int) const</text>
<text text-anchor="middle" x="31912.5" y="-1161" font-family="Arial" font-size="10.00" fill="#ffffff">9.18%</text>
<text text-anchor="middle" x="31912.5" y="-1150" font-family="Arial" font-size="10.00" fill="#ffffff">(9.18%)</text>
<text text-anchor="middle" x="31912.5" y="-1139" font-family="Arial" font-size="10.00" fill="#ffffff">3839250×</text>
</g>
<!-- TransitionDistribution&lt;int, int&gt;::pdf(int, int, int) const&#45;&gt;TransitionDistribution&lt;int, int&gt;::GetTransition(int, int, int) const -->
<g id="edge50" class="edge">
<title>TransitionDistribution&lt;int, int&gt;::pdf(int, int, int) const&#45;&gt;TransitionDistribution&lt;int, int&gt;::GetTransition(int, int, int) const</title>
<path fill="none" stroke="#0d367f" stroke-width=".5" d="M31869.57,-1275.8986C31878.3103,-1253.0148 31890.1253,-1222.0809 31899.1479,-1198.4581"/>
<polygon fill="#0d367f" stroke="#0d367f" stroke-width=".5" points="31900.3537,-1198.7344 31900.4582,-1195.0277 31898.0649,-1197.8602 31900.3537,-1198.7344"/>
<text text-anchor="middle" x="31917" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d367f">9.18%</text>
<text text-anchor="middle" x="31917" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d367f">3839250×</text>
</g>
<!-- tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect::value_type&amp; tsl::detail_hopscotch_hash::hopscotch_hash&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::KeySelect, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt;, std::__cxx11::list&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt; &gt; &gt;::operator[]&lt;Transition&lt;int, int&gt; const&amp;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, (void*)0&gt;(Transition&lt;int, int&gt; const&amp;) -->
<g id="node50" class="node">
<title>tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect::value_type&amp; tsl::detail_hopscotch_hash::hopscotch_hash&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::KeySelect, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt;, std::__cxx11::list&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt; &gt; &gt;::operator[]&lt;Transition&lt;int, int&gt; const&amp;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, (void*)0&gt;(Transition&lt;int, int&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="19041.5,-1339 12749.5,-1339 12749.5,-1276 19041.5,-1276 19041.5,-1339"/>
<text text-anchor="middle" x="15895.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="15895.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect::value_type&amp; tsl::detail_hopscotch_hash::hopscotch_hash&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::KeySelect, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt;, std::__cxx11::list&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt; &gt; &gt;::operator[]&lt;Transition&lt;int, int&gt; const&amp;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, (void*)0&gt;(Transition&lt;int, int&gt; const&amp;)</text>
<text text-anchor="middle" x="15895.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">0.71%</text>
<text text-anchor="middle" x="15895.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(0.50%)</text>
<text text-anchor="middle" x="15895.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">198765×</text>
</g>
<!-- TransitionDistribution&lt;int, int&gt;::SetTransition(int, int, int, double)&#45;&gt;tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect::value_type&amp; tsl::detail_hopscotch_hash::hopscotch_hash&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::KeySelect, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt;, std::__cxx11::list&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt; &gt; &gt;::operator[]&lt;Transition&lt;int, int&gt; const&amp;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, (void*)0&gt;(Transition&lt;int, int&gt; const&amp;) -->
<g id="edge49" class="edge">
<title>TransitionDistribution&lt;int, int&gt;::SetTransition(int, int, int, double)&#45;&gt;tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect::value_type&amp; tsl::detail_hopscotch_hash::hopscotch_hash&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::KeySelect, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt;, std::__cxx11::list&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt; &gt; &gt;::operator[]&lt;Transition&lt;int, int&gt; const&amp;, tsl::hopscotch_map&lt;Transition&lt;int, int&gt;, double, std::hash&lt;Transition&lt;int, int&gt; &gt;, std::equal_to&lt;Transition&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;Transition&lt;int, int&gt;, double&gt; &gt;, 62u, false, tsl::hh::power_of_two_growth_policy&lt;2ul&gt; &gt;::ValueSelect, (void*)0&gt;(Transition&lt;int, int&gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18728.9262,-1444.3713C18338.406,-1425.5069 17259.4704,-1373.3879 16551.3846,-1339.1831"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="16551.3064,-1337.953 16547.7514,-1339.0076 16551.1881,-1340.4002 16551.3064,-1337.953"/>
<text text-anchor="middle" x="18015.5" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.71%</text>
<text text-anchor="middle" x="18015.5" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d1074">198765×</text>
</g>
<!-- PolicyEvaluation::ComputeStateValues(double, int) -->
<g id="node38" class="node">
<title>PolicyEvaluation::ComputeStateValues(double, int)</title>
<polygon fill="#2abc09" stroke="#2abc09" points="32769.5,-1689 32531.5,-1689 32531.5,-1626 32769.5,-1626 32769.5,-1689"/>
<text text-anchor="middle" x="32650.5" y="-1677" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="32650.5" y="-1666" font-family="Arial" font-size="10.00" fill="#ffffff">PolicyEvaluation::ComputeStateValues(double, int)</text>
<text text-anchor="middle" x="32650.5" y="-1655" font-family="Arial" font-size="10.00" fill="#ffffff">54.61%</text>
<text text-anchor="middle" x="32650.5" y="-1644" font-family="Arial" font-size="10.00" fill="#ffffff">(1.09%)</text>
<text text-anchor="middle" x="32650.5" y="-1633" font-family="Arial" font-size="10.00" fill="#ffffff">360×</text>
</g>
<!-- PolicyEvaluation::ComputeStateValues(double, int)&#45;&gt;FixedDiscretePolicy::getActionProbability(int const&amp;, int const&amp;) const -->
<g id="edge34" class="edge">
<title>PolicyEvaluation::ComputeStateValues(double, int)&#45;&gt;FixedDiscretePolicy::getActionProbability(int const&amp;, int const&amp;) const</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M32769.5235,-1650.0925C33059.9405,-1632.0182 33805.4587,-1585.6204 34139.395,-1564.8377"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="34139.8875,-1566.0345 34143.3046,-1564.5943 34139.7353,-1563.5892 34139.8875,-1566.0345"/>
<text text-anchor="middle" x="33644.5" y="-1609" font-family="Arial" font-size="10.00" fill="#0d1074">0.72%</text>
<text text-anchor="middle" x="33644.5" y="-1598" font-family="Arial" font-size="10.00" fill="#0d1074">764230×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const -->
<g id="node39" class="node">
<title>PolicyEvaluation::getValue(int, int) const</title>
<polygon fill="#1cb909" stroke="#1cb909" points="32854,-1586 32661,-1586 32661,-1523 32854,-1523 32854,-1586"/>
<text text-anchor="middle" x="32757.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="32757.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">PolicyEvaluation::getValue(int, int) const</text>
<text text-anchor="middle" x="32757.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">52.65%</text>
<text text-anchor="middle" x="32757.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(6.78%)</text>
<text text-anchor="middle" x="32757.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">767830×</text>
</g>
<!-- PolicyEvaluation::ComputeStateValues(double, int)&#45;&gt;PolicyEvaluation::getValue(int, int) const -->
<g id="edge35" class="edge">
<title>PolicyEvaluation::ComputeStateValues(double, int)&#45;&gt;PolicyEvaluation::getValue(int, int) const</title>
<path fill="none" stroke="#1ab909" stroke-width="2.1" d="M32683.4766,-1625.7562C32694.7655,-1614.8893 32707.4913,-1602.6393 32719.1666,-1591.4004"/>
<polygon fill="#1ab909" stroke="#1ab909" stroke-width="2.1" points="32721.0085,-1593.1252 32724.4481,-1586.3163 32717.5132,-1589.4941 32721.0085,-1593.1252"/>
<text text-anchor="middle" x="32732.5" y="-1609" font-family="Arial" font-size="10.00" fill="#1ab909">52.41%</text>
<text text-anchor="middle" x="32732.5" y="-1598" font-family="Arial" font-size="10.00" fill="#1ab909">764230×</text>
</g>
<!-- Vector::operator[](int) -->
<g id="node40" class="node">
<title>Vector::operator[](int)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="32651.5,-1586 32543.5,-1586 32543.5,-1523 32651.5,-1523 32651.5,-1586"/>
<text text-anchor="middle" x="32597.5" y="-1574" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="32597.5" y="-1563" font-family="Arial" font-size="10.00" fill="#ffffff">Vector::operator[](int)</text>
<text text-anchor="middle" x="32597.5" y="-1552" font-family="Arial" font-size="10.00" fill="#ffffff">0.52%</text>
<text text-anchor="middle" x="32597.5" y="-1541" font-family="Arial" font-size="10.00" fill="#ffffff">(0.52%)</text>
<text text-anchor="middle" x="32597.5" y="-1530" font-family="Arial" font-size="10.00" fill="#ffffff">1009370×</text>
</g>
<!-- PolicyEvaluation::ComputeStateValues(double, int)&#45;&gt;Vector::operator[](int) -->
<g id="edge36" class="edge">
<title>PolicyEvaluation::ComputeStateValues(double, int)&#45;&gt;Vector::operator[](int)</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M32634.1658,-1625.7562C32628.2719,-1614.3019 32621.5872,-1601.3109 32615.5545,-1589.5871"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="32616.5622,-1588.868 32613.8715,-1586.3163 32614.3837,-1589.989 32616.5622,-1588.868"/>
<text text-anchor="middle" x="32647.5" y="-1609" font-family="Arial" font-size="10.00" fill="#0d0e73">0.39%</text>
<text text-anchor="middle" x="32647.5" y="-1598" font-family="Arial" font-size="10.00" fill="#0d0e73">764230×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const&#45;&gt;Vector::operator[](int) const -->
<g id="edge40" class="edge">
<title>PolicyEvaluation::getValue(int, int) const&#45;&gt;Vector::operator[](int) const</title>
<path fill="none" stroke="#0d1575" stroke-width=".5" d="M32854.0438,-1552.319C33198.7443,-1544.5116 34352.552,-1518.1974 34431.5,-1514 34514.2943,-1509.5981 34721.2864,-1503.9383 34808.1063,-1483.0368"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width=".5" points="34808.5445,-1484.1903 34811.6467,-1482.1588 34807.9547,-1481.8123 34808.5445,-1484.1903"/>
<text text-anchor="middle" x="34774" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1575">1.96%</text>
<text text-anchor="middle" x="34774" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1575">3839150×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const&#45;&gt;MDP&lt;int, int&gt;::getExpectedReward(int const&amp;, int const&amp;) const -->
<g id="edge37" class="edge">
<title>PolicyEvaluation::getValue(int, int) const&#45;&gt;MDP&lt;int, int&gt;::getExpectedReward(int const&amp;, int const&amp;) const</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M32854.1476,-1552.6022C33171.3446,-1546.0492 34178.7261,-1522.5782 34501.5,-1483 34501.6514,-1482.9814 34501.8029,-1482.9628 34501.9545,-1482.9441"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="34501.8284,-1484.1948 34505.1475,-1482.5411 34501.5216,-1481.7641 34501.8284,-1484.1948"/>
<text text-anchor="middle" x="34410.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="34410.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d0f74">767830×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const&#45;&gt;MDP&lt;int, int&gt;::getNextStates(int, int) const -->
<g id="edge38" class="edge">
<title>PolicyEvaluation::getValue(int, int) const&#45;&gt;MDP&lt;int, int&gt;::getNextStates(int, int) const</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M32660.8741,-1523.7486C32659.4094,-1523.4837 32657.9507,-1523.2338 32656.5,-1523 32599.2303,-1513.7708 32192.448,-1516.6513 32134.5,-1514 31948.8495,-1505.5058 31900.3754,-1516.0887 31717.5,-1483 31717.0916,-1482.9261 31716.6825,-1482.8513 31716.2728,-1482.7755"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="31716.2374,-1481.5217 31712.5699,-1482.0693 31715.7784,-1483.9284 31716.2374,-1481.5217"/>
<text text-anchor="middle" x="32153.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1274">1.32%</text>
<text text-anchor="middle" x="32153.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1274">767830×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const&#45;&gt;MDP&lt;int, int&gt;::getTransitionProbability(int const&amp;, int const&amp;, int const&amp;) const -->
<g id="edge39" class="edge">
<title>PolicyEvaluation::getValue(int, int) const&#45;&gt;MDP&lt;int, int&gt;::getTransitionProbability(int const&amp;, int const&amp;, int const&amp;) const</title>
<path fill="none" stroke="#0d3d80" stroke-width=".5" d="M32660.8607,-1523.8266C32659.4002,-1523.5374 32657.946,-1523.2615 32656.5,-1523 32585.54,-1510.1673 32566.4543,-1518.752 32494.5,-1514 32314.3659,-1502.1036 32268.683,-1504.9837 32089.5,-1483 32089.2257,-1482.9663 32088.9512,-1482.9326 32088.6765,-1482.8987"/>
<polygon fill="#0d3d80" stroke="#0d3d80" stroke-width=".5" points="32088.7188,-1481.6695 32085.094,-1482.4515 32088.4153,-1484.1007 32088.7188,-1481.6695"/>
<text text-anchor="middle" x="32516" y="-1506" font-family="Arial" font-size="10.00" fill="#0d3d80">10.49%</text>
<text text-anchor="middle" x="32516" y="-1495" font-family="Arial" font-size="10.00" fill="#0d3d80">3839150×</text>
</g>
<!-- std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*) -->
<g id="node41" class="node">
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)</title>
<polygon fill="#0c5a87" stroke="#0c5a87" points="32613,-1483 32094,-1483 32094,-1420 32613,-1420 32613,-1483"/>
<text text-anchor="middle" x="32353.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="32353.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)</text>
<text text-anchor="middle" x="32353.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">15.85%</text>
<text text-anchor="middle" x="32353.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(1.03%)</text>
<text text-anchor="middle" x="32353.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">779842×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const&#45;&gt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*) -->
<g id="edge41" class="edge">
<title>PolicyEvaluation::getValue(int, int) const&#45;&gt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)</title>
<path fill="none" stroke="#0c5987" stroke-width=".62" d="M32660.7802,-1524.182C32659.3447,-1523.782 32657.9173,-1523.3877 32656.5,-1523 32605.9444,-1509.17 32550.2119,-1495.558 32500.4791,-1483.9833"/>
<polygon fill="#0c5987" stroke="#0c5987" stroke-width=".62" points="32500.7123,-1482.6362 32496.6045,-1483.0829 32500.0943,-1485.2954 32500.7123,-1482.6362"/>
<text text-anchor="middle" x="32634.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0c5987">15.59%</text>
<text text-anchor="middle" x="32634.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0c5987">767830×</text>
</g>
<!-- std::_Rb_tree_increment(std::_Rb_tree_node_base const*) -->
<g id="node42" class="node">
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*)</title>
<polygon fill="#0d1575" stroke="#0d1575" points="32893,-1483 32622,-1483 32622,-1420 32893,-1420 32893,-1483"/>
<text text-anchor="middle" x="32757.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.25</text>
<text text-anchor="middle" x="32757.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree_increment(std::_Rb_tree_node_base const*)</text>
<text text-anchor="middle" x="32757.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">1.90%</text>
<text text-anchor="middle" x="32757.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(0.16%)</text>
<text text-anchor="middle" x="32757.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">3839149×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const&#45;&gt;std::_Rb_tree_increment(std::_Rb_tree_node_base const*) -->
<g id="edge42" class="edge">
<title>PolicyEvaluation::getValue(int, int) const&#45;&gt;std::_Rb_tree_increment(std::_Rb_tree_node_base const*)</title>
<path fill="none" stroke="#0d1575" stroke-width=".5" d="M32757.5,-1522.7562C32757.5,-1511.3998 32757.5,-1498.5328 32757.5,-1486.888"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width=".5" points="32758.7251,-1486.8163 32757.5,-1483.3163 32756.2751,-1486.8164 32758.7251,-1486.8163"/>
<text text-anchor="middle" x="32779" y="-1506" font-family="Arial" font-size="10.00" fill="#0d1575">1.90%</text>
<text text-anchor="middle" x="32779" y="-1495" font-family="Arial" font-size="10.00" fill="#0d1575">3839149×</text>
</g>
<!-- std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;) -->
<g id="node43" class="node">
<title>std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)</title>
<polygon fill="#0c5285" stroke="#0c5285" points="34497,-1483 32902,-1483 32902,-1420 34497,-1420 34497,-1483"/>
<text text-anchor="middle" x="33699.5" y="-1471" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="33699.5" y="-1460" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)</text>
<text text-anchor="middle" x="33699.5" y="-1449" font-family="Arial" font-size="10.00" fill="#ffffff">14.42%</text>
<text text-anchor="middle" x="33699.5" y="-1438" font-family="Arial" font-size="10.00" fill="#ffffff">(2.08%)</text>
<text text-anchor="middle" x="33699.5" y="-1427" font-family="Arial" font-size="10.00" fill="#ffffff">775130×</text>
</g>
<!-- PolicyEvaluation::getValue(int, int) const&#45;&gt;std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;) -->
<g id="edge43" class="edge">
<title>PolicyEvaluation::getValue(int, int) const&#45;&gt;std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)</title>
<path fill="none" stroke="#0c5085" stroke-width=".56" d="M32854.3227,-1543.9132C32983.5426,-1529.7841 33218.0669,-1504.1408 33407.3401,-1483.4453"/>
<polygon fill="#0c5085" stroke="#0c5085" stroke-width=".56" points="33407.7047,-1484.7082 33411.242,-1483.0187 33407.4231,-1482.1336 33407.7047,-1484.7082"/>
<text text-anchor="middle" x="33331.5" y="-1506" font-family="Arial" font-size="10.00" fill="#0c5085">14.02%</text>
<text text-anchor="middle" x="33331.5" y="-1495" font-family="Arial" font-size="10.00" fill="#0c5085">767830×</text>
</g>
<!-- operator delete(void*) -->
<g id="node65" class="node">
<title>operator delete(void*)</title>
<polygon fill="#0d4682" stroke="#0d4682" points="32562,-1195 32453,-1195 32453,-1132 32562,-1132 32562,-1195"/>
<text text-anchor="middle" x="32507.5" y="-1183" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.25</text>
<text text-anchor="middle" x="32507.5" y="-1172" font-family="Arial" font-size="10.00" fill="#ffffff">operator delete(void*)</text>
<text text-anchor="middle" x="32507.5" y="-1161" font-family="Arial" font-size="10.00" fill="#ffffff">12.16%</text>
<text text-anchor="middle" x="32507.5" y="-1150" font-family="Arial" font-size="10.00" fill="#ffffff">(0.34%)</text>
<text text-anchor="middle" x="32507.5" y="-1139" font-family="Arial" font-size="10.00" fill="#ffffff">3934369×</text>
</g>
<!-- std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#45;&gt;operator delete(void*) -->
<g id="edge100" class="edge">
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#45;&gt;operator delete(void*)</title>
<path fill="none" stroke="#0d2179" stroke-width=".5" d="M32474.8306,-1419.9827C32515.6042,-1402.9755 32556.7305,-1377.3085 32580.5,-1339 32608.8454,-1293.3167 32571.5465,-1234.6999 32540.676,-1198.1139"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width=".5" points="32541.2927,-1196.9492 32538.0892,-1195.0813 32539.4286,-1198.5392 32541.2927,-1196.9492"/>
<text text-anchor="middle" x="32612" y="-1310.5" font-family="Arial" font-size="10.00" fill="#0d2179">4.80%</text>
<text text-anchor="middle" x="32612" y="-1299.5" font-family="Arial" font-size="10.00" fill="#0d2179">1557495×</text>
</g>
<!-- std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2 -->
<g id="node81" class="node">
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2</title>
<polygon fill="#0d3b80" stroke="#0d3b80" points="32514.5,-1339 31988.5,-1339 31988.5,-1276 32514.5,-1276 32514.5,-1339"/>
<text text-anchor="middle" x="32251.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="32251.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2</text>
<text text-anchor="middle" x="32251.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">10.02%</text>
<text text-anchor="middle" x="32251.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(2.82%)</text>
<text text-anchor="middle" x="32251.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">3893720×</text>
</g>
<!-- std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#45;&gt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2 -->
<g id="edge101" class="edge">
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#45;&gt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2</title>
<path fill="none" stroke="#0d3b80" stroke-width=".5" d="M32331.1157,-1419.8986C32314.8399,-1396.921 32292.8151,-1365.8272 32276.0565,-1342.1681"/>
<polygon fill="#0d3b80" stroke="#0d3b80" stroke-width=".5" points="32276.8549,-1341.1757 32273.8321,-1339.0277 32274.8556,-1342.5919 32276.8549,-1341.1757"/>
<text text-anchor="middle" x="32344" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d3b80">10.02%</text>
<text text-anchor="middle" x="32344" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d3b80">1557495×</text>
</g>
<!-- std::_Rb_tree_increment(std::_Rb_tree_node_base*) -->
<g id="node82" class="node">
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*)</title>
<polygon fill="#0d1475" stroke="#0d1475" points="32889.5,-1339 32645.5,-1339 32645.5,-1276 32889.5,-1276 32889.5,-1339"/>
<text text-anchor="middle" x="32767.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.25</text>
<text text-anchor="middle" x="32767.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree_increment(std::_Rb_tree_node_base*)</text>
<text text-anchor="middle" x="32767.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">1.74%</text>
<text text-anchor="middle" x="32767.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(1.74%)</text>
<text text-anchor="middle" x="32767.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">3839150×</text>
</g>
<!-- std::_Rb_tree_increment(std::_Rb_tree_node_base const*)&#45;&gt;std::_Rb_tree_increment(std::_Rb_tree_node_base*) -->
<g id="edge104" class="edge">
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base const*)&#45;&gt;std::_Rb_tree_increment(std::_Rb_tree_node_base*)</title>
<path fill="none" stroke="#0d1475" stroke-width=".5" d="M32759.6945,-1419.8986C32761.2772,-1397.1085 32763.4143,-1366.3344 32765.0522,-1342.749"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width=".5" points="32766.2901,-1342.6042 32765.3106,-1339.0277 32763.846,-1342.4344 32766.2901,-1342.6042"/>
<text text-anchor="middle" x="32786" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d1475">1.74%</text>
<text text-anchor="middle" x="32786" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d1475">3839150×</text>
</g>
<!-- operator new(unsigned long) -->
<g id="node66" class="node">
<title>operator new(unsigned long)</title>
<polygon fill="#0d397f" stroke="#0d397f" points="34424.5,-1195 34286.5,-1195 34286.5,-1132 34424.5,-1132 34424.5,-1195"/>
<text text-anchor="middle" x="34355.5" y="-1183" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.25</text>
<text text-anchor="middle" x="34355.5" y="-1172" font-family="Arial" font-size="10.00" fill="#ffffff">operator new(unsigned long)</text>
<text text-anchor="middle" x="34355.5" y="-1161" font-family="Arial" font-size="10.00" fill="#ffffff">9.70%</text>
<text text-anchor="middle" x="34355.5" y="-1150" font-family="Arial" font-size="10.00" fill="#ffffff">(2.01%)</text>
<text text-anchor="middle" x="34355.5" y="-1139" font-family="Arial" font-size="10.00" fill="#ffffff">3934587×</text>
</g>
<!-- std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#45;&gt;operator new(unsigned long) -->
<g id="edge105" class="edge">
<title>std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#45;&gt;operator new(unsigned long)</title>
<path fill="none" stroke="#0d1c77" stroke-width=".5" d="M34132.2738,-1419.9907C34331.1797,-1401.0018 34530.0119,-1373.7309 34560.5,-1339 34612.7553,-1279.4728 34506.5796,-1222.0269 34428.4425,-1189.8759"/>
<polygon fill="#0d1c77" stroke="#0d1c77" stroke-width=".5" points="34428.447,-1188.5544 34424.7436,-1188.3641 34427.52,-1190.8223 34428.447,-1188.5544"/>
<text text-anchor="middle" x="34595" y="-1310.5" font-family="Arial" font-size="10.00" fill="#0d1c77">3.62%</text>
<text text-anchor="middle" x="34595" y="-1299.5" font-family="Arial" font-size="10.00" fill="#0d1c77">1550260×</text>
</g>
<!-- std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2 -->
<g id="node83" class="node">
<title>std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2</title>
<polygon fill="#0d347e" stroke="#0d347e" points="34500,-1339 32899,-1339 32899,-1276 34500,-1276 34500,-1339"/>
<text text-anchor="middle" x="33699.5" y="-1327" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="33699.5" y="-1316" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2</text>
<text text-anchor="middle" x="33699.5" y="-1305" font-family="Arial" font-size="10.00" fill="#ffffff">8.72%</text>
<text text-anchor="middle" x="33699.5" y="-1294" font-family="Arial" font-size="10.00" fill="#ffffff">(3.31%)</text>
<text text-anchor="middle" x="33699.5" y="-1283" font-family="Arial" font-size="10.00" fill="#ffffff">1550260×</text>
</g>
<!-- std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#45;&gt;std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2 -->
<g id="edge106" class="edge">
<title>std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#45;&gt;std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2</title>
<path fill="none" stroke="#0d347e" stroke-width=".5" d="M33699.5,-1419.8986C33699.5,-1397.1085 33699.5,-1366.3344 33699.5,-1342.749"/>
<polygon fill="#0d347e" stroke="#0d347e" stroke-width=".5" points="33700.7251,-1342.5277 33699.5,-1339.0277 33698.2751,-1342.5277 33700.7251,-1342.5277"/>
<text text-anchor="middle" x="33718.5" y="-1382.5" font-family="Arial" font-size="10.00" fill="#0d347e">8.72%</text>
<text text-anchor="middle" x="33718.5" y="-1371.5" font-family="Arial" font-size="10.00" fill="#0d347e">775130×</text>
</g>
<!-- PolicyIteration::ComputeStateValues(double, int) -->
<g id="node44" class="node">
<title>PolicyIteration::ComputeStateValues(double, int)</title>
<polygon fill="#2cbd09" stroke="#2cbd09" points="19709,-1792 19482,-1792 19482,-1729 19709,-1729 19709,-1792"/>
<text text-anchor="middle" x="19595.5" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19595.5" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">PolicyIteration::ComputeStateValues(double, int)</text>
<text text-anchor="middle" x="19595.5" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">54.86%</text>
<text text-anchor="middle" x="19595.5" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="19595.5" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">360×</text>
</g>
<!-- PolicyIteration::ComputeStateValues(double, int)&#45;&gt;PolicyEvaluation::ComputeStateValues(double, int) -->
<g id="edge44" class="edge">
<title>PolicyIteration::ComputeStateValues(double, int)&#45;&gt;PolicyEvaluation::ComputeStateValues(double, int)</title>
<path fill="none" stroke="#2abc09" stroke-width="2.18" d="M19709.3519,-1759.6017C20911.5611,-1750.1167 31255.0781,-1668.5095 32523.2332,-1658.5041"/>
<polygon fill="#2abc09" stroke="#2abc09" stroke-width="2.18" points="32523.6475,-1661.091 32531.0268,-1658.4426 32523.6065,-1655.9112 32523.6475,-1661.091"/>
<text text-anchor="middle" x="27308.5" y="-1712" font-family="Arial" font-size="10.00" fill="#2abc09">54.61%</text>
<text text-anchor="middle" x="27308.5" y="-1701" font-family="Arial" font-size="10.00" fill="#2abc09">360×</text>
</g>
<!-- TreeBRLPolicy::Act(double, int) -->
<g id="node46" class="node">
<title>TreeBRLPolicy::Act(double, int)</title>
<polygon fill="#ff0200" stroke="#ff0200" points="19074.5,-2204 18920.5,-2204 18920.5,-2141 19074.5,-2141 19074.5,-2204"/>
<text text-anchor="middle" x="18997.5" y="-2192" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18997.5" y="-2181" font-family="Arial" font-size="10.00" fill="#ffffff">TreeBRLPolicy::Act(double, int)</text>
<text text-anchor="middle" x="18997.5" y="-2170" font-family="Arial" font-size="10.00" fill="#ffffff">99.83%</text>
<text text-anchor="middle" x="18997.5" y="-2159" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18997.5" y="-2148" font-family="Arial" font-size="10.00" fill="#ffffff">10×</text>
</g>
<!-- RunExperiment(std::shared_ptr&lt;Environment&lt;int, int&gt; &gt;, TreeBRLPolicy&amp;, int, SampleBasedRL*, std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;)&#45;&gt;TreeBRLPolicy::Act(double, int) -->
<g id="edge45" class="edge">
<title>RunExperiment(std::shared_ptr&lt;Environment&lt;int, int&gt; &gt;, TreeBRLPolicy&amp;, int, SampleBasedRL*, std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;)&#45;&gt;TreeBRLPolicy::Act(double, int)</title>
<path fill="none" stroke="#ff0200" stroke-width="3.99" d="M18997.5,-2243.7562C18997.5,-2234.5536 18997.5,-2224.3591 18997.5,-2214.6267"/>
<polygon fill="#ff0200" stroke="#ff0200" stroke-width="3.99" points="19001.0001,-2214.3163 18997.5,-2204.3163 18994.0001,-2214.3164 19001.0001,-2214.3163"/>
<text text-anchor="middle" x="19014.5" y="-2227" font-family="Arial" font-size="10.00" fill="#ff0200">99.83%</text>
<text text-anchor="middle" x="19014.5" y="-2216" font-family="Arial" font-size="10.00" fill="#ff0200">10×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::~BeliefState() -->
<g id="node51" class="node">
<title>TreeBRLPolicy::BeliefState::~BeliefState()</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18979.5,-2101 18777.5,-2101 18777.5,-2038 18979.5,-2038 18979.5,-2101"/>
<text text-anchor="middle" x="18878.5" y="-2089" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18878.5" y="-2078" font-family="Arial" font-size="10.00" fill="#ffffff">TreeBRLPolicy::BeliefState::~BeliefState()</text>
<text text-anchor="middle" x="18878.5" y="-2067" font-family="Arial" font-size="10.00" fill="#ffffff">0.77%</text>
<text text-anchor="middle" x="18878.5" y="-2056" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18878.5" y="-2045" font-family="Arial" font-size="10.00" fill="#ffffff">10×</text>
</g>
<!-- TreeBRLPolicy::Act(double, int)&#45;&gt;TreeBRLPolicy::BeliefState::~BeliefState() -->
<g id="edge51" class="edge">
<title>TreeBRLPolicy::Act(double, int)&#45;&gt;TreeBRLPolicy::BeliefState::~BeliefState()</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18960.8251,-2140.7562C18947.2522,-2129.0082 18931.8116,-2115.6437 18917.9986,-2103.6878"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="18918.7068,-2102.6807 18915.2587,-2101.3163 18917.1034,-2104.5332 18918.7068,-2102.6807"/>
<text text-anchor="middle" x="18963.5" y="-2124" font-family="Arial" font-size="10.00" fill="#0d1074">0.77%</text>
<text text-anchor="middle" x="18963.5" y="-2113" font-family="Arial" font-size="10.00" fill="#0d1074">10×</text>
</g>
<!-- TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) -->
<g id="node52" class="node">
<title>TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int)</title>
<polygon fill="#fe0a00" stroke="#fe0a00" points="19262.5,-2101 19006.5,-2101 19006.5,-2038 19262.5,-2038 19262.5,-2101"/>
<text text-anchor="middle" x="19134.5" y="-2089" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19134.5" y="-2078" font-family="Arial" font-size="10.00" fill="#ffffff">TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int)</text>
<text text-anchor="middle" x="19134.5" y="-2067" font-family="Arial" font-size="10.00" fill="#ffffff">99.04%</text>
<text text-anchor="middle" x="19134.5" y="-2056" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="19134.5" y="-2045" font-family="Arial" font-size="10.00" fill="#ffffff">10×</text>
</g>
<!-- TreeBRLPolicy::Act(double, int)&#45;&gt;TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int) -->
<g id="edge52" class="edge">
<title>TreeBRLPolicy::Act(double, int)&#45;&gt;TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int)</title>
<path fill="none" stroke="#fe0a00" stroke-width="3.96" d="M19039.7224,-2140.7562C19053.6555,-2130.2809 19069.2982,-2118.5203 19083.7977,-2107.6192"/>
<polygon fill="#fe0a00" stroke="#fe0a00" stroke-width="3.96" points="19086.2915,-2110.1233 19092.1812,-2101.3163 19082.0849,-2104.5281 19086.2915,-2110.1233"/>
<text text-anchor="middle" x="19095.5" y="-2124" font-family="Arial" font-size="10.00" fill="#fe0a00">99.04%</text>
<text text-anchor="middle" x="19095.5" y="-2113" font-family="Arial" font-size="10.00" fill="#fe0a00">10×</text>
</g>
<!-- StateAction&lt;int, int&gt; const&amp; std::__pair_get&lt;0ul&gt;::__get&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;) -->
<g id="node47" class="node">
<title>StateAction&lt;int, int&gt; const&amp; std::__pair_get&lt;0ul&gt;::__get&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="27891,-269 27142,-269 27142,-206 27891,-206 27891,-269"/>
<text text-anchor="middle" x="27516.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="27516.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">StateAction&lt;int, int&gt; const&amp; std::__pair_get&lt;0ul&gt;::__get&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)</text>
<text text-anchor="middle" x="27516.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="27516.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.11%)</text>
<text text-anchor="middle" x="27516.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">222831×</text>
</g>
<!-- StateAction&lt;int, int&gt; const&amp; std::__pair_get&lt;0ul&gt;::__get&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)&#45;&gt;mcount -->
<g id="edge46" class="edge">
<title>StateAction&lt;int, int&gt; const&amp; std::__pair_get&lt;0ul&gt;::__get&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M27323.8774,-205.9936C27241.4598,-193.9143 27144.0055,-181.483 27055.5,-175 26689.8473,-148.2159 23921.0169,-136.0952 23566.7617,-134.6484"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.7072,-133.4232 23563.2022,-134.6338 23566.6971,-135.8732 23566.7072,-133.4232"/>
<text text-anchor="middle" x="27276.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d0f73">0.45%</text>
<text text-anchor="middle" x="27276.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d0f73">222831×</text>
</g>
<!-- StateAction&lt;int, int&gt;::operator==(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="node48" class="node">
<title>StateAction&lt;int, int&gt;::operator==(StateAction&lt;int, int&gt; const&amp;) const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="28354,-269 28037,-269 28037,-206 28354,-206 28354,-269"/>
<text text-anchor="middle" x="28195.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="28195.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">StateAction&lt;int, int&gt;::operator==(StateAction&lt;int, int&gt; const&amp;) const</text>
<text text-anchor="middle" x="28195.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.72%</text>
<text text-anchor="middle" x="28195.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.27%)</text>
<text text-anchor="middle" x="28195.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">220739×</text>
</g>
<!-- StateAction&lt;int, int&gt;::operator==(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount -->
<g id="edge48" class="edge">
<title>StateAction&lt;int, int&gt;::operator==(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M28128.0009,-205.9324C28098.4514,-193.7424 28062.9501,-181.2441 28029.5,-175 27913.2891,-153.307 23992.2487,-136.4228 23566.8256,-134.6533"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.6713,-133.4278 23563.1662,-134.6381 23566.6611,-135.8778 23566.6713,-133.4278"/>
<text text-anchor="middle" x="28122.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d0f73">0.44%</text>
<text text-anchor="middle" x="28122.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d0f73">220739×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::~BeliefState()&#39;2 -->
<g id="node55" class="node">
<title>TreeBRLPolicy::BeliefState::~BeliefState()&#39;2</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18933,-1998 18724,-1998 18724,-1935 18933,-1935 18933,-1998"/>
<text text-anchor="middle" x="18828.5" y="-1986" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18828.5" y="-1975" font-family="Arial" font-size="10.00" fill="#ffffff">TreeBRLPolicy::BeliefState::~BeliefState()&#39;2</text>
<text text-anchor="middle" x="18828.5" y="-1964" font-family="Arial" font-size="10.00" fill="#ffffff">0.77%</text>
<text text-anchor="middle" x="18828.5" y="-1953" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18828.5" y="-1942" font-family="Arial" font-size="10.00" fill="#ffffff">720×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::~BeliefState()&#45;&gt;TreeBRLPolicy::BeliefState::~BeliefState()&#39;2 -->
<g id="edge64" class="edge">
<title>TreeBRLPolicy::BeliefState::~BeliefState()&#45;&gt;TreeBRLPolicy::BeliefState::~BeliefState()&#39;2</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18863.0904,-2037.7562C18857.5301,-2026.3019 18851.2237,-2013.3109 18845.5326,-2001.5871"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="18846.5754,-2000.93 18843.9448,-1998.3163 18844.3713,-2001.9999 18846.5754,-2000.93"/>
<text text-anchor="middle" x="18872.5" y="-2021" font-family="Arial" font-size="10.00" fill="#0d1074">0.77%</text>
<text text-anchor="middle" x="18872.5" y="-2010" font-family="Arial" font-size="10.00" fill="#0d1074">80×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) -->
<g id="node53" class="node">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)</title>
<polygon fill="#fd0d00" stroke="#fd0d00" points="19303.5,-1998 19001.5,-1998 19001.5,-1935 19303.5,-1935 19303.5,-1998"/>
<text text-anchor="middle" x="19152.5" y="-1986" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="19152.5" y="-1975" font-family="Arial" font-size="10.00" fill="#ffffff">TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)</text>
<text text-anchor="middle" x="19152.5" y="-1964" font-family="Arial" font-size="10.00" fill="#ffffff">98.79%</text>
<text text-anchor="middle" x="19152.5" y="-1953" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="19152.5" y="-1942" font-family="Arial" font-size="10.00" fill="#ffffff">10×</text>
</g>
<!-- TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int)&#45;&gt;TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int) -->
<g id="edge67" class="edge">
<title>TreeBRLPolicy::CalculateSparserBeliefTree(int, int, int)&#45;&gt;TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)</title>
<path fill="none" stroke="#fd0d00" stroke-width="3.95" d="M19140.0475,-2037.7562C19141.6728,-2028.4557 19143.4752,-2018.1421 19145.1923,-2008.3163"/>
<polygon fill="#fd0d00" stroke="#fd0d00" stroke-width="3.95" points="19148.6488,-2008.6651 19146.9399,-1998.3163 19141.8222,-2007.472 19148.6488,-2008.6651"/>
<text text-anchor="middle" x="19162.5" y="-2021" font-family="Arial" font-size="10.00" fill="#fd0d00">98.79%</text>
<text text-anchor="middle" x="19162.5" y="-2010" font-family="Arial" font-size="10.00" fill="#fd0d00">10×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;DiscreteMDPCounts::AddTransition(int, int, double, int) -->
<g id="edge53" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;DiscreteMDPCounts::AddTransition(int, int, double, int)</title>
<path fill="none" stroke="#0d1b77" stroke-width=".5" d="M19176.6268,-1934.7555C19184.2176,-1922.9207 19191.6263,-1908.9575 19195.5,-1895 19205.7562,-1858.0457 19196.896,-1749.5029 19191.2763,-1692.8435"/>
<polygon fill="#0d1b77" stroke="#0d1b77" stroke-width=".5" points="19192.478,-1692.5486 19190.911,-1689.1877 19190.0402,-1692.7922 19192.478,-1692.5486"/>
<text text-anchor="middle" x="19214.5" y="-1815" font-family="Arial" font-size="10.00" fill="#0d1b77">3.25%</text>
<text text-anchor="middle" x="19214.5" y="-1804" font-family="Arial" font-size="10.00" fill="#0d1b77">3200×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;DiscreteMDPCounts::Clone() const -->
<g id="edge54" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;DiscreteMDPCounts::Clone() const</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M19001.3573,-1939.3862C18912.4195,-1922.7013 18816.0235,-1903.0236 18809.5,-1895 18786.563,-1866.7887 18801.9749,-1824.8709 18818.383,-1795.3451"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="18819.5228,-1795.818 18820.1787,-1792.1682 18817.39,-1794.6124 18819.5228,-1795.818"/>
<text text-anchor="middle" x="18823.5" y="-1866.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.68%</text>
<text text-anchor="middle" x="18823.5" y="-1855.5" font-family="Arial" font-size="10.00" fill="#0d1074">80×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;DiscreteMDPCounts::GenerateTransition(int, int) const -->
<g id="edge55" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;DiscreteMDPCounts::GenerateTransition(int, int) const</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M19200.1131,-1934.9406C19236.5271,-1908.7035 19285.7262,-1868.4158 19317.5,-1823 19323.3276,-1814.6704 19328.3858,-1804.9331 19332.5385,-1795.6575"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="19333.7427,-1795.9618 19334.0272,-1792.2646 19331.4991,-1794.9774 19333.7427,-1795.9618"/>
<text text-anchor="middle" x="19324.5" y="-1866.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.55%</text>
<text text-anchor="middle" x="19324.5" y="-1855.5" font-family="Arial" font-size="10.00" fill="#0d0f73">3200×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;PolicyIteration::ComputeStateValues(double, int) -->
<g id="edge56" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;PolicyIteration::ComputeStateValues(double, int)</title>
<path fill="none" stroke="#0d287b" stroke-width=".5" d="M19242.3518,-1934.8705C19273.7431,-1923.1532 19308.9963,-1909.2351 19340.5,-1895 19409.4556,-1863.842 19485.8987,-1822.578 19536.9377,-1794.0105"/>
<polygon fill="#0d287b" stroke="#0d287b" stroke-width=".5" points="19537.808,-1794.9271 19540.2625,-1792.1474 19536.6103,-1792.7897 19537.808,-1794.9271"/>
<text text-anchor="middle" x="19480.5" y="-1866.5" font-family="Arial" font-size="10.00" fill="#0d287b">6.11%</text>
<text text-anchor="middle" x="19480.5" y="-1855.5" font-family="Arial" font-size="10.00" fill="#0d287b">40×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2 -->
<g id="node54" class="node">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2</title>
<polygon fill="#ed7403" stroke="#ed7403" points="19151,-1895 18842,-1895 18842,-1832 19151,-1832 19151,-1895"/>
<text text-anchor="middle" x="18996.5" y="-1883" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="18996.5" y="-1872" font-family="Arial" font-size="10.00" fill="#ffffff">TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2</text>
<text text-anchor="middle" x="18996.5" y="-1861" font-family="Arial" font-size="10.00" fill="#ffffff">87.91%</text>
<text text-anchor="middle" x="18996.5" y="-1850" font-family="Arial" font-size="10.00" fill="#ffffff">(0.09%)</text>
<text text-anchor="middle" x="18996.5" y="-1839" font-family="Arial" font-size="10.00" fill="#ffffff">720×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2 -->
<g id="edge57" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#45;&gt;TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2</title>
<path fill="none" stroke="#ed7403" stroke-width="3.52" d="M19104.4219,-1934.7562C19088.0348,-1923.9364 19069.5707,-1911.7454 19052.6094,-1900.5466"/>
<polygon fill="#ed7403" stroke="#ed7403" stroke-width="3.52" points="19054.0765,-1897.5728 19044.4193,-1895.139 19050.4509,-1903.0639 19054.0765,-1897.5728"/>
<text text-anchor="middle" x="19105.5" y="-1918" font-family="Arial" font-size="10.00" fill="#ed7403">87.91%</text>
<text text-anchor="middle" x="19105.5" y="-1907" font-family="Arial" font-size="10.00" fill="#ed7403">80×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::AddTransition(int, int, double, int) -->
<g id="edge58" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::AddTransition(int, int, double, int)</title>
<path fill="none" stroke="#0c9490" stroke-width="1.03" d="M19025.9252,-1831.764C19060.5558,-1794.4137 19117.923,-1732.5412 19154.1659,-1693.452"/>
<polygon fill="#0c9490" stroke="#0c9490" stroke-width="1.03" points="19155.8828,-1694.2256 19158.0414,-1689.2721 19153.2649,-1691.7983 19155.8828,-1694.2256"/>
<text text-anchor="middle" x="19137.5" y="-1763.5" font-family="Arial" font-size="10.00" fill="#0c9490">25.71%</text>
<text text-anchor="middle" x="19137.5" y="-1752.5" font-family="Arial" font-size="10.00" fill="#0c9490">25600×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::Clone() const -->
<g id="edge59" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::Clone() const</title>
<path fill="none" stroke="#0d2a7b" stroke-width=".5" d="M18948.7301,-1831.7562C18930.8198,-1819.8545 18910.4126,-1806.2935 18892.2423,-1794.2191"/>
<polygon fill="#0d2a7b" stroke="#0d2a7b" stroke-width=".5" points="18892.7052,-1793.0559 18889.1121,-1792.139 18891.3492,-1795.0965 18892.7052,-1793.0559"/>
<text text-anchor="middle" x="18947.5" y="-1815" font-family="Arial" font-size="10.00" fill="#0d2a7b">6.57%</text>
<text text-anchor="middle" x="18947.5" y="-1804" font-family="Arial" font-size="10.00" fill="#0d2a7b">640×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::GenerateTransition(int, int) const -->
<g id="edge60" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::GenerateTransition(int, int) const</title>
<path fill="none" stroke="#0d2078" stroke-width=".5" d="M19151.1631,-1845.1508C19179.3319,-1839.5748 19208.1308,-1832.3481 19234.5,-1823 19255.0914,-1815.7002 19276.3194,-1804.7276 19294.6266,-1794.0038"/>
<polygon fill="#0d2078" stroke="#0d2078" stroke-width=".5" points="19295.3826,-1794.9801 19297.7739,-1792.1459 19294.1371,-1792.8703 19295.3826,-1794.9801"/>
<text text-anchor="middle" x="19299" y="-1815" font-family="Arial" font-size="10.00" fill="#0d2078">4.37%</text>
<text text-anchor="middle" x="19299" y="-1804" font-family="Arial" font-size="10.00" fill="#0d2078">25600×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::generate() const -->
<g id="edge61" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;DiscreteMDPCounts::generate() const</title>
<path fill="none" stroke="#0d1375" stroke-width=".5" d="M18990.7998,-1831.764C18984.0641,-1794.2625 18972.8882,-1732.0398 18965.8723,-1692.9783"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width=".5" points="18967.0312,-1692.5004 18965.2066,-1689.2721 18964.6198,-1692.9336 18967.0312,-1692.5004"/>
<text text-anchor="middle" x="18997.5" y="-1763.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.51%</text>
<text text-anchor="middle" x="18997.5" y="-1752.5" font-family="Arial" font-size="10.00" fill="#0d1375">320×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;PolicyIteration::ComputeStateValues(double, int) -->
<g id="edge62" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;PolicyIteration::ComputeStateValues(double, int)</title>
<path fill="none" stroke="#0ab412" stroke-width="1.95" d="M19151.0932,-1846.123C19203.9769,-1839.6141 19263.4244,-1831.6728 19317.5,-1823 19386.3672,-1811.9548 19405.1673,-1808.3353 19474.9353,-1792.3451"/>
<polygon fill="#0ab412" stroke="#0ab412" stroke-width="1.95" points="19475.5749,-1794.7121 19481.8495,-1790.7584 19474.4788,-1789.9362 19475.5749,-1794.7121"/>
<text text-anchor="middle" x="19454.5" y="-1815" font-family="Arial" font-size="10.00" fill="#0ab412">48.75%</text>
<text text-anchor="middle" x="19454.5" y="-1804" font-family="Arial" font-size="10.00" fill="#0ab412">320×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2 -->
<g id="edge63" class="edge">
<title>TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2&#45;&gt;TreeBRLPolicy::BeliefState::SparserExpandAllActions(int, int, int)&#39;2</title>
<path fill="none" stroke="#ed7403" stroke-width="3.52" d="M19151.1702,-1868.8375C19156.78,-1867.4276 19160,-1865.6484 19160,-1863.5 19160,-1863.0972 19159.8868,-1862.7073 19159.6659,-1862.3304"/>
<polygon fill="#ed7403" stroke="#ed7403" stroke-width="3.52" points="19161.0585,-1859.3491 19151.1702,-1858.1625 19158.1602,-1865.2565 19161.0585,-1859.3491"/>
<text text-anchor="middle" x="19171" y="-1861" font-family="Arial" font-size="10.00" fill="#ed7403">640×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::~BeliefState()&#39;2&#45;&gt;DiscreteMDPCounts::~DiscreteMDPCounts() -->
<g id="edge65" class="edge">
<title>TreeBRLPolicy::BeliefState::~BeliefState()&#39;2&#45;&gt;DiscreteMDPCounts::~DiscreteMDPCounts()</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18771.7367,-1934.8966C18750.0723,-1922.8349 18725.3175,-1909.0524 18703.3727,-1896.8345"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="18703.8099,-1895.6759 18700.156,-1895.0436 18702.6181,-1897.8165 18703.8099,-1895.6759"/>
<text text-anchor="middle" x="18767.5" y="-1918" font-family="Arial" font-size="10.00" fill="#0d1074">0.73%</text>
<text text-anchor="middle" x="18767.5" y="-1907" font-family="Arial" font-size="10.00" fill="#0d1074">720×</text>
</g>
<!-- TreeBRLPolicy::BeliefState::~BeliefState()&#39;2&#45;&gt;TreeBRLPolicy::BeliefState::~BeliefState()&#39;2 -->
<g id="edge66" class="edge">
<title>TreeBRLPolicy::BeliefState::~BeliefState()&#39;2&#45;&gt;TreeBRLPolicy::BeliefState::~BeliefState()&#39;2</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M18933.2775,-1972.6563C18938.7568,-1971.14 18942,-1969.0879 18942,-1966.5 18942,-1964.5591 18940.1757,-1962.9195 18936.952,-1961.5814"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="18936.9855,-1960.3001 18933.2775,-1960.3437 18936.2033,-1962.6219 18936.9855,-1960.3001"/>
<text text-anchor="middle" x="18953" y="-1964" font-family="Arial" font-size="10.00" fill="#0d1074">640×</text>
</g>
<!-- _ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_ -->
<g id="node56" class="node">
<title>_ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_</title>
<polygon fill="#0d1676" stroke="#0d1676" points="27904,-516 27237,-516 27237,-453 27904,-453 27904,-516"/>
<text text-anchor="middle" x="27570.5" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="27570.5" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">_ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_</text>
<text text-anchor="middle" x="27570.5" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">2.31%</text>
<text text-anchor="middle" x="27570.5" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.17%)</text>
<text text-anchor="middle" x="27570.5" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">222831×</text>
</g>
<!-- _ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_&#45;&gt;mcount -->
<g id="edge68" class="edge">
<title>_ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M27853.6656,-452.9842C27932.489,-441.379 28000.1553,-427.5021 28012.5,-413 28027.4085,-395.4861 28028.1564,-222.8487 28012.5,-206 27884.4847,-68.2358 27778.3978,-182.8305 27590.5,-175 26746.2843,-139.8178 23923.1826,-135.0135 23566.6243,-134.5439"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.5445,-133.3189 23563.0429,-134.5392 23566.5412,-135.7688 23566.5445,-133.3189"/>
<text text-anchor="middle" x="28042.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.45%</text>
<text text-anchor="middle" x="28042.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d0f73">222831×</text>
</g>
<!-- std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp; std::forward&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;(std::remove_reference&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;::type&amp;) -->
<g id="node57" class="node">
<title>std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp; std::forward&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;(std::remove_reference&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;::type&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="27924,-341 26911,-341 26911,-278 27924,-278 27924,-341"/>
<text text-anchor="middle" x="27417.5" y="-329" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="27417.5" y="-318" font-family="Arial" font-size="10.00" fill="#ffffff">std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp; std::forward&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;(std::remove_reference&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;::type&amp;)</text>
<text text-anchor="middle" x="27417.5" y="-307" font-family="Arial" font-size="10.00" fill="#ffffff">0.56%</text>
<text text-anchor="middle" x="27417.5" y="-296" font-family="Arial" font-size="10.00" fill="#ffffff">(0.11%)</text>
<text text-anchor="middle" x="27417.5" y="-285" font-family="Arial" font-size="10.00" fill="#ffffff">222831×</text>
</g>
<!-- _ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_&#45;&gt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp; std::forward&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;(std::remove_reference&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;::type&amp;) -->
<g id="edge69" class="edge">
<title>_ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_&#45;&gt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp; std::forward&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;(std::remove_reference&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;::type&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M27236.77,-455.9959C27142.5749,-444.5816 27061.3862,-430.0554 27046.5,-413 27028.088,-391.905 27027.8061,-370.8456 27046.5,-350 27048.9861,-347.2278 27054.0173,-344.6269 27061.1164,-342.1888"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="27061.8144,-343.2503 27064.7655,-341.005 27061.0583,-340.9199 27061.8144,-343.2503"/>
<text text-anchor="middle" x="27167.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="27167.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d0f73">222831×</text>
</g>
<!-- std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;) -->
<g id="node58" class="node">
<title>std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="28008,-413 27051,-413 27051,-350 28008,-350 28008,-413"/>
<text text-anchor="middle" x="27529.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="27529.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)</text>
<text text-anchor="middle" x="27529.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">1.13%</text>
<text text-anchor="middle" x="27529.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.12%)</text>
<text text-anchor="middle" x="27529.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">222831×</text>
</g>
<!-- _ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_&#45;&gt;std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;) -->
<g id="edge70" class="edge">
<title>_ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_&#45;&gt;std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M27557.8641,-452.7562C27553.3046,-441.3019 27548.1335,-428.3109 27543.4667,-416.5871"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="27544.5974,-416.1151 27542.1648,-413.3163 27542.3211,-417.0213 27544.5974,-416.1151"/>
<text text-anchor="middle" x="27572.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1174">1.13%</text>
<text text-anchor="middle" x="27572.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1174">222831×</text>
</g>
<!-- std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp; std::forward&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;(std::remove_reference&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;::type&amp;)&#45;&gt;mcount -->
<g id="edge153" class="edge">
<title>std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp; std::forward&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;(std::remove_reference&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;&gt;::type&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M27140.1476,-277.9535C27123.5733,-275.0193 27109.5632,-272.0137 27099.5,-269 27008.4826,-241.7423 26999.93,-196.9965 26907.5,-175 26821.9411,-154.6387 23929.6139,-136.8692 23566.7635,-134.7181"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.6268,-133.4924 23563.1196,-134.6965 23566.6122,-135.9423 23566.6268,-133.4924"/>
<text text-anchor="middle" x="27118.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.45%</text>
<text text-anchor="middle" x="27118.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f73">222831×</text>
</g>
<!-- std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)&#45;&gt;mcount -->
<g id="edge157" class="edge">
<title>std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M27960.3309,-349.9776C27968.634,-347.2288 27974.5369,-344.243 27977.5,-341 27996.3867,-320.3289 27989.0481,-303.5077 27977.5,-278 27957.4973,-233.8175 27940.4278,-224.2672 27895.5,-206 27648.9643,-105.7613 27563.5045,-183.3208 27297.5,-175 26516.1192,-150.5578 23909.618,-136.4544 23566.819,-134.6888"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.6372,-133.4629 23563.131,-134.6698 23566.6246,-135.9129 23566.6372,-133.4629"/>
<text text-anchor="middle" x="27991.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.45%</text>
<text text-anchor="middle" x="27991.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f73">222831×</text>
</g>
<!-- std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)&#45;&gt;StateAction&lt;int, int&gt; const&amp; std::__pair_get&lt;0ul&gt;::__get&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;) -->
<g id="edge156" class="edge">
<title>std::tuple_element&lt;0ul, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::type&amp; std::get&lt;0ul, StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)&#45;&gt;StateAction&lt;int, int&gt; const&amp; std::__pair_get&lt;0ul&gt;::__get&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;(std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M27907.5766,-349.9962C27916.3771,-347.231 27922.5764,-344.2379 27925.5,-341 27944.2648,-320.2182 27944.2982,-298.7516 27925.5,-278 27921.269,-273.3294 27910.4168,-269.1766 27894.8513,-265.4876"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="27894.9249,-264.2477 27891.2396,-264.6586 27894.3768,-266.6356 27894.9249,-264.2477"/>
<text text-anchor="middle" x="27958.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.56%</text>
<text text-anchor="middle" x="27958.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d0f73">222831×</text>
</g>
<!-- __gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_addr() -->
<g id="node59" class="node">
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_addr()</title>
<polygon fill="#0d1274" stroke="#0d1274" points="22624.5,-269 22164.5,-269 22164.5,-206 22624.5,-206 22624.5,-269"/>
<text text-anchor="middle" x="22394.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="22394.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_addr()</text>
<text text-anchor="middle" x="22394.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">1.15%</text>
<text text-anchor="middle" x="22394.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.23%)</text>
<text text-anchor="middle" x="22394.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">456514×</text>
</g>
<!-- __gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_addr()&#45;&gt;mcount -->
<g id="edge71" class="edge">
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_addr()&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M22478.0204,-205.93C22513.1593,-194.0554 22554.8012,-181.7935 22593.5,-175 22770.5556,-143.918 23339.6693,-136.317 23491.8063,-134.8206"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="23492.2665,-136.0413 23495.7544,-134.7823 23492.2426,-133.5914 23492.2665,-136.0413"/>
<text text-anchor="middle" x="22612.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d1174">0.92%</text>
<text text-anchor="middle" x="22612.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d1174">456514×</text>
</g>
<!-- __gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr() -->
<g id="node60" class="node">
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr()</title>
<polygon fill="#0d1676" stroke="#0d1676" points="22497.5,-413 22045.5,-413 22045.5,-350 22497.5,-350 22497.5,-413"/>
<text text-anchor="middle" x="22271.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="22271.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr()</text>
<text text-anchor="middle" x="22271.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">2.32%</text>
<text text-anchor="middle" x="22271.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.25%)</text>
<text text-anchor="middle" x="22271.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">456514×</text>
</g>
<!-- __gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr()&#45;&gt;mcount -->
<g id="edge73" class="edge">
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr()&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M22212.7847,-349.9195C22153.7436,-314.2569 22077.4391,-254.835 22122.5,-206 22170.3184,-154.1765 23274.0255,-137.6967 23492.2229,-134.9402"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="23492.504,-136.1619 23495.9883,-134.8929 23492.4732,-133.7121 23492.504,-136.1619"/>
<text text-anchor="middle" x="22141.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d1174">0.92%</text>
<text text-anchor="middle" x="22141.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d1174">456514×</text>
</g>
<!-- __gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr()&#45;&gt;__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_addr() -->
<g id="edge72" class="edge">
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr()&#45;&gt;__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_addr()</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M22298.4929,-349.8986C22318.1997,-326.8272 22344.8957,-295.5733 22365.1348,-271.8787"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="22366.2283,-272.4847 22367.5701,-269.0277 22364.3654,-270.8934 22366.2283,-272.4847"/>
<text text-anchor="middle" x="22376.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.15%</text>
<text text-anchor="middle" x="22376.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1274">456514×</text>
</g>
<!-- _int_malloc -->
<g id="node62" class="node">
<title>_int_malloc</title>
<polygon fill="#0d1074" stroke="#0d1074" points="34389,-907 34322,-907 34322,-844 34389,-844 34389,-907"/>
<text text-anchor="middle" x="34355.5" y="-895" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.27.so</text>
<text text-anchor="middle" x="34355.5" y="-884" font-family="Arial" font-size="10.00" fill="#ffffff">_int_malloc</text>
<text text-anchor="middle" x="34355.5" y="-873" font-family="Arial" font-size="10.00" fill="#ffffff">0.86%</text>
<text text-anchor="middle" x="34355.5" y="-862" font-family="Arial" font-size="10.00" fill="#ffffff">(0.68%)</text>
<text text-anchor="middle" x="34355.5" y="-851" font-family="Arial" font-size="10.00" fill="#ffffff">93953×</text>
</g>
<!-- free -->
<g id="node63" class="node">
<title>free</title>
<polygon fill="#0d4582" stroke="#0d4582" points="32541,-1051 32474,-1051 32474,-988 32541,-988 32541,-1051"/>
<text text-anchor="middle" x="32507.5" y="-1039" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.27.so</text>
<text text-anchor="middle" x="32507.5" y="-1028" font-family="Arial" font-size="10.00" fill="#ffffff">free</text>
<text text-anchor="middle" x="32507.5" y="-1017" font-family="Arial" font-size="10.00" fill="#ffffff">11.98%</text>
<text text-anchor="middle" x="32507.5" y="-1006" font-family="Arial" font-size="10.00" fill="#ffffff">(11.97%)</text>
<text text-anchor="middle" x="32507.5" y="-995" font-family="Arial" font-size="10.00" fill="#ffffff">3982806×</text>
</g>
<!-- malloc -->
<g id="node64" class="node">
<title>malloc</title>
<polygon fill="#0d307d" stroke="#0d307d" points="34389,-1051 34322,-1051 34322,-988 34389,-988 34389,-1051"/>
<text text-anchor="middle" x="34355.5" y="-1039" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.27.so</text>
<text text-anchor="middle" x="34355.5" y="-1028" font-family="Arial" font-size="10.00" fill="#ffffff">malloc</text>
<text text-anchor="middle" x="34355.5" y="-1017" font-family="Arial" font-size="10.00" fill="#ffffff">7.79%</text>
<text text-anchor="middle" x="34355.5" y="-1006" font-family="Arial" font-size="10.00" fill="#ffffff">(6.99%)</text>
<text text-anchor="middle" x="34355.5" y="-995" font-family="Arial" font-size="10.00" fill="#ffffff">3975685×</text>
</g>
<!-- malloc&#45;&gt;_int_malloc -->
<g id="edge77" class="edge">
<title>malloc&#45;&gt;_int_malloc</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M34355.5,-987.8986C34355.5,-965.1085 34355.5,-934.3344 34355.5,-910.749"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="34356.7251,-910.5277 34355.5,-907.0277 34354.2751,-910.5277 34356.7251,-910.5277"/>
<text text-anchor="middle" x="34372" y="-950.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.81%</text>
<text text-anchor="middle" x="34372" y="-939.5" font-family="Arial" font-size="10.00" fill="#0d1074">86506×</text>
</g>
<!-- operator delete(void*)&#45;&gt;free -->
<g id="edge79" class="edge">
<title>operator delete(void*)&#45;&gt;free</title>
<path fill="none" stroke="#0d4482" stroke-width=".5" d="M32507.5,-1131.8986C32507.5,-1109.1085 32507.5,-1078.3344 32507.5,-1054.749"/>
<polygon fill="#0d4482" stroke="#0d4482" stroke-width=".5" points="32508.7251,-1054.5277 32507.5,-1051.0277 32506.2751,-1054.5277 32508.7251,-1054.5277"/>
<text text-anchor="middle" x="32529" y="-1094.5" font-family="Arial" font-size="10.00" fill="#0d4482">11.83%</text>
<text text-anchor="middle" x="32529" y="-1083.5" font-family="Arial" font-size="10.00" fill="#0d4482">3934370×</text>
</g>
<!-- operator new(unsigned long)&#45;&gt;malloc -->
<g id="edge80" class="edge">
<title>operator new(unsigned long)&#45;&gt;malloc</title>
<path fill="none" stroke="#0d2f7d" stroke-width=".5" d="M34355.5,-1131.8986C34355.5,-1109.1085 34355.5,-1078.3344 34355.5,-1054.749"/>
<polygon fill="#0d2f7d" stroke="#0d2f7d" stroke-width=".5" points="34356.7251,-1054.5277 34355.5,-1051.0277 34354.2751,-1054.5277 34356.7251,-1054.5277"/>
<text text-anchor="middle" x="34377" y="-1094.5" font-family="Arial" font-size="10.00" fill="#0d2f7d">7.68%</text>
<text text-anchor="middle" x="34377" y="-1083.5" font-family="Arial" font-size="10.00" fill="#0d2f7d">3934589×</text>
</g>
<!-- void std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1}&gt;(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1} const&amp;) -->
<g id="node68" class="node">
<title>void std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1}&gt;(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1} const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="12721,-1195 0,-1195 0,-1132 12721,-1132 12721,-1195"/>
<text text-anchor="middle" x="6360.5" y="-1183" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="6360.5" y="-1172" font-family="Arial" font-size="10.00" fill="#ffffff">void std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1}&gt;(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1} const&amp;)</text>
<text text-anchor="middle" x="6360.5" y="-1161" font-family="Arial" font-size="10.00" fill="#ffffff">0.52%</text>
<text text-anchor="middle" x="6360.5" y="-1150" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="6360.5" y="-1139" font-family="Arial" font-size="10.00" fill="#ffffff">730×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)&#45;&gt;void std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1}&gt;(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1} const&amp;) -->
<g id="edge81" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)&#45;&gt;void std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1}&gt;(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign(std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*)#1} const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M8082.9664,-1275.9876C7716.254,-1252.039 7213.9567,-1219.2359 6846.4145,-1195.2332"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="6846.4803,-1194.01 6842.9079,-1195.0042 6846.3206,-1196.4548 6846.4803,-1194.01"/>
<text text-anchor="middle" x="7928.5" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.52%</text>
<text text-anchor="middle" x="7928.5" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d0f73">730×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="node69" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<polygon fill="#0d1c77" stroke="#0d1c77" points="22780.5,-1123 20564.5,-1123 20564.5,-1060 22780.5,-1060 22780.5,-1123"/>
<text text-anchor="middle" x="21672.5" y="-1111" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="21672.5" y="-1100" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const</text>
<text text-anchor="middle" x="21672.5" y="-1089" font-family="Arial" font-size="10.00" fill="#ffffff">3.48%</text>
<text text-anchor="middle" x="21672.5" y="-1078" font-family="Arial" font-size="10.00" fill="#ffffff">(0.26%)</text>
<text text-anchor="middle" x="21672.5" y="-1067" font-family="Arial" font-size="10.00" fill="#ffffff">243966×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;mcount -->
<g id="edge82" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M21308.7452,-1059.9804C21292.3956,-1057.2312 21276.2508,-1054.2445 21260.5,-1051 21112.025,-1020.416 20935.5,-1099.0922 20935.5,-947.5 20935.5,-947.5 20935.5,-947.5 20935.5,-536 20935.5,-498.8949 20952.9756,-478.9967 20926.5,-453 20910.5797,-437.3677 20845.8441,-455.119 20826.5,-444 20811.8526,-435.5807 20809.9653,-428.9863 20804.5,-413 20774.6802,-325.7752 20755.2379,-273.9766 20817.5,-206 20848.3555,-172.3125 20870.4075,-182.32 20915.5,-175 21048.4713,-153.4143 23183.5596,-137.0292 23492.3845,-134.7673"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.4424,-135.992 23495.9333,-134.7413 23492.4244,-133.5421 23492.4424,-135.992"/>
<text text-anchor="middle" x="20954.5" y="-590.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="20954.5" y="-579.5" font-family="Arial" font-size="10.00" fill="#0d0f73">243966×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const -->
<g id="node70" class="node">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const</title>
<polygon fill="#0d1876" stroke="#0d1876" points="22445,-516 20950,-516 20950,-453 22445,-453 22445,-516"/>
<text text-anchor="middle" x="21697.5" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="21697.5" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const</text>
<text text-anchor="middle" x="21697.5" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">2.73%</text>
<text text-anchor="middle" x="21697.5" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.27%)</text>
<text text-anchor="middle" x="21697.5" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">243966×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const -->
<g id="edge83" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const</title>
<path fill="none" stroke="#0d1876" stroke-width=".5" d="M21527.6393,-1059.9133C21339.4627,-1015.6064 21027.0676,-929.7366 20960.5,-835 20944.4022,-812.0902 20944.7032,-795.1184 20960.5,-772 21030.9002,-668.9702 21372.6917,-567.3501 21565.1252,-517.0496"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width=".5" points="21565.7175,-518.1612 21568.7947,-516.0919 21565.0987,-515.7906 21565.7175,-518.1612"/>
<text text-anchor="middle" x="20979.5" y="-806.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.73%</text>
<text text-anchor="middle" x="20979.5" y="-795.5" font-family="Arial" font-size="10.00" fill="#0d1876">243966×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const&#45;&gt;mcount -->
<g id="edge113" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M20971.2177,-452.9791C20904.8497,-449.3027 20860.278,-446.115 20855.5,-444 20837.6828,-436.1131 20833.4158,-430.3252 20824.5,-413 20810.7184,-386.2198 20794.3066,-302.0023 20812.5,-278 20914.8364,-142.9885 21011.875,-199.5499 21179.5,-175 21417.4132,-140.1558 23209.4574,-135.1421 23492.0355,-134.5663"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.1913,-135.791 23495.6888,-134.5589 23492.1863,-133.341 23492.1913,-135.791"/>
<text text-anchor="middle" x="20831.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="20831.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d0f73">243966×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const -->
<g id="node87" class="node">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const</title>
<polygon fill="#0d1475" stroke="#0d1475" points="22036.5,-413 20844.5,-413 20844.5,-350 22036.5,-350 22036.5,-413"/>
<text text-anchor="middle" x="21440.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="21440.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const</text>
<text text-anchor="middle" x="21440.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">1.64%</text>
<text text-anchor="middle" x="21440.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.19%)</text>
<text text-anchor="middle" x="21440.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">319766×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const -->
<g id="edge114" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M21618.645,-452.8966C21588.1791,-440.6866 21553.3136,-426.7132 21522.5518,-414.3846"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="21522.9105,-413.2086 21519.2059,-413.0436 21521.999,-415.4828 21522.9105,-413.2086"/>
<text text-anchor="middle" x="21610.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1274">1.25%</text>
<text text-anchor="middle" x="21610.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1274">243966×</text>
</g>
<!-- std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const -->
<g id="node88" class="node">
<title>std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const</title>
<polygon fill="#0d1174" stroke="#0d1174" points="21228.5,-341 20854.5,-341 20854.5,-278 21228.5,-278 21228.5,-341"/>
<text text-anchor="middle" x="21041.5" y="-329" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="21041.5" y="-318" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const</text>
<text text-anchor="middle" x="21041.5" y="-307" font-family="Arial" font-size="10.00" fill="#ffffff">0.94%</text>
<text text-anchor="middle" x="21041.5" y="-296" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="21041.5" y="-285" font-family="Arial" font-size="10.00" fill="#ffffff">319772×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const&#45;&gt;std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const -->
<g id="edge115" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long, unsigned long) const&#45;&gt;std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M20994.4286,-452.9504C20914.7504,-443.0578 20856.2003,-430.0647 20840.5,-413 20821.5419,-392.3944 20822.7638,-371.6663 20840.5,-350 20843.0191,-346.9227 20846.6296,-344.0741 20851.1219,-341.4376"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="20851.8971,-342.4091 20854.3702,-339.6461 20850.7138,-340.2638 20851.8971,-342.4091"/>
<text text-anchor="middle" x="20948.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1074">0.72%</text>
<text text-anchor="middle" x="20948.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1074">243966×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const -->
<g id="node71" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const</title>
<polygon fill="#0d1174" stroke="#0d1174" points="23434.5,-835 21002.5,-835 21002.5,-772 23434.5,-772 23434.5,-835"/>
<text text-anchor="middle" x="22218.5" y="-823" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="22218.5" y="-812" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const</text>
<text text-anchor="middle" x="22218.5" y="-801" font-family="Arial" font-size="10.00" fill="#ffffff">1.06%</text>
<text text-anchor="middle" x="22218.5" y="-790" font-family="Arial" font-size="10.00" fill="#ffffff">(0.06%)</text>
<text text-anchor="middle" x="22218.5" y="-779" font-family="Arial" font-size="10.00" fill="#ffffff">73062×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*, unsigned long) const -->
<g id="node72" class="node">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*, unsigned long) const</title>
<polygon fill="#0d1074" stroke="#0d1074" points="23205.5,-691 21467.5,-691 21467.5,-628 23205.5,-628 23205.5,-691"/>
<text text-anchor="middle" x="22336.5" y="-679" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="22336.5" y="-668" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*, unsigned long) const</text>
<text text-anchor="middle" x="22336.5" y="-657" font-family="Arial" font-size="10.00" fill="#ffffff">0.85%</text>
<text text-anchor="middle" x="22336.5" y="-646" font-family="Arial" font-size="10.00" fill="#ffffff">(0.08%)</text>
<text text-anchor="middle" x="22336.5" y="-635" font-family="Arial" font-size="10.00" fill="#ffffff">75800×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*, unsigned long) const -->
<g id="edge84" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*, unsigned long) const</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M22244.3956,-771.8986C22263.3013,-748.8272 22288.9122,-717.5733 22308.3285,-693.8787"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="22309.3939,-694.5113 22310.6648,-691.0277 22307.4989,-692.9584 22309.3939,-694.5113"/>
<text text-anchor="middle" x="22318" y="-734.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.82%</text>
<text text-anchor="middle" x="22318" y="-723.5" font-family="Arial" font-size="10.00" fill="#0d1074">73062×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*, unsigned long) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const -->
<g id="edge116" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt; const*, unsigned long) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M22376.2282,-627.7623C22425.9134,-584.3808 22498.8079,-505.9256 22449.5,-453 22440.6864,-443.5398 22226.3298,-427.646 21997.4624,-413.2428"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="21997.3234,-412.0067 21993.7534,-413.0096 21997.1696,-414.4519 21997.3234,-412.0067"/>
<text text-anchor="middle" x="22475" y="-539" font-family="Arial" font-size="10.00" fill="#0d0e73">0.39%</text>
<text text-anchor="middle" x="22475" y="-528" font-family="Arial" font-size="10.00" fill="#0d0e73">75800×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="node73" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<polygon fill="#0d4d84" stroke="#0d4d84" points="25104,-1051 22805,-1051 22805,-988 25104,-988 25104,-1051"/>
<text text-anchor="middle" x="23954.5" y="-1039" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="23954.5" y="-1028" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const</text>
<text text-anchor="middle" x="23954.5" y="-1017" font-family="Arial" font-size="10.00" fill="#ffffff">13.47%</text>
<text text-anchor="middle" x="23954.5" y="-1006" font-family="Arial" font-size="10.00" fill="#ffffff">(0.51%)</text>
<text text-anchor="middle" x="23954.5" y="-995" font-family="Arial" font-size="10.00" fill="#ffffff">243484×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;mcount -->
<g id="edge85" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M23692.3071,-987.9513C23589.7576,-970.1589 23488.532,-943.9248 23454.5,-907 23413.4363,-862.4458 23466.9595,-823.7842 23435.5,-772 23308.5897,-563.0982 23216.7733,-537.7344 22987.5,-453 22964.1135,-444.3569 22557.326,-431.3989 22540.5,-413 22521.6039,-392.3375 22521.7986,-370.8389 22540.5,-350 22552.8914,-336.1923 22606.4219,-348.2482 22623.5,-341 22709.7743,-304.3839 22699.0038,-242.089 22785.5,-206 22915.3522,-151.8214 23359.1017,-138.1252 23491.7522,-135.2036"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.1129,-136.4211 23495.5854,-135.1203 23492.0596,-133.9717 23492.1129,-136.4211"/>
<text text-anchor="middle" x="23235.5" y="-539" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="23235.5" y="-528" font-family="Arial" font-size="10.00" fill="#0d0f73">243484×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const -->
<g id="edge86" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M23474.1481,-987.9724C23450.568,-985.2199 23427.2498,-982.2353 23404.5,-979 23270.9071,-960.0017 23240.5496,-938.4898 23107.5,-916 22912.9724,-883.1184 22693.0183,-855.2074 22520.564,-835.4113"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="22520.6266,-834.1855 22517.0098,-835.0037 22520.3474,-836.6196 22520.6266,-834.1855"/>
<text text-anchor="middle" x="23421" y="-950.5" font-family="Arial" font-size="10.00" fill="#0d1174">0.99%</text>
<text text-anchor="middle" x="23421" y="-939.5" font-family="Arial" font-size="10.00" fill="#0d1174">68275×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const -->
<g id="node74" class="node">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const</title>
<polygon fill="#0d4081" stroke="#0d4081" points="25632,-907 23459,-907 23459,-844 25632,-844 25632,-907"/>
<text text-anchor="middle" x="24545.5" y="-895" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="24545.5" y="-884" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const</text>
<text text-anchor="middle" x="24545.5" y="-873" font-family="Arial" font-size="10.00" fill="#ffffff">11.13%</text>
<text text-anchor="middle" x="24545.5" y="-862" font-family="Arial" font-size="10.00" fill="#ffffff">(0.45%)</text>
<text text-anchor="middle" x="24545.5" y="-851" font-family="Arial" font-size="10.00" fill="#ffffff">293675×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const -->
<g id="edge87" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const</title>
<path fill="none" stroke="#0d4081" stroke-width=".5" d="M24083.8321,-987.9876C24181.2785,-964.2443 24314.4449,-931.7977 24412.7204,-907.8524"/>
<polygon fill="#0d4081" stroke="#0d4081" stroke-width=".5" points="24413.0911,-909.023 24416.2016,-907.0042 24412.511,-906.6426 24413.0911,-909.023"/>
<text text-anchor="middle" x="24389.5" y="-950.5" font-family="Arial" font-size="10.00" fill="#0d4081">11.13%</text>
<text text-anchor="middle" x="24389.5" y="-939.5" font-family="Arial" font-size="10.00" fill="#0d4081">293675×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;mcount -->
<g id="edge132" class="edge">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M25632.2933,-862.5621C26795.8807,-846.1077 28483.6452,-813.6001 28535.5,-763 28584.9072,-714.7883 28519.5708,-511.9451 28555.5,-453 28559.5465,-446.3614 28566.6695,-450.7655 28570.5,-444 28574.3099,-437.2709 28578.0355,-423.0402 28568.5,-350 28564.2436,-317.3968 28568.519,-306.1326 28551.5,-278 28526.2228,-236.2166 28512.0886,-228.0188 28468.5,-206 28412.3908,-177.6564 28392.9487,-182.1946 28330.5,-175 28079.6494,-146.0999 24001.0677,-135.6219 23566.8512,-134.5867"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23566.6212,-133.3612 23563.1182,-134.5778 23566.6153,-135.8112 23566.6212,-133.3612"/>
<text text-anchor="middle" x="28574.5" y="-487.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="28574.5" y="-476.5" font-family="Arial" font-size="10.00" fill="#0d0f74">293675×</text>
</g>
<!-- std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) -->
<g id="node84" class="node">
<title>std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</title>
<polygon fill="#0d2c7c" stroke="#0d2c7c" points="28531,-763 26658,-763 26658,-700 28531,-700 28531,-763"/>
<text text-anchor="middle" x="27594.5" y="-751" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="27594.5" y="-740" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</text>
<text text-anchor="middle" x="27594.5" y="-729" font-family="Arial" font-size="10.00" fill="#ffffff">7.08%</text>
<text text-anchor="middle" x="27594.5" y="-718" font-family="Arial" font-size="10.00" fill="#ffffff">(0.57%)</text>
<text text-anchor="middle" x="27594.5" y="-707" font-family="Arial" font-size="10.00" fill="#ffffff">293675×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) -->
<g id="edge133" class="edge">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</title>
<path fill="none" stroke="#0d2c7c" stroke-width=".5" d="M25212.7313,-843.9876C25720.1814,-820.0214 26415.3895,-787.1877 26923.7137,-763.1803"/>
<polygon fill="#0d2c7c" stroke="#0d2c7c" stroke-width=".5" points="26924.0043,-764.393 26927.4425,-763.0042 26923.8886,-761.9458 26924.0043,-764.393"/>
<text text-anchor="middle" x="26712.5" y="-806.5" font-family="Arial" font-size="10.00" fill="#0d2c7c">7.08%</text>
<text text-anchor="middle" x="26712.5" y="-795.5" font-family="Arial" font-size="10.00" fill="#0d2c7c">293675×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const -->
<g id="node89" class="node">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const</title>
<polygon fill="#0d1375" stroke="#0d1375" points="23756,-413 22545,-413 22545,-350 23756,-350 23756,-413"/>
<text text-anchor="middle" x="23150.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="23150.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const</text>
<text text-anchor="middle" x="23150.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">1.50%</text>
<text text-anchor="middle" x="23150.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.18%)</text>
<text text-anchor="middle" x="23150.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">293675×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const -->
<g id="edge134" class="edge">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const</title>
<path fill="none" stroke="#0d1375" stroke-width=".5" d="M24456.3808,-843.941C24205.9243,-755.2488 23497.4895,-504.3766 23242.9831,-414.2503"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width=".5" points="23243.3478,-413.0799 23239.6396,-413.0663 23242.5299,-415.3894 23243.3478,-413.0799"/>
<text text-anchor="middle" x="23829.5" y="-590.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.50%</text>
<text text-anchor="middle" x="23829.5" y="-579.5" font-family="Arial" font-size="10.00" fill="#0d1375">293675×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const -->
<g id="node96" class="node">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const</title>
<polygon fill="#0d1375" stroke="#0d1375" points="25318,-413 23765,-413 23765,-350 25318,-350 25318,-413"/>
<text text-anchor="middle" x="24541.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="24541.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const</text>
<text text-anchor="middle" x="24541.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">1.50%</text>
<text text-anchor="middle" x="24541.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.18%)</text>
<text text-anchor="middle" x="24541.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">293675×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const -->
<g id="edge135" class="edge">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals(StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) const&#45;&gt;std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const</title>
<path fill="none" stroke="#0d1375" stroke-width=".5" d="M24544.8061,-843.7572C24544.2285,-814.5807 24543.5,-770.1287 24543.5,-731.5 24543.5,-731.5 24543.5,-731.5 24543.5,-484.5 24543.5,-462.0316 24543.0184,-436.8114 24542.5278,-416.9507"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width=".5" points="24543.7425,-416.5205 24542.4297,-413.0525 24541.2933,-416.5822 24543.7425,-416.5205"/>
<text text-anchor="middle" x="24562.5" y="-590.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.50%</text>
<text text-anchor="middle" x="24562.5" y="-579.5" font-family="Arial" font-size="10.00" fill="#0d1375">293675×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="node75" class="node">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<polygon fill="#0c5285" stroke="#0c5285" points="25088,-1195 22821,-1195 22821,-1132 25088,-1132 25088,-1195"/>
<text text-anchor="middle" x="23954.5" y="-1183" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="23954.5" y="-1172" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const</text>
<text text-anchor="middle" x="23954.5" y="-1161" font-family="Arial" font-size="10.00" fill="#ffffff">14.30%</text>
<text text-anchor="middle" x="23954.5" y="-1150" font-family="Arial" font-size="10.00" fill="#ffffff">(0.34%)</text>
<text text-anchor="middle" x="23954.5" y="-1139" font-family="Arial" font-size="10.00" fill="#ffffff">243484×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;mcount -->
<g id="edge88" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M24349.8991,-1131.9862C25051.3701,-1075.634 26559.5812,-952.4743 27831.5,-835 28151.7331,-805.4233 28322.8513,-989.1499 28551.5,-763 28617.3128,-697.9065 28551.0374,-645.5433 28574.5,-556 28579.3962,-537.3141 28586.6285,-534.6924 28591.5,-516 28600.8575,-480.0942 28600.5,-470.1051 28600.5,-433 28600.5,-433 28600.5,-433 28600.5,-237.5 28600.5,-219.1127 28418.6577,-177.9794 28396.5,-175 28142.7371,-140.8777 24005.4877,-135.0629 23567.031,-134.5418"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.7635,-133.3166 23563.262,-134.5373 23566.7605,-135.7666 23566.7635,-133.3166"/>
<text text-anchor="middle" x="28593.5" y="-590.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="28593.5" y="-579.5" font-family="Arial" font-size="10.00" fill="#0d0f73">243484×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="edge89" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<path fill="none" stroke="#0d4d84" stroke-width=".54" d="M23954.5,-1131.8986C23954.5,-1109.1085 23954.5,-1078.3344 23954.5,-1054.749"/>
<polygon fill="#0d4d84" stroke="#0d4d84" stroke-width=".54" points="23955.7951,-1054.7277 23954.5,-1051.0277 23953.2051,-1054.7277 23955.7951,-1054.7277"/>
<text text-anchor="middle" x="23973.5" y="-1094.5" font-family="Arial" font-size="10.00" fill="#0d4d84">13.47%</text>
<text text-anchor="middle" x="23973.5" y="-1083.5" font-family="Arial" font-size="10.00" fill="#0d4d84">243484×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const&#45;&gt;mcount -->
<g id="edge90" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M20410.9398,-452.9944C20480.7432,-443.0566 20540.3141,-430.0367 20573.5,-413 20650.2049,-373.6219 20646.2691,-333.4895 20703.5,-269 20740.2988,-227.534 20735.2026,-198.3185 20785.5,-175 20849.8147,-145.1829 23167.5255,-135.798 23491.9355,-134.6294"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.1643,-135.8537 23495.6599,-134.6161 23492.1555,-133.4037 23492.1643,-135.8537"/>
<text text-anchor="middle" x="20713.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.47%</text>
<text text-anchor="middle" x="20713.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d0f73">232590×</text>
</g>
<!-- std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) -->
<g id="node77" class="node">
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</title>
<polygon fill="#0d1776" stroke="#0d1776" points="20568.5,-413 19574.5,-413 19574.5,-350 20568.5,-350 20568.5,-413"/>
<text text-anchor="middle" x="20071.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="20071.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</text>
<text text-anchor="middle" x="20071.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">2.34%</text>
<text text-anchor="middle" x="20071.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.33%)</text>
<text text-anchor="middle" x="20071.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">426130×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const&#45;&gt;std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) -->
<g id="edge91" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end() const&#45;&gt;std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M19979.4896,-452.7562C19994.6593,-441.0082 20011.9164,-427.6437 20027.3546,-415.6878"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="20028.3996,-416.4279 20030.4168,-413.3163 20026.8995,-414.4909 20028.3996,-416.4279"/>
<text text-anchor="middle" x="20035.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1274">1.28%</text>
<text text-anchor="middle" x="20035.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1274">232590×</text>
</g>
<!-- std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;mcount -->
<g id="edge141" class="edge">
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M20312.8167,-349.9653C20436.0967,-330.3877 20570.8125,-302.5676 20622.5,-269 20651.3577,-250.2588 20643.9604,-231.0976 20667.5,-206 20682.4107,-190.1024 20685.0204,-182.4598 20705.5,-175 20774.1223,-150.004 23162.2915,-136.4488 23491.9151,-134.6953"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="23492.2044,-135.9188 23495.6978,-134.6752 23492.1913,-133.4689 23492.2044,-135.9188"/>
<text text-anchor="middle" x="20686.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.85%</text>
<text text-anchor="middle" x="20686.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d1074">426130×</text>
</g>
<!-- std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;::_Node_iterator_base(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) -->
<g id="node98" class="node">
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;::_Node_iterator_base(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="20618,-269 19657,-269 19657,-206 20618,-206 20618,-269"/>
<text text-anchor="middle" x="20137.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="20137.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;::_Node_iterator_base(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</text>
<text text-anchor="middle" x="20137.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">1.32%</text>
<text text-anchor="middle" x="20137.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.35%)</text>
<text text-anchor="middle" x="20137.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">485358×</text>
</g>
<!-- std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;::_Node_iterator_base(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) -->
<g id="edge142" class="edge">
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;::_Node_iterator_base(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M20085.984,-349.8986C20096.4724,-327.0148 20110.6504,-296.0809 20121.4775,-272.4581"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="20122.7051,-272.7198 20123.0498,-269.0277 20120.4779,-271.699 20122.7051,-272.7198"/>
<text text-anchor="middle" x="20136.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.16%</text>
<text text-anchor="middle" x="20136.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1274">426130×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="edge92" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M23621.4565,-1275.9762C23190.1082,-1235.1474 22442.357,-1164.3699 22009.2198,-1123.3718"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="22009.3275,-1122.1516 22005.7276,-1123.0413 22009.0965,-1124.5907 22009.3275,-1122.1516"/>
<text text-anchor="middle" x="23518" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.41%</text>
<text text-anchor="middle" x="23518" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d0e73">28809×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="edge93" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<path fill="none" stroke="#0d1475" stroke-width=".5" d="M23954.5,-1275.8986C23954.5,-1253.1085 23954.5,-1222.3344 23954.5,-1198.749"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width=".5" points="23955.7251,-1198.5277 23954.5,-1195.0277 23953.2751,-1198.5277 23955.7251,-1198.5277"/>
<text text-anchor="middle" x="23971" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d1475">1.72%</text>
<text text-anchor="middle" x="23971" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d1475">28809×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="node79" class="node">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const</title>
<polygon fill="#0d2c7c" stroke="#0d2c7c" points="26903.5,-619 25551.5,-619 25551.5,-556 26903.5,-556 26903.5,-619"/>
<text text-anchor="middle" x="26227.5" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="26227.5" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const</text>
<text text-anchor="middle" x="26227.5" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">6.97%</text>
<text text-anchor="middle" x="26227.5" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.20%)</text>
<text text-anchor="middle" x="26227.5" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">243484×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge94" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;)&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M24986.023,-1300.1801C26341.6351,-1287.071 28552.5,-1252.1086 28552.5,-1163.5 28552.5,-1163.5 28552.5,-1163.5 28552.5,-875.5 28552.5,-769.815 26756.5216,-786.5768 26653.5,-763 26518.144,-732.0234 26370.4745,-662.3588 26289.4305,-620.7186"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="26289.7715,-619.5164 26286.099,-619.0034 26288.65,-621.6947 26289.7715,-619.5164"/>
<text text-anchor="middle" x="28569" y="-950.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.82%</text>
<text text-anchor="middle" x="28569" y="-939.5" font-family="Arial" font-size="10.00" fill="#0d1074">28809×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount -->
<g id="edge123" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M26714.4475,-555.9692C26815.1547,-545.4262 26896.8875,-532.1482 26916.5,-516 26949.6237,-488.7271 26947.8882,-463.867 26938.5,-422 26936.5642,-413.3673 26909.7805,-357.0985 26904.5,-350 26900.9311,-345.2025 26897.6667,-346.072 26894.5,-341 26879.0775,-316.2988 26891.1799,-303.1495 26876.5,-278 26853.8444,-239.1866 26844.2744,-228.7222 26805.5,-206 26760.5687,-179.6698 26744.0663,-182.2813 26692.5,-175 26529.9626,-152.0491 23911.4102,-136.6381 23566.8176,-134.7057"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.6171,-133.4796 23563.1102,-134.6849 23566.6033,-135.9296 23566.6171,-133.4796"/>
<text text-anchor="middle" x="26953.5" y="-384.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="26953.5" y="-373.5" font-family="Arial" font-size="10.00" fill="#0d0f73">243484×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const -->
<g id="node91" class="node">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const</title>
<polygon fill="#0d1274" stroke="#0d1274" points="26519.5,-413 25327.5,-413 25327.5,-350 26519.5,-350 26519.5,-413"/>
<text text-anchor="middle" x="25923.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="25923.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const</text>
<text text-anchor="middle" x="25923.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">1.25%</text>
<text text-anchor="middle" x="25923.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.15%)</text>
<text text-anchor="middle" x="25923.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">243484×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const -->
<g id="edge124" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M26180.998,-555.9888C26124.7873,-517.8986 26030.5938,-454.0702 25973.05,-415.0766"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="25973.5814,-413.957 25969.9968,-413.0077 25972.207,-415.9852 25973.5814,-413.957"/>
<text text-anchor="middle" x="26138.5" y="-487.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.25%</text>
<text text-anchor="middle" x="26138.5" y="-476.5" font-family="Arial" font-size="10.00" fill="#0d1274">243484×</text>
</g>
<!-- std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="node94" class="node">
<title>std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const</title>
<polygon fill="#0d2379" stroke="#0d2379" points="26911.5,-516 26545.5,-516 26545.5,-453 26911.5,-453 26911.5,-516"/>
<text text-anchor="middle" x="26728.5" y="-504" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="26728.5" y="-493" font-family="Arial" font-size="10.00" fill="#ffffff">std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const</text>
<text text-anchor="middle" x="26728.5" y="-482" font-family="Arial" font-size="10.00" fill="#ffffff">5.04%</text>
<text text-anchor="middle" x="26728.5" y="-471" font-family="Arial" font-size="10.00" fill="#ffffff">(0.33%)</text>
<text text-anchor="middle" x="26728.5" y="-460" font-family="Arial" font-size="10.00" fill="#ffffff">243484×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge125" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0d2379" stroke-width=".5" d="M26380.8799,-555.9668C26441.2456,-543.5563 26510.5144,-529.3154 26571.2513,-516.8286"/>
<polygon fill="#0d2379" stroke="#0d2379" stroke-width=".5" points="26571.6892,-517.9893 26574.8707,-516.0845 26571.1957,-515.5894 26571.6892,-517.9893"/>
<text text-anchor="middle" x="26541.5" y="-539" font-family="Arial" font-size="10.00" fill="#0d2379">5.04%</text>
<text text-anchor="middle" x="26541.5" y="-528" font-family="Arial" font-size="10.00" fill="#0d2379">243484×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount -->
<g id="edge95" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M19598.3686,-1275.9397C19582.254,-1273.1921 19570.2745,-1270.2179 19563.5,-1267 19524.2885,-1248.3747 19524.4796,-1229.0081 19497.5,-1195 19355.9911,-1016.6263 19375.6945,-926.5574 19208.5,-772 19114.0597,-684.6978 19077.8066,-673.464 18957.5,-628 18938.8283,-620.944 18927.0248,-633.6799 18913.5,-619 18888.324,-591.6739 18903.5,-573.1557 18903.5,-536 18903.5,-536 18903.5,-536 18903.5,-237.5 18903.5,-179.4971 19071.3446,-194.9794 19711.5,-175 20503.6626,-150.2764 23147.0911,-136.4043 23492.227,-134.6825"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23492.4455,-135.9066 23495.9393,-134.664 23492.4333,-133.4566 23492.4455,-135.9066"/>
<text text-anchor="middle" x="19123.5" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.43%</text>
<text text-anchor="middle" x="19123.5" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d0f73">213065×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="edge96" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index(StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<path fill="none" stroke="#0d1a77" stroke-width=".5" d="M20466.5725,-1275.9762C20733.0143,-1235.2174 21194.5617,-1164.6124 21462.7733,-1123.5828"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width=".5" points="21463.0391,-1124.7815 21466.3136,-1123.0413 21462.6686,-1122.3597 21463.0391,-1124.7815"/>
<text text-anchor="middle" x="20954.5" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d1a77">3.04%</text>
<text text-anchor="middle" x="20954.5" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d1a77">213065×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const -->
<g id="edge97" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node(unsigned long, StateAction&lt;int, int&gt; const&amp;, unsigned long) const</title>
<path fill="none" stroke="#0d4883" stroke-width=".5" d="M21116.4227,-1275.9855C21164.5024,-1273.2122 21212.1171,-1270.2214 21258.5,-1267 21543.6324,-1247.1971 21613.1765,-1220.8275 21898.5,-1204 21949.733,-1200.9784 22369.8512,-1192.4984 22817.087,-1184.0739"/>
<polygon fill="#0d4883" stroke="#0d4883" stroke-width=".5" points="22817.2242,-1185.2967 22820.7005,-1184.0059 22817.178,-1182.8471 22817.2242,-1185.2967"/>
<text text-anchor="middle" x="21917.5" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d4883">12.53%</text>
<text text-anchor="middle" x="21917.5" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d4883">213065×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*) -->
<g id="edge99" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::__detail::_Node_const_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;::_Node_const_iterator(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M19944.9289,-1275.9968C19735.7088,-1250.6628 19499.5,-1211.4443 19499.5,-1163.5 19499.5,-1163.5 19499.5,-1163.5 19499.5,-659.5 19499.5,-613.2858 19522.5376,-588.3152 19489.5,-556 19468.0741,-535.0426 18971.8922,-537.9646 18951.5,-516 18932.4491,-495.4801 18932.3421,-473.4199 18951.5,-453 18973.9494,-429.0718 19282.9331,-410.5271 19570.6616,-398.3263"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="19571.0253,-399.5371 19574.4704,-398.1651 19570.9217,-397.0893 19571.0253,-399.5371"/>
<text text-anchor="middle" x="19518.5" y="-806.5" font-family="Arial" font-size="10.00" fill="#0d1174">1.06%</text>
<text text-anchor="middle" x="19518.5" y="-795.5" font-family="Arial" font-size="10.00" fill="#0d1174">193540×</text>
</g>
<!-- std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge98" class="edge">
<title>std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0d277b" stroke-width=".5" d="M20887.2009,-1275.9947C20922.8365,-1273.0843 20953.1752,-1270.0709 20975.5,-1267 21104.4443,-1249.2627 21132.5263,-1221.5217 21261.5,-1204 21429.089,-1181.2322 22656.8444,-1237.3042 22781.5,-1123 22826.1586,-1082.0498 22760.3828,-1033.4084 22800.5,-988 22848.3805,-933.8044 23412.2881,-849.8664 23454.5,-844 24250.0773,-733.435 25180.9084,-658.3496 25736.386,-619.2586"/>
<polygon fill="#0d277b" stroke="#0d277b" stroke-width=".5" points="25736.6448,-620.4685 25740.0502,-619.0009 25736.4729,-618.0246 25736.6448,-620.4685"/>
<text text-anchor="middle" x="23053.5" y="-950.5" font-family="Arial" font-size="10.00" fill="#0d277b">6.10%</text>
<text text-anchor="middle" x="23053.5" y="-939.5" font-family="Arial" font-size="10.00" fill="#0d277b">213065×</text>
</g>
<!-- std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2&#45;&gt;operator delete(void*) -->
<g id="edge102" class="edge">
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2&#45;&gt;operator delete(void*)</title>
<path fill="none" stroke="#0d2d7c" stroke-width=".5" d="M32307.6803,-1275.8986C32349.71,-1252.2569 32407.0145,-1220.0231 32449.481,-1196.1357"/>
<polygon fill="#0d2d7c" stroke="#0d2d7c" stroke-width=".5" points="32450.3194,-1197.0697 32452.7693,-1194.286 32449.1182,-1194.9343 32450.3194,-1197.0697"/>
<text text-anchor="middle" x="32453" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d2d7c">7.20%</text>
<text text-anchor="middle" x="32453" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d2d7c">2336225×</text>
</g>
<!-- std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2&#45;&gt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2 -->
<g id="edge103" class="edge">
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2&#45;&gt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;int&gt;*)&#39;2</title>
<path fill="none" stroke="#0d3b80" stroke-width=".5" d="M32514.5415,-1313.7194C32520.3014,-1311.9637 32523.5,-1309.8906 32523.5,-1307.5 32523.5,-1305.6323 32521.5477,-1303.9584 32517.9471,-1302.4783"/>
<polygon fill="#0d3b80" stroke="#0d3b80" stroke-width=".5" points="32518.2497,-1301.2863 32514.5415,-1301.2806 32517.4368,-1303.5975 32518.2497,-1301.2863"/>
<text text-anchor="middle" x="32545" y="-1305" font-family="Arial" font-size="10.00" fill="#0d3b80">2336225×</text>
</g>
<!-- std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2&#45;&gt;operator new(unsigned long) -->
<g id="edge107" class="edge">
<title>std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2&#45;&gt;operator new(unsigned long)</title>
<path fill="none" stroke="#0d247a" stroke-width=".5" d="M33843.0565,-1275.9876C33978.7038,-1246.2114 34176.7083,-1202.7469 34282.482,-1179.5284"/>
<polygon fill="#0d247a" stroke="#0d247a" stroke-width=".5" points="34283.0496,-1180.658 34286.2055,-1178.711 34282.5242,-1178.265 34283.0496,-1180.658"/>
<text text-anchor="middle" x="34183" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d247a">5.42%</text>
<text text-anchor="middle" x="34183" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d247a">2325390×</text>
</g>
<!-- std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2&#45;&gt;std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2 -->
<g id="edge108" class="edge">
<title>std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2&#45;&gt;std::_Rb_tree_node&lt;int&gt;* std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;int&gt; const*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_Alloc_node&amp;)&#39;2</title>
<path fill="none" stroke="#0d347e" stroke-width=".5" d="M34500.4128,-1311.2104C34506.0273,-1310.0727 34509,-1308.8359 34509,-1307.5 34509,-1306.498 34507.3278,-1305.5519 34504.1232,-1304.6615"/>
<polygon fill="#0d347e" stroke="#0d347e" stroke-width=".5" points="34504.1002,-1303.3978 34500.4128,-1303.7896 34503.5398,-1305.7828 34504.1002,-1303.3978"/>
<text text-anchor="middle" x="34528" y="-1305" font-family="Arial" font-size="10.00" fill="#0d347e">775130×</text>
</g>
<!-- std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;mcount -->
<g id="edge110" class="edge">
<title>std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M27712.638,-699.8922C27722.7618,-696.9654 27732.8253,-693.9787 27742.5,-691 27753.8801,-687.4963 28546.5787,-422.6891 28553.5,-413 28626.8801,-310.2747 28439.653,-220.6313 28412.5,-206 28349.1186,-171.8473 28325.1335,-182.2281 28253.5,-175 28006.422,-150.069 23997.5907,-136.0581 23566.9109,-134.6226"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23566.7115,-133.397 23563.2074,-134.6103 23566.7033,-135.847 23566.7115,-133.397"/>
<text text-anchor="middle" x="28549.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="28549.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d0f74">293675×</text>
</g>
<!-- std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;_ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_ -->
<g id="edge109" class="edge">
<title>std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;_ZNKSt8__detail10_Select1stclIRSt4pairIK11StateActionIiiE21DirichletDistributionEEEDTclsr3stdE3getIXLi0EEEclsr3stdE7forwardIT_Efp_EEEOS9_</title>
<path fill="none" stroke="#0d1676" stroke-width=".5" d="M27591.436,-699.9664C27586.953,-653.8284 27578.6312,-568.1836 27573.9426,-519.9299"/>
<polygon fill="#0d1676" stroke="#0d1676" stroke-width=".5" points="27575.1415,-519.6012 27573.5837,-516.2361 27572.703,-519.8382 27575.1415,-519.6012"/>
<text text-anchor="middle" x="27601.5" y="-590.5" font-family="Arial" font-size="10.00" fill="#0d1676">2.29%</text>
<text text-anchor="middle" x="27601.5" y="-579.5" font-family="Arial" font-size="10.00" fill="#0d1676">220739×</text>
</g>
<!-- std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v() -->
<g id="node85" class="node">
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v()</title>
<polygon fill="#0d1676" stroke="#0d1676" points="27402.5,-619 26912.5,-619 26912.5,-556 27402.5,-556 27402.5,-619"/>
<text text-anchor="middle" x="27157.5" y="-607" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="27157.5" y="-596" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v()</text>
<text text-anchor="middle" x="27157.5" y="-585" font-family="Arial" font-size="10.00" fill="#ffffff">2.29%</text>
<text text-anchor="middle" x="27157.5" y="-574" font-family="Arial" font-size="10.00" fill="#ffffff">(0.12%)</text>
<text text-anchor="middle" x="27157.5" y="-563" font-family="Arial" font-size="10.00" fill="#ffffff">222831×</text>
</g>
<!-- std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v() -->
<g id="edge111" class="edge">
<title>std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v()</title>
<path fill="none" stroke="#0d1676" stroke-width=".5" d="M27498.8686,-699.9876C27427.161,-676.3585 27329.2946,-644.1096 27256.731,-620.1985"/>
<polygon fill="#0d1676" stroke="#0d1676" stroke-width=".5" points="27257.0025,-618.9983 27253.2949,-619.0663 27256.2357,-621.3252 27257.0025,-618.9983"/>
<text text-anchor="middle" x="27483.5" y="-662.5" font-family="Arial" font-size="10.00" fill="#0d1676">2.27%</text>
<text text-anchor="middle" x="27483.5" y="-651.5" font-family="Arial" font-size="10.00" fill="#0d1676">220739×</text>
</g>
<!-- std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const -->
<g id="node86" class="node">
<title>std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const</title>
<polygon fill="#0d1274" stroke="#0d1274" points="28548.5,-413 28036.5,-413 28036.5,-350 28548.5,-350 28548.5,-413"/>
<text text-anchor="middle" x="28292.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="28292.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const</text>
<text text-anchor="middle" x="28292.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">1.37%</text>
<text text-anchor="middle" x="28292.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.21%)</text>
<text text-anchor="middle" x="28292.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">220739×</text>
</g>
<!-- std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge112" class="edge">
<title>std::__detail::_Equal_helper&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, unsigned long, true&gt;::_S_equals(std::equal_to&lt;StateAction&lt;int, int&gt; &gt; const&amp;, std::__detail::_Select1st const&amp;, StateAction&lt;int, int&gt; const&amp;, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M27657.3652,-699.9773C27788.9459,-633.9985 28092.261,-481.9064 28226.5113,-414.5889"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="28227.0713,-415.6785 28229.6509,-413.0146 28225.9731,-413.4884 28227.0713,-415.6785"/>
<text text-anchor="middle" x="28018.5" y="-539" font-family="Arial" font-size="10.00" fill="#0d1274">1.37%</text>
<text text-anchor="middle" x="28018.5" y="-528" font-family="Arial" font-size="10.00" fill="#0d1274">220739×</text>
</g>
<!-- std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v()&#45;&gt;mcount -->
<g id="edge126" class="edge">
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v()&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M27119.0548,-555.8229C27081.9613,-523.4148 27026.5603,-469.8744 26992.5,-413 26977.3359,-387.6788 26994.1385,-368.937 26971.5,-350 26950.1426,-332.1347 26930.4643,-359.3251 26909.5,-341 26887.575,-321.8351 26903.5948,-304.4899 26891.5,-278 26875.6281,-243.2375 26874.9011,-229.1542 26844.5,-206 26808.4945,-178.5773 26792.1742,-182.2534 26747.5,-175 26582.5692,-148.2216 23915.3432,-136.1226 23566.9272,-134.6536"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.6847,-133.4277 23563.1796,-134.6378 23566.6743,-135.8777 23566.6847,-133.4277"/>
<text text-anchor="middle" x="27011.5" y="-384.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.45%</text>
<text text-anchor="middle" x="27011.5" y="-373.5" font-family="Arial" font-size="10.00" fill="#0d0f73">222831×</text>
</g>
<!-- std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v()&#45;&gt;std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr() -->
<g id="edge127" class="edge">
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_v()&#45;&gt;std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()</title>
<path fill="none" stroke="#0d1475" stroke-width=".5" d="M26912.4223,-556.2864C26911.1114,-556.1888 26909.8039,-556.0933 26908.5,-556 26902.3575,-555.5602 23897.4612,-504.394 22986.9296,-488.8975"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width=".5" points="22986.7885,-487.67 22983.2681,-488.8351 22986.7467,-490.1196 22986.7885,-487.67"/>
<text text-anchor="middle" x="26406.5" y="-539" font-family="Arial" font-size="10.00" fill="#0d1475">1.72%</text>
<text text-anchor="middle" x="26406.5" y="-528" font-family="Arial" font-size="10.00" fill="#0d1475">222831×</text>
</g>
<!-- std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount -->
<g id="edge147" class="edge">
<title>std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M28321.8282,-349.8864C28353.4961,-311.8706 28394.8372,-247.9523 28358.5,-206 28295.2919,-133.0245 28239.7651,-182.3291 28143.5,-175 27660.9188,-138.2587 23977.7217,-134.794 23566.7431,-134.5211"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.7062,-133.2962 23563.2053,-134.5188 23566.7045,-135.7462 23566.7062,-133.2962"/>
<text text-anchor="middle" x="28391.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.44%</text>
<text text-anchor="middle" x="28391.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f73">220739×</text>
</g>
<!-- std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;StateAction&lt;int, int&gt;::operator==(StateAction&lt;int, int&gt; const&amp;) const -->
<g id="edge146" class="edge">
<title>std::equal_to&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;, StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;StateAction&lt;int, int&gt;::operator==(StateAction&lt;int, int&gt; const&amp;) const</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M28271.2129,-349.8986C28255.735,-326.921 28234.7899,-295.8272 28218.8528,-272.1681"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="28219.7088,-271.2461 28216.7374,-269.0277 28217.6768,-272.6149 28219.7088,-271.2461"/>
<text text-anchor="middle" x="28282.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.72%</text>
<text text-anchor="middle" x="28282.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1074">220739×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const&#45;&gt;mcount -->
<g id="edge121" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M21360.2895,-349.9126C21285.3311,-316.0395 21192.1006,-259.8363 21243.5,-206 21284.0006,-163.5792 23197.9558,-138.5462 23491.8102,-134.9501"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23492.1216,-136.1715 23495.6063,-134.9037 23492.0916,-133.7216 23492.1216,-136.1715"/>
<text text-anchor="middle" x="21262.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.64%</text>
<text text-anchor="middle" x="21262.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f74">319766×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt; const&amp;) -->
<g id="node93" class="node">
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="22099.5,-269 21285.5,-269 21285.5,-206 22099.5,-206 22099.5,-269"/>
<text text-anchor="middle" x="21692.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="21692.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt; const&amp;)</text>
<text text-anchor="middle" x="21692.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.80%</text>
<text text-anchor="middle" x="21692.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.16%)</text>
<text text-anchor="middle" x="21692.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">319772×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt; const&amp;) -->
<g id="edge122" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M21495.8025,-349.8986C21536.7519,-326.4989 21592.431,-294.6823 21634.099,-270.872"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="21634.8955,-271.8278 21637.3265,-269.0277 21633.6799,-269.7006 21634.8955,-271.8278"/>
<text text-anchor="middle" x="21636.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.80%</text>
<text text-anchor="middle" x="21636.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1074">319766×</text>
</g>
<!-- std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const&#45;&gt;mcount -->
<g id="edge140" class="edge">
<title>std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M21073.0764,-277.8735C21108.2561,-245.0402 21168.5186,-195.6489 21231.5,-175 21343.3922,-138.3154 23203.2471,-134.8485 23491.9669,-134.5311"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23492.1993,-135.756 23495.6979,-134.5271 23492.1966,-133.306 23492.1993,-135.756"/>
<text text-anchor="middle" x="21184.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.64%</text>
<text text-anchor="middle" x="21184.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f74">319772×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const&#45;&gt;mcount -->
<g id="edge117" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M23313.3256,-349.9711C23398.1008,-330.0865 23489.6008,-301.9615 23516.5,-269 23538.9488,-241.492 23539.3978,-199.4992 23536.0133,-169.763"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23537.2188,-169.527 23535.5828,-166.1992 23534.7865,-169.8209 23537.2188,-169.527"/>
<text text-anchor="middle" x="23555.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="23555.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f74">293675×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt; const&amp;) -->
<g id="node90" class="node">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="23511.5,-269 22789.5,-269 22789.5,-206 23511.5,-206 23511.5,-269"/>
<text text-anchor="middle" x="23150.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="23150.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt; const&amp;)</text>
<text text-anchor="middle" x="23150.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.74%</text>
<text text-anchor="middle" x="23150.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.15%)</text>
<text text-anchor="middle" x="23150.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">293678×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt; const&amp;) -->
<g id="edge118" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_extract() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M23150.5,-349.8986C23150.5,-327.1085 23150.5,-296.3344 23150.5,-272.749"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="23151.7251,-272.5277 23150.5,-269.0277 23149.2751,-272.5277 23151.7251,-272.5277"/>
<text text-anchor="middle" x="23169.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.74%</text>
<text text-anchor="middle" x="23169.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1074">293675×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt; const&amp;)&#45;&gt;mcount -->
<g id="edge136" class="edge">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::__detail::_Select1st, true&gt; const&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M23266.5299,-205.9668C23343.6825,-184.9992 23440.0599,-158.8069 23492.056,-144.6761"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23492.6659,-145.7798 23495.7222,-143.6797 23492.0234,-143.4156 23492.6659,-145.7798"/>
<text text-anchor="middle" x="23392.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="23392.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d0f74">293678×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const&#45;&gt;mcount -->
<g id="edge119" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M25891.9753,-349.9161C25843.3379,-301.5474 25753.5995,-213.8598 25734.5,-206 25630.141,-163.0544 23848.6392,-138.5772 23566.8932,-134.9669"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.7657,-133.7403 23563.2503,-134.9204 23566.7343,-136.1901 23566.7657,-133.7403"/>
<text text-anchor="middle" x="25825.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="25825.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f73">243484×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;) -->
<g id="node92" class="node">
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="25729.5,-269 24927.5,-269 24927.5,-206 25729.5,-206 25729.5,-269"/>
<text text-anchor="middle" x="25328.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="25328.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)</text>
<text text-anchor="middle" x="25328.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.61%</text>
<text text-anchor="middle" x="25328.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.12%)</text>
<text text-anchor="middle" x="25328.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">243484×</text>
</g>
<!-- std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;) -->
<g id="edge120" class="edge">
<title>std::__detail::_Hash_code_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M25781.9359,-349.972C25768.9321,-346.9781 25755.9667,-343.9567 25743.5,-341 25646.5816,-318.0143 25537.2879,-290.6998 25455.1979,-269.904"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="25455.4937,-268.7153 25451.8,-269.043 25454.8919,-271.0903 25455.4937,-268.7153"/>
<text text-anchor="middle" x="25762.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.61%</text>
<text text-anchor="middle" x="25762.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d0f74">243484×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)&#45;&gt;mcount -->
<g id="edge138" class="edge">
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M24927.2317,-211.3334C24897.5449,-209.495 24868.0549,-207.6989 24839.5,-206 24335.5868,-176.0186 23722.3345,-144.3596 23566.7493,-136.3991"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.7175,-135.1709 23563.1595,-136.2155 23566.5923,-137.6177 23566.7175,-135.1709"/>
<text text-anchor="middle" x="24679.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="24679.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d0f73">243484×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt; const&amp;)&#45;&gt;mcount -->
<g id="edge139" class="edge">
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt; const&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M21854.1307,-205.9641C21921.393,-194.1332 22000.4547,-181.8942 22072.5,-175 22360.0315,-147.4854 23293.4119,-136.8365 23492.0939,-134.8537"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23492.3237,-136.0765 23495.8113,-134.8167 23492.2993,-133.6267 23492.3237,-136.0765"/>
<text text-anchor="middle" x="22091.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d0f74">0.64%</text>
<text text-anchor="middle" x="22091.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d0f74">319772×</text>
</g>
<!-- std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount -->
<g id="edge148" class="edge">
<title>std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M26833.6064,-452.8201C26851.043,-442.8605 26866.879,-429.8772 26877.5,-413 26892.4133,-389.3021 26896.8786,-370.2107 26877.5,-350 26861.0291,-332.8218 26684.9793,-351.248 26663.5,-341 26591.3126,-306.5586 26616.2695,-241.3041 26544.5,-206 26357.0521,-113.7925 26284.2241,-183.5529 26075.5,-175 25556.0358,-153.714 23841.8368,-137.3534 23566.8628,-134.8367"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="23566.8171,-133.6114 23563.306,-134.8042 23566.7946,-136.0612 23566.8171,-133.6114"/>
<text text-anchor="middle" x="26682.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.49%</text>
<text text-anchor="middle" x="26682.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d0f73">243484×</text>
</g>
<!-- std::hash&lt;int&gt;::operator()(int) const -->
<g id="node99" class="node">
<title>std::hash&lt;int&gt;::operator()(int) const</title>
<polygon fill="#0d1274" stroke="#0d1274" points="26875.5,-341 26705.5,-341 26705.5,-278 26875.5,-278 26875.5,-341"/>
<text text-anchor="middle" x="26790.5" y="-329" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="26790.5" y="-318" font-family="Arial" font-size="10.00" fill="#ffffff">std::hash&lt;int&gt;::operator()(int) const</text>
<text text-anchor="middle" x="26790.5" y="-307" font-family="Arial" font-size="10.00" fill="#ffffff">1.29%</text>
<text text-anchor="middle" x="26790.5" y="-296" font-family="Arial" font-size="10.00" fill="#ffffff">(0.31%)</text>
<text text-anchor="middle" x="26790.5" y="-285" font-family="Arial" font-size="10.00" fill="#ffffff">486973×</text>
</g>
<!-- std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::hash&lt;int&gt;::operator()(int) const -->
<g id="edge149" class="edge">
<title>std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;std::hash&lt;int&gt;::operator()(int) const</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M26880.8963,-452.9419C26885.9367,-450.1692 26889.9168,-447.1914 26892.5,-444 26901.5484,-432.8213 26907.3372,-370.3093 26893.5,-350 26892.0563,-347.8811 26886.7372,-344.8852 26879.2214,-341.4701"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="26879.5667,-340.2832 26875.8707,-339.9822 26878.5723,-342.5223 26879.5667,-340.2832"/>
<text text-anchor="middle" x="26917.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1274">1.29%</text>
<text text-anchor="middle" x="26917.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1274">486968×</text>
</g>
<!-- void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;) -->
<g id="node100" class="node">
<title>void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;)</title>
<polygon fill="#0d1976" stroke="#0d1976" points="26873,-413 26528,-413 26528,-350 26873,-350 26873,-413"/>
<text text-anchor="middle" x="26700.5" y="-401" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="26700.5" y="-390" font-family="Arial" font-size="10.00" fill="#ffffff">void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;)</text>
<text text-anchor="middle" x="26700.5" y="-379" font-family="Arial" font-size="10.00" fill="#ffffff">2.93%</text>
<text text-anchor="middle" x="26700.5" y="-368" font-family="Arial" font-size="10.00" fill="#ffffff">(0.66%)</text>
<text text-anchor="middle" x="26700.5" y="-357" font-family="Arial" font-size="10.00" fill="#ffffff">486968×</text>
</g>
<!-- std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;) -->
<g id="edge150" class="edge">
<title>std::hash&lt;StateAction&lt;int, int&gt; &gt;::operator()(StateAction&lt;int, int&gt; const&amp;) const&#45;&gt;void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;)</title>
<path fill="none" stroke="#0d1976" stroke-width=".5" d="M26719.8706,-452.7562C26716.7834,-441.3998 26713.2856,-428.5328 26710.12,-416.888"/>
<polygon fill="#0d1976" stroke="#0d1976" stroke-width=".5" points="26711.2494,-416.3724 26709.1491,-413.3163 26708.8852,-417.0151 26711.2494,-416.3724"/>
<text text-anchor="middle" x="26735.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1976">2.93%</text>
<text text-anchor="middle" x="26735.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1976">486968×</text>
</g>
<!-- std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()&#45;&gt;mcount -->
<g id="edge129" class="edge">
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M22600.9164,-452.9977C22565.5885,-441.5642 22534.0044,-427.7887 22523.5,-413 22507.2857,-390.1725 22513.5493,-376.1722 22523.5,-350 22538.7155,-309.9803 22550.508,-299.5563 22587.5,-278 22603.9942,-268.3883 22615.9424,-282.4401 22629.5,-269 22659.901,-238.8624 22617.7182,-202.529 22650.5,-175 22683.1819,-147.5549 23328.7254,-137.1626 23492.1551,-134.9657"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="23492.4422,-136.1871 23495.9255,-134.9153 23492.4094,-133.7373 23492.4422,-136.1871"/>
<text text-anchor="middle" x="22606.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1174">0.92%</text>
<text text-anchor="middle" x="22606.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1174">456514×</text>
</g>
<!-- std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()&#45;&gt;__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr() -->
<g id="edge128" class="edge">
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_valptr()&#45;&gt;__gnu_cxx::__aligned_buffer&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;::_M_ptr()</title>
<path fill="none" stroke="#0d1676" stroke-width=".5" d="M22498.8437,-452.8704C22490.5784,-450.1204 22483.65,-447.1667 22478.5,-444 22468.2011,-437.6672 22472.6429,-428.5799 22462.5,-422 22458.4066,-419.3445 22452.8183,-416.7741 22446.1232,-414.3032"/>
<polygon fill="#0d1676" stroke="#0d1676" stroke-width=".5" points="22446.4574,-413.1219 22442.7493,-413.0983 22445.6334,-415.4291 22446.4574,-413.1219"/>
<text text-anchor="middle" x="22497.5" y="-436" font-family="Arial" font-size="10.00" fill="#0d1676">2.32%</text>
<text text-anchor="middle" x="22497.5" y="-425" font-family="Arial" font-size="10.00" fill="#0d1676">456514×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const&#45;&gt;mcount -->
<g id="edge130" class="edge">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M24349.614,-349.9954C24235.5715,-329.8868 24088.4754,-301.5274 23959.5,-269 23812.0473,-231.8126 23640.559,-173.537 23566.5828,-147.6504"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23566.8426,-146.4434 23563.1343,-146.4424 23566.0325,-148.7557 23566.8426,-146.4434"/>
<text text-anchor="middle" x="23978.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="23978.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d0f74">293675×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;) -->
<g id="node97" class="node">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="24835,-269 24002,-269 24002,-206 24835,-206 24835,-269"/>
<text text-anchor="middle" x="24418.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="24418.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)</text>
<text text-anchor="middle" x="24418.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.74%</text>
<text text-anchor="middle" x="24418.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.15%)</text>
<text text-anchor="middle" x="24418.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">293675×</text>
</g>
<!-- std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;) -->
<g id="edge131" class="edge">
<title>std::__detail::_Hashtable_base&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq() const&#45;&gt;std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M24514.5071,-349.8986C24494.8003,-326.8272 24468.1043,-295.5733 24447.8652,-271.8787"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="24448.6346,-270.8934 24445.4299,-269.0277 24446.7717,-272.4847 24448.6346,-270.8934"/>
<text text-anchor="middle" x="24523.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.74%</text>
<text text-anchor="middle" x="24523.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1074">293675×</text>
</g>
<!-- std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)&#45;&gt;mcount -->
<g id="edge137" class="edge">
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt;::_S_cget(std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, true&gt; const&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M24146.3348,-205.9668C23935.9017,-181.5859 23664.4971,-150.1408 23566.6868,-138.8085"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="23566.6181,-137.5674 23563.0003,-138.3814 23566.336,-140.0011 23566.6181,-137.5674"/>
<text text-anchor="middle" x="24072.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d0f74">0.59%</text>
<text text-anchor="middle" x="24072.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d0f74">293675×</text>
</g>
<!-- std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;::_Node_iterator_base(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;mcount -->
<g id="edge145" class="edge">
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;::_Node_iterator_base(std::__detail::_Hash_node&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, true&gt;*)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M20334.7737,-205.9838C20418.6225,-193.9622 20517.6048,-181.5769 20607.5,-175 20908.3319,-152.9907 23171.8991,-136.9223 23491.9251,-134.7508"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="23492.1086,-135.9747 23495.6002,-134.7259 23492.092,-133.5248 23492.1086,-135.9747"/>
<text text-anchor="middle" x="20626.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d1174">0.97%</text>
<text text-anchor="middle" x="20626.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d1174">485358×</text>
</g>
<!-- std::hash&lt;int&gt;::operator()(int) const&#45;&gt;mcount -->
<g id="edge151" class="edge">
<title>std::hash&lt;int&gt;::operator()(int) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M26772.8439,-277.8131C26752.6578,-245.1829 26716.2742,-196.1998 26669.5,-175 26595.2305,-141.3384 23915.9429,-135.2196 23566.8609,-134.5648"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="23566.6087,-133.3394 23563.1064,-134.5578 23566.6041,-135.7894 23566.6087,-133.3394"/>
<text text-anchor="middle" x="26784.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d1174">0.98%</text>
<text text-anchor="middle" x="26784.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d1174">486973×</text>
</g>
<!-- void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;)&#45;&gt;mcount -->
<g id="edge164" class="edge">
<title>void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;)&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M26658.4133,-349.777C26625.3305,-326.3987 26577.1853,-295.7052 26530.5,-278 26274.2375,-180.8136 26195.6416,-197.5679 25922.5,-175 25678.2241,-154.8171 23851.2685,-137.4329 23566.7114,-134.8347"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="23566.5448,-133.6082 23563.0338,-134.8012 23566.5224,-136.0581 23566.5448,-133.6082"/>
<text text-anchor="middle" x="26523.5" y="-240.5" font-family="Arial" font-size="10.00" fill="#0d1174">0.98%</text>
<text text-anchor="middle" x="26523.5" y="-229.5" font-family="Arial" font-size="10.00" fill="#0d1174">486968×</text>
</g>
<!-- std::hash&lt;unsigned long&gt;::operator()(unsigned long) const -->
<g id="node101" class="node">
<title>std::hash&lt;unsigned long&gt;::operator()(unsigned long) const</title>
<polygon fill="#0d1274" stroke="#0d1274" points="26126,-269 25857,-269 25857,-206 26126,-206 26126,-269"/>
<text text-anchor="middle" x="25991.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="25991.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">std::hash&lt;unsigned long&gt;::operator()(unsigned long) const</text>
<text text-anchor="middle" x="25991.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">1.29%</text>
<text text-anchor="middle" x="25991.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.31%)</text>
<text text-anchor="middle" x="25991.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">486968×</text>
</g>
<!-- void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;)&#45;&gt;std::hash&lt;unsigned long&gt;::operator()(unsigned long) const -->
<g id="edge165" class="edge">
<title>void hash_combine&lt;unsigned long&gt;(unsigned long&amp;, unsigned long const&amp;)&#45;&gt;std::hash&lt;unsigned long&gt;::operator()(unsigned long) const</title>
<path fill="none" stroke="#0d1274" stroke-width=".5" d="M26545.3452,-349.9876C26421.2501,-324.7835 26248.8678,-289.7722 26129.5246,-265.5332"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width=".5" points="26129.6832,-264.3155 26126.0093,-264.8192 26129.1955,-266.7165 26129.6832,-264.3155"/>
<text text-anchor="middle" x="26509.5" y="-312.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.29%</text>
<text text-anchor="middle" x="26509.5" y="-301.5" font-family="Arial" font-size="10.00" fill="#0d1274">486968×</text>
</g>
<!-- std::hash&lt;unsigned long&gt;::operator()(unsigned long) const&#45;&gt;mcount -->
<g id="edge152" class="edge">
<title>std::hash&lt;unsigned long&gt;::operator()(unsigned long) const&#45;&gt;mcount</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M25910.7901,-205.9332C25875.9041,-193.8238 25834.265,-181.3863 25795.5,-175 25680.9916,-156.1354 23852.4801,-137.6393 23566.8842,-134.8589"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="23566.7046,-133.6322 23563.1928,-134.823 23566.6807,-136.0821 23566.7046,-133.6322"/>
<text text-anchor="middle" x="25901.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d1174">0.98%</text>
<text text-anchor="middle" x="25901.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d1174">486968×</text>
</g>
<!-- std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt; &gt;(std::integral_constant&lt;bool, true&gt;, std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;) -->
<g id="node102" class="node">
<title>std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt; &gt;(std::integral_constant&lt;bool, true&gt;, std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="31759.5,-1195 28633.5,-1195 28633.5,-1132 31759.5,-1132 31759.5,-1195"/>
<text text-anchor="middle" x="30196.5" y="-1183" font-family="Arial" font-size="10.00" fill="#ffffff">test_tree_brl_policy</text>
<text text-anchor="middle" x="30196.5" y="-1172" font-family="Arial" font-size="10.00" fill="#ffffff">std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt; &gt;(std::integral_constant&lt;bool, true&gt;, std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</text>
<text text-anchor="middle" x="30196.5" y="-1161" font-family="Arial" font-size="10.00" fill="#ffffff">0.50%</text>
<text text-anchor="middle" x="30196.5" y="-1150" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="30196.5" y="-1139" font-family="Arial" font-size="10.00" fill="#ffffff">1610×</text>
</g>
<!-- std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::__detail::_Insert&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)&#45;&gt;std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt; &gt;(std::integral_constant&lt;bool, true&gt;, std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;) -->
<g id="edge154" class="edge">
<title>std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::__detail::_Insert&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, false&gt;::insert&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;, void&gt;(std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)&#45;&gt;std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, false, true&gt;, bool&gt; std::_Hashtable&lt;StateAction&lt;int, int&gt;, std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt;, std::allocator&lt;std::pair&lt;StateAction&lt;int, int&gt; const, DirichletDistribution&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;StateAction&lt;int, int&gt; &gt;, std::hash&lt;StateAction&lt;int, int&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt; &gt;(std::integral_constant&lt;bool, true&gt;, std::pair&lt;StateAction&lt;int, int&gt;, DirichletDistribution&gt;&amp;&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M30173.8642,-1275.8986C30178.4538,-1253.1085 30184.6514,-1222.3344 30189.4013,-1198.749"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="30190.6605,-1198.7007 30190.1507,-1195.0277 30188.2587,-1198.2169 30190.6605,-1198.7007"/>
<text text-anchor="middle" x="30201.5" y="-1238.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.50%</text>
<text text-anchor="middle" x="30201.5" y="-1227.5" font-family="Arial" font-size="10.00" fill="#0d0f73">1610×</text>
</g>
</g>
</svg>
